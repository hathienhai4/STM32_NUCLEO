
PROJECT_NUCLEO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f74  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  08004080  08004080  00014080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080040b8  080040b8  0002002c  2**0
                  CONTENTS
  4 .ARM          00000000  080040b8  080040b8  0002002c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080040b8  080040b8  0002002c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080040b8  080040b8  000140b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080040bc  080040bc  000140bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000002c  20000000  080040c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004f4  2000002c  080040ec  0002002c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000520  080040ec  00020520  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002002c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001197f  00000000  00000000  00020055  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000026bb  00000000  00000000  000319d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001010  00000000  00000000  00034090  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000f08  00000000  00000000  000350a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018ed9  00000000  00000000  00035fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013ffe  00000000  00000000  0004ee81  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008de03  00000000  00000000  00062e7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f0c82  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004280  00000000  00000000  000f0cd8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000002c 	.word	0x2000002c
 8000128:	00000000 	.word	0x00000000
 800012c:	08004068 	.word	0x08004068

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000030 	.word	0x20000030
 8000148:	08004068 	.word	0x08004068

0800014c <clearLed>:
 *  Created on: Nov 14, 2024
 *      Author: admin
 */
#include <RYG_LED.h>

void clearLed(){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	displayLed(-1);
 8000150:	f04f 30ff 	mov.w	r0, #4294967295
 8000154:	f000 f806 	bl	8000164 <displayLed>
	displayLed2(-1);
 8000158:	f04f 30ff 	mov.w	r0, #4294967295
 800015c:	f000 f848 	bl	80001f0 <displayLed2>
}
 8000160:	bf00      	nop
 8000162:	bd80      	pop	{r7, pc}

08000164 <displayLed>:

void displayLed(int state){
 8000164:	b580      	push	{r7, lr}
 8000166:	b082      	sub	sp, #8
 8000168:	af00      	add	r7, sp, #0
 800016a:	6078      	str	r0, [r7, #4]
	switch(state){
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	f240 124d 	movw	r2, #333	; 0x14d
 8000172:	4293      	cmp	r3, r2
 8000174:	d020      	beq.n	80001b8 <displayLed+0x54>
 8000176:	687b      	ldr	r3, [r7, #4]
 8000178:	f5b3 7fa7 	cmp.w	r3, #334	; 0x14e
 800017c:	da27      	bge.n	80001ce <displayLed+0x6a>
 800017e:	687b      	ldr	r3, [r7, #4]
 8000180:	2b6f      	cmp	r3, #111	; 0x6f
 8000182:	d003      	beq.n	800018c <displayLed+0x28>
 8000184:	687b      	ldr	r3, [r7, #4]
 8000186:	2bde      	cmp	r3, #222	; 0xde
 8000188:	d00b      	beq.n	80001a2 <displayLed+0x3e>
 800018a:	e020      	b.n	80001ce <displayLed+0x6a>
		case RED:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, 1);
 800018c:	2201      	movs	r2, #1
 800018e:	2108      	movs	r1, #8
 8000190:	4816      	ldr	r0, [pc, #88]	; (80001ec <displayLed+0x88>)
 8000192:	f001 fd1c 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, 1);
 8000196:	2201      	movs	r2, #1
 8000198:	2120      	movs	r1, #32
 800019a:	4814      	ldr	r0, [pc, #80]	; (80001ec <displayLed+0x88>)
 800019c:	f001 fd17 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 80001a0:	e020      	b.n	80001e4 <displayLed+0x80>
		case YEL:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, 0);
 80001a2:	2200      	movs	r2, #0
 80001a4:	2108      	movs	r1, #8
 80001a6:	4811      	ldr	r0, [pc, #68]	; (80001ec <displayLed+0x88>)
 80001a8:	f001 fd11 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, 1);
 80001ac:	2201      	movs	r2, #1
 80001ae:	2120      	movs	r1, #32
 80001b0:	480e      	ldr	r0, [pc, #56]	; (80001ec <displayLed+0x88>)
 80001b2:	f001 fd0c 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 80001b6:	e015      	b.n	80001e4 <displayLed+0x80>
		case GREEN:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, 1);
 80001b8:	2201      	movs	r2, #1
 80001ba:	2108      	movs	r1, #8
 80001bc:	480b      	ldr	r0, [pc, #44]	; (80001ec <displayLed+0x88>)
 80001be:	f001 fd06 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, 0);
 80001c2:	2200      	movs	r2, #0
 80001c4:	2120      	movs	r1, #32
 80001c6:	4809      	ldr	r0, [pc, #36]	; (80001ec <displayLed+0x88>)
 80001c8:	f001 fd01 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 80001cc:	e00a      	b.n	80001e4 <displayLed+0x80>
		default:
			HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, 0);
 80001ce:	2200      	movs	r2, #0
 80001d0:	2108      	movs	r1, #8
 80001d2:	4806      	ldr	r0, [pc, #24]	; (80001ec <displayLed+0x88>)
 80001d4:	f001 fcfb 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, 0);
 80001d8:	2200      	movs	r2, #0
 80001da:	2120      	movs	r1, #32
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <displayLed+0x88>)
 80001de:	f001 fcf6 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 80001e2:	bf00      	nop
	}
}
 80001e4:	bf00      	nop
 80001e6:	3708      	adds	r7, #8
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bd80      	pop	{r7, pc}
 80001ec:	40010c00 	.word	0x40010c00

080001f0 <displayLed2>:
void displayLed2(int state){
 80001f0:	b580      	push	{r7, lr}
 80001f2:	b082      	sub	sp, #8
 80001f4:	af00      	add	r7, sp, #0
 80001f6:	6078      	str	r0, [r7, #4]
	switch(state){
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	f240 124d 	movw	r2, #333	; 0x14d
 80001fe:	4293      	cmp	r3, r2
 8000200:	d022      	beq.n	8000248 <displayLed2+0x58>
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	f5b3 7fa7 	cmp.w	r3, #334	; 0x14e
 8000208:	da2a      	bge.n	8000260 <displayLed2+0x70>
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	2b6f      	cmp	r3, #111	; 0x6f
 800020e:	d003      	beq.n	8000218 <displayLed2+0x28>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	2bde      	cmp	r3, #222	; 0xde
 8000214:	d00c      	beq.n	8000230 <displayLed2+0x40>
 8000216:	e023      	b.n	8000260 <displayLed2+0x70>
		case RED:
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, 1);
 8000218:	2201      	movs	r2, #1
 800021a:	2110      	movs	r1, #16
 800021c:	4818      	ldr	r0, [pc, #96]	; (8000280 <displayLed2+0x90>)
 800021e:	f001 fcd6 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, 1);
 8000222:	2201      	movs	r2, #1
 8000224:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000228:	4815      	ldr	r0, [pc, #84]	; (8000280 <displayLed2+0x90>)
 800022a:	f001 fcd0 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 800022e:	e023      	b.n	8000278 <displayLed2+0x88>
		case YEL:
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, 0);
 8000230:	2200      	movs	r2, #0
 8000232:	2110      	movs	r1, #16
 8000234:	4812      	ldr	r0, [pc, #72]	; (8000280 <displayLed2+0x90>)
 8000236:	f001 fcca 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, 1);
 800023a:	2201      	movs	r2, #1
 800023c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000240:	480f      	ldr	r0, [pc, #60]	; (8000280 <displayLed2+0x90>)
 8000242:	f001 fcc4 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 8000246:	e017      	b.n	8000278 <displayLed2+0x88>
		case GREEN:
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, 1);
 8000248:	2201      	movs	r2, #1
 800024a:	2110      	movs	r1, #16
 800024c:	480c      	ldr	r0, [pc, #48]	; (8000280 <displayLed2+0x90>)
 800024e:	f001 fcbe 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, 0);
 8000252:	2200      	movs	r2, #0
 8000254:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000258:	4809      	ldr	r0, [pc, #36]	; (8000280 <displayLed2+0x90>)
 800025a:	f001 fcb8 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 800025e:	e00b      	b.n	8000278 <displayLed2+0x88>
		default:
			HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, 0);
 8000260:	2200      	movs	r2, #0
 8000262:	2110      	movs	r1, #16
 8000264:	4806      	ldr	r0, [pc, #24]	; (8000280 <displayLed2+0x90>)
 8000266:	f001 fcb2 	bl	8001bce <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, 0);
 800026a:	2200      	movs	r2, #0
 800026c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000270:	4803      	ldr	r0, [pc, #12]	; (8000280 <displayLed2+0x90>)
 8000272:	f001 fcac 	bl	8001bce <HAL_GPIO_WritePin>
			break;
 8000276:	bf00      	nop
	}
}
 8000278:	bf00      	nop
 800027a:	3708      	adds	r7, #8
 800027c:	46bd      	mov	sp, r7
 800027e:	bd80      	pop	{r7, pc}
 8000280:	40010c00 	.word	0x40010c00

08000284 <init_Button>:
int TimeOutForKeyPress[NUM_BUTTON];
int button_pressed[NUM_BUTTON];
int button_long_pressed[NUM_BUTTON];
int button_flag[NUM_BUTTON];

void init_Button(int i){
 8000284:	b480      	push	{r7}
 8000286:	b083      	sub	sp, #12
 8000288:	af00      	add	r7, sp, #0
 800028a:	6078      	str	r0, [r7, #4]
		 KeyReg0[i] = NORMAL_STATE;
 800028c:	4a16      	ldr	r2, [pc, #88]	; (80002e8 <init_Button+0x64>)
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	2101      	movs	r1, #1
 8000292:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 KeyReg1[i] = NORMAL_STATE;
 8000296:	4a15      	ldr	r2, [pc, #84]	; (80002ec <init_Button+0x68>)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	2101      	movs	r1, #1
 800029c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 KeyReg2[i] = NORMAL_STATE;
 80002a0:	4a13      	ldr	r2, [pc, #76]	; (80002f0 <init_Button+0x6c>)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	2101      	movs	r1, #1
 80002a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 KeyReg3[i] = NORMAL_STATE;
 80002aa:	4a12      	ldr	r2, [pc, #72]	; (80002f4 <init_Button+0x70>)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	2101      	movs	r1, #1
 80002b0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		 TimeOutForKeyPress[i] =  1000;
 80002b4:	4a10      	ldr	r2, [pc, #64]	; (80002f8 <init_Button+0x74>)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80002bc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 button_pressed[i] = 0;
 80002c0:	4a0e      	ldr	r2, [pc, #56]	; (80002fc <init_Button+0x78>)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	2100      	movs	r1, #0
 80002c6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 button_long_pressed[i] = 0;
 80002ca:	4a0d      	ldr	r2, [pc, #52]	; (8000300 <init_Button+0x7c>)
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	2100      	movs	r1, #0
 80002d0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		 button_flag[i] = 0;
 80002d4:	4a0b      	ldr	r2, [pc, #44]	; (8000304 <init_Button+0x80>)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	2100      	movs	r1, #0
 80002da:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80002de:	bf00      	nop
 80002e0:	370c      	adds	r7, #12
 80002e2:	46bd      	mov	sp, r7
 80002e4:	bc80      	pop	{r7}
 80002e6:	4770      	bx	lr
 80002e8:	20000060 	.word	0x20000060
 80002ec:	2000006c 	.word	0x2000006c
 80002f0:	2000009c 	.word	0x2000009c
 80002f4:	20000054 	.word	0x20000054
 80002f8:	20000078 	.word	0x20000078
 80002fc:	20000090 	.word	0x20000090
 8000300:	200000a8 	.word	0x200000a8
 8000304:	20000084 	.word	0x20000084

08000308 <isButtonPressed>:


GPIO_TypeDef* button_ports[] = {BUTTON1_GPIO_Port,BUTTON2_GPIO_Port,BUTTON3_GPIO_Port};
uint16_t button_pins[] = {BUTTON1_Pin, BUTTON2_Pin, BUTTON3_Pin};

int isButtonPressed( int index ){
 8000308:	b480      	push	{r7}
 800030a:	b083      	sub	sp, #12
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
	if(button_flag[index] == 1){
 8000310:	4a09      	ldr	r2, [pc, #36]	; (8000338 <isButtonPressed+0x30>)
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000318:	2b01      	cmp	r3, #1
 800031a:	d106      	bne.n	800032a <isButtonPressed+0x22>
		button_flag[index] = 0;
 800031c:	4a06      	ldr	r2, [pc, #24]	; (8000338 <isButtonPressed+0x30>)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	2100      	movs	r1, #0
 8000322:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 8000326:	2301      	movs	r3, #1
 8000328:	e000      	b.n	800032c <isButtonPressed+0x24>
	}
	return 0;
 800032a:	2300      	movs	r3, #0
}
 800032c:	4618      	mov	r0, r3
 800032e:	370c      	adds	r7, #12
 8000330:	46bd      	mov	sp, r7
 8000332:	bc80      	pop	{r7}
 8000334:	4770      	bx	lr
 8000336:	bf00      	nop
 8000338:	20000084 	.word	0x20000084

0800033c <getKeyInput>:
	//TODO
	//HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
	button_flag[index] = 1;
}

void getKeyInput(){
 800033c:	b580      	push	{r7, lr}
 800033e:	b082      	sub	sp, #8
 8000340:	af00      	add	r7, sp, #0
	for(int i = 0; i < NUM_BUTTON; i++){
 8000342:	2300      	movs	r3, #0
 8000344:	607b      	str	r3, [r7, #4]
 8000346:	e07d      	b.n	8000444 <getKeyInput+0x108>
		KeyReg2[i] = KeyReg1[i];
 8000348:	4a43      	ldr	r2, [pc, #268]	; (8000458 <getKeyInput+0x11c>)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000350:	4942      	ldr	r1, [pc, #264]	; (800045c <getKeyInput+0x120>)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		KeyReg1[i] = KeyReg0[i];
 8000358:	4a41      	ldr	r2, [pc, #260]	; (8000460 <getKeyInput+0x124>)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000360:	493d      	ldr	r1, [pc, #244]	; (8000458 <getKeyInput+0x11c>)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	  KeyReg0[i] = HAL_GPIO_ReadPin(button_ports[i], button_pins[i]);
 8000368:	4a3e      	ldr	r2, [pc, #248]	; (8000464 <getKeyInput+0x128>)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000370:	493d      	ldr	r1, [pc, #244]	; (8000468 <getKeyInput+0x12c>)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000378:	4619      	mov	r1, r3
 800037a:	4610      	mov	r0, r2
 800037c:	f001 fc10 	bl	8001ba0 <HAL_GPIO_ReadPin>
 8000380:	4603      	mov	r3, r0
 8000382:	4619      	mov	r1, r3
 8000384:	4a36      	ldr	r2, [pc, #216]	; (8000460 <getKeyInput+0x124>)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	  if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])){
 800038c:	4a32      	ldr	r2, [pc, #200]	; (8000458 <getKeyInput+0x11c>)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000394:	4932      	ldr	r1, [pc, #200]	; (8000460 <getKeyInput+0x124>)
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800039c:	429a      	cmp	r2, r3
 800039e:	d14e      	bne.n	800043e <getKeyInput+0x102>
 80003a0:	4a2d      	ldr	r2, [pc, #180]	; (8000458 <getKeyInput+0x11c>)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003a8:	492c      	ldr	r1, [pc, #176]	; (800045c <getKeyInput+0x120>)
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80003b0:	429a      	cmp	r2, r3
 80003b2:	d144      	bne.n	800043e <getKeyInput+0x102>
		if (KeyReg2[i] != KeyReg3[i]){
 80003b4:	4a29      	ldr	r2, [pc, #164]	; (800045c <getKeyInput+0x120>)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003bc:	492b      	ldr	r1, [pc, #172]	; (800046c <getKeyInput+0x130>)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	d019      	beq.n	80003fc <getKeyInput+0xc0>
		  KeyReg3[i] = KeyReg2[i];
 80003c8:	4a24      	ldr	r2, [pc, #144]	; (800045c <getKeyInput+0x120>)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003d0:	4926      	ldr	r1, [pc, #152]	; (800046c <getKeyInput+0x130>)
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		  if (KeyReg3[i] == PRESSED_STATE){
 80003d8:	4a24      	ldr	r2, [pc, #144]	; (800046c <getKeyInput+0x130>)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d12c      	bne.n	800043e <getKeyInput+0x102>
			TimeOutForKeyPress[i] = 1000;
 80003e4:	4a22      	ldr	r2, [pc, #136]	; (8000470 <getKeyInput+0x134>)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80003ec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			//subKeyProcess();
			button_flag[i] = 1;
 80003f0:	4a20      	ldr	r2, [pc, #128]	; (8000474 <getKeyInput+0x138>)
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	2101      	movs	r1, #1
 80003f6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80003fa:	e020      	b.n	800043e <getKeyInput+0x102>
		  }

		}else{
			TimeOutForKeyPress[i] -= 10;
 80003fc:	4a1c      	ldr	r2, [pc, #112]	; (8000470 <getKeyInput+0x134>)
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000404:	f1a3 020a 	sub.w	r2, r3, #10
 8000408:	4919      	ldr	r1, [pc, #100]	; (8000470 <getKeyInput+0x134>)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (TimeOutForKeyPress[i] == 0){
 8000410:	4a17      	ldr	r2, [pc, #92]	; (8000470 <getKeyInput+0x134>)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000418:	2b00      	cmp	r3, #0
 800041a:	d110      	bne.n	800043e <getKeyInput+0x102>
				TimeOutForKeyPress[i] = 500;
 800041c:	4a14      	ldr	r2, [pc, #80]	; (8000470 <getKeyInput+0x134>)
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000424:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
				if (KeyReg3[i] == PRESSED_STATE){
 8000428:	4a10      	ldr	r2, [pc, #64]	; (800046c <getKeyInput+0x130>)
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000430:	2b00      	cmp	r3, #0
 8000432:	d104      	bne.n	800043e <getKeyInput+0x102>
					//subKeyProcess();
					button_flag[i] = 1;
 8000434:	4a0f      	ldr	r2, [pc, #60]	; (8000474 <getKeyInput+0x138>)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	2101      	movs	r1, #1
 800043a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i < NUM_BUTTON; i++){
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	3301      	adds	r3, #1
 8000442:	607b      	str	r3, [r7, #4]
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	2b02      	cmp	r3, #2
 8000448:	f77f af7e 	ble.w	8000348 <getKeyInput+0xc>
				}
			}
		}
	  }
	}
}
 800044c:	bf00      	nop
 800044e:	bf00      	nop
 8000450:	3708      	adds	r7, #8
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}
 8000456:	bf00      	nop
 8000458:	2000006c 	.word	0x2000006c
 800045c:	2000009c 	.word	0x2000009c
 8000460:	20000060 	.word	0x20000060
 8000464:	20000000 	.word	0x20000000
 8000468:	2000000c 	.word	0x2000000c
 800046c:	20000054 	.word	0x20000054
 8000470:	20000078 	.word	0x20000078
 8000474:	20000084 	.word	0x20000084

08000478 <checkTime>:
 */

#include "fsm_traffic_light.h"


void checkTime(){
 8000478:	b480      	push	{r7}
 800047a:	af00      	add	r7, sp, #0
	if(red_time != yel_time + green_time){
 800047c:	4b09      	ldr	r3, [pc, #36]	; (80004a4 <checkTime+0x2c>)
 800047e:	681a      	ldr	r2, [r3, #0]
 8000480:	4b09      	ldr	r3, [pc, #36]	; (80004a8 <checkTime+0x30>)
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	441a      	add	r2, r3
 8000486:	4b09      	ldr	r3, [pc, #36]	; (80004ac <checkTime+0x34>)
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	429a      	cmp	r2, r3
 800048c:	d006      	beq.n	800049c <checkTime+0x24>
		red_time = yel_time + green_time;
 800048e:	4b05      	ldr	r3, [pc, #20]	; (80004a4 <checkTime+0x2c>)
 8000490:	681a      	ldr	r2, [r3, #0]
 8000492:	4b05      	ldr	r3, [pc, #20]	; (80004a8 <checkTime+0x30>)
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	4413      	add	r3, r2
 8000498:	4a04      	ldr	r2, [pc, #16]	; (80004ac <checkTime+0x34>)
 800049a:	6013      	str	r3, [r2, #0]
	}
}
 800049c:	bf00      	nop
 800049e:	46bd      	mov	sp, r7
 80004a0:	bc80      	pop	{r7}
 80004a2:	4770      	bx	lr
 80004a4:	2000001c 	.word	0x2000001c
 80004a8:	20000018 	.word	0x20000018
 80004ac:	20000014 	.word	0x20000014

080004b0 <fsm_traffic>:

void fsm_traffic(){
 80004b0:	b580      	push	{r7, lr}
 80004b2:	af00      	add	r7, sp, #0
	switch(status){
 80004b4:	4bc3      	ldr	r3, [pc, #780]	; (80007c4 <fsm_traffic+0x314>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	3b01      	subs	r3, #1
 80004ba:	2b08      	cmp	r3, #8
 80004bc:	f200 81b8 	bhi.w	8000830 <fsm_traffic+0x380>
 80004c0:	a201      	add	r2, pc, #4	; (adr r2, 80004c8 <fsm_traffic+0x18>)
 80004c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004c6:	bf00      	nop
 80004c8:	080004ed 	.word	0x080004ed
 80004cc:	0800059b 	.word	0x0800059b
 80004d0:	080005dd 	.word	0x080005dd
 80004d4:	08000519 	.word	0x08000519
 80004d8:	0800055b 	.word	0x0800055b
 80004dc:	08000655 	.word	0x08000655
 80004e0:	080006fb 	.word	0x080006fb
 80004e4:	0800078f 	.word	0x0800078f
 80004e8:	0800061d 	.word	0x0800061d
		case INIT:
			checkTime();
 80004ec:	f7ff ffc4 	bl	8000478 <checkTime>
			status = RED_GREEN;
 80004f0:	4bb4      	ldr	r3, [pc, #720]	; (80007c4 <fsm_traffic+0x314>)
 80004f2:	2204      	movs	r2, #4
 80004f4:	601a      	str	r2, [r3, #0]
			setTimer(0,green_time);
 80004f6:	4bb4      	ldr	r3, [pc, #720]	; (80007c8 <fsm_traffic+0x318>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4619      	mov	r1, r3
 80004fc:	2000      	movs	r0, #0
 80004fe:	f000 fdbf 	bl	8001080 <setTimer>
			if(isButtonPressed(0)) status = MAN_INIT;
 8000502:	2000      	movs	r0, #0
 8000504:	f7ff ff00 	bl	8000308 <isButtonPressed>
 8000508:	4603      	mov	r3, r0
 800050a:	2b00      	cmp	r3, #0
 800050c:	f000 8192 	beq.w	8000834 <fsm_traffic+0x384>
 8000510:	4bac      	ldr	r3, [pc, #688]	; (80007c4 <fsm_traffic+0x314>)
 8000512:	2209      	movs	r2, #9
 8000514:	601a      	str	r2, [r3, #0]
			break;
 8000516:	e18d      	b.n	8000834 <fsm_traffic+0x384>

		case RED_GREEN:
			displayLed(RED);
 8000518:	206f      	movs	r0, #111	; 0x6f
 800051a:	f7ff fe23 	bl	8000164 <displayLed>
			displayLed2(GREEN);
 800051e:	f240 104d 	movw	r0, #333	; 0x14d
 8000522:	f7ff fe65 	bl	80001f0 <displayLed2>
			if(isTimerExpired(0)){
 8000526:	2000      	movs	r0, #0
 8000528:	f000 fdca 	bl	80010c0 <isTimerExpired>
 800052c:	4603      	mov	r3, r0
 800052e:	2b00      	cmp	r3, #0
 8000530:	d008      	beq.n	8000544 <fsm_traffic+0x94>
				status = RED_YEL;
 8000532:	4ba4      	ldr	r3, [pc, #656]	; (80007c4 <fsm_traffic+0x314>)
 8000534:	2205      	movs	r2, #5
 8000536:	601a      	str	r2, [r3, #0]
				setTimer(0,yel_time);
 8000538:	4ba4      	ldr	r3, [pc, #656]	; (80007cc <fsm_traffic+0x31c>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4619      	mov	r1, r3
 800053e:	2000      	movs	r0, #0
 8000540:	f000 fd9e 	bl	8001080 <setTimer>
			}
			if(isButtonPressed(0)) status = MAN_INIT;
 8000544:	2000      	movs	r0, #0
 8000546:	f7ff fedf 	bl	8000308 <isButtonPressed>
 800054a:	4603      	mov	r3, r0
 800054c:	2b00      	cmp	r3, #0
 800054e:	f000 8173 	beq.w	8000838 <fsm_traffic+0x388>
 8000552:	4b9c      	ldr	r3, [pc, #624]	; (80007c4 <fsm_traffic+0x314>)
 8000554:	2209      	movs	r2, #9
 8000556:	601a      	str	r2, [r3, #0]
			break;
 8000558:	e16e      	b.n	8000838 <fsm_traffic+0x388>

		case RED_YEL:
			displayLed(RED);
 800055a:	206f      	movs	r0, #111	; 0x6f
 800055c:	f7ff fe02 	bl	8000164 <displayLed>
			displayLed2(YEL);
 8000560:	20de      	movs	r0, #222	; 0xde
 8000562:	f7ff fe45 	bl	80001f0 <displayLed2>
			if(isTimerExpired(0)){
 8000566:	2000      	movs	r0, #0
 8000568:	f000 fdaa 	bl	80010c0 <isTimerExpired>
 800056c:	4603      	mov	r3, r0
 800056e:	2b00      	cmp	r3, #0
 8000570:	d008      	beq.n	8000584 <fsm_traffic+0xd4>
				status = GREEN_RED;
 8000572:	4b94      	ldr	r3, [pc, #592]	; (80007c4 <fsm_traffic+0x314>)
 8000574:	2202      	movs	r2, #2
 8000576:	601a      	str	r2, [r3, #0]
				setTimer(0, green_time);
 8000578:	4b93      	ldr	r3, [pc, #588]	; (80007c8 <fsm_traffic+0x318>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4619      	mov	r1, r3
 800057e:	2000      	movs	r0, #0
 8000580:	f000 fd7e 	bl	8001080 <setTimer>
			}
			if(isButtonPressed(0)) status = MAN_INIT;
 8000584:	2000      	movs	r0, #0
 8000586:	f7ff febf 	bl	8000308 <isButtonPressed>
 800058a:	4603      	mov	r3, r0
 800058c:	2b00      	cmp	r3, #0
 800058e:	f000 8155 	beq.w	800083c <fsm_traffic+0x38c>
 8000592:	4b8c      	ldr	r3, [pc, #560]	; (80007c4 <fsm_traffic+0x314>)
 8000594:	2209      	movs	r2, #9
 8000596:	601a      	str	r2, [r3, #0]
			break;
 8000598:	e150      	b.n	800083c <fsm_traffic+0x38c>
		case GREEN_RED:
			displayLed(GREEN);
 800059a:	f240 104d 	movw	r0, #333	; 0x14d
 800059e:	f7ff fde1 	bl	8000164 <displayLed>
			displayLed2(RED);
 80005a2:	206f      	movs	r0, #111	; 0x6f
 80005a4:	f7ff fe24 	bl	80001f0 <displayLed2>
			if(isTimerExpired(0)){
 80005a8:	2000      	movs	r0, #0
 80005aa:	f000 fd89 	bl	80010c0 <isTimerExpired>
 80005ae:	4603      	mov	r3, r0
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d008      	beq.n	80005c6 <fsm_traffic+0x116>
				status = YEL_RED;
 80005b4:	4b83      	ldr	r3, [pc, #524]	; (80007c4 <fsm_traffic+0x314>)
 80005b6:	2203      	movs	r2, #3
 80005b8:	601a      	str	r2, [r3, #0]
				setTimer(0, yel_time);
 80005ba:	4b84      	ldr	r3, [pc, #528]	; (80007cc <fsm_traffic+0x31c>)
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4619      	mov	r1, r3
 80005c0:	2000      	movs	r0, #0
 80005c2:	f000 fd5d 	bl	8001080 <setTimer>
			}
			if(isButtonPressed(0)) status = MAN_INIT;
 80005c6:	2000      	movs	r0, #0
 80005c8:	f7ff fe9e 	bl	8000308 <isButtonPressed>
 80005cc:	4603      	mov	r3, r0
 80005ce:	2b00      	cmp	r3, #0
 80005d0:	f000 8136 	beq.w	8000840 <fsm_traffic+0x390>
 80005d4:	4b7b      	ldr	r3, [pc, #492]	; (80007c4 <fsm_traffic+0x314>)
 80005d6:	2209      	movs	r2, #9
 80005d8:	601a      	str	r2, [r3, #0]
			break;
 80005da:	e131      	b.n	8000840 <fsm_traffic+0x390>
		case YEL_RED:
			displayLed(YEL);
 80005dc:	20de      	movs	r0, #222	; 0xde
 80005de:	f7ff fdc1 	bl	8000164 <displayLed>
			displayLed2(RED);
 80005e2:	206f      	movs	r0, #111	; 0x6f
 80005e4:	f7ff fe04 	bl	80001f0 <displayLed2>
			if(isTimerExpired(0)){
 80005e8:	2000      	movs	r0, #0
 80005ea:	f000 fd69 	bl	80010c0 <isTimerExpired>
 80005ee:	4603      	mov	r3, r0
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d008      	beq.n	8000606 <fsm_traffic+0x156>
				status = RED_GREEN;
 80005f4:	4b73      	ldr	r3, [pc, #460]	; (80007c4 <fsm_traffic+0x314>)
 80005f6:	2204      	movs	r2, #4
 80005f8:	601a      	str	r2, [r3, #0]
				setTimer(0, green_time);
 80005fa:	4b73      	ldr	r3, [pc, #460]	; (80007c8 <fsm_traffic+0x318>)
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4619      	mov	r1, r3
 8000600:	2000      	movs	r0, #0
 8000602:	f000 fd3d 	bl	8001080 <setTimer>
			}
			if(isButtonPressed(0)) status = MAN_INIT;
 8000606:	2000      	movs	r0, #0
 8000608:	f7ff fe7e 	bl	8000308 <isButtonPressed>
 800060c:	4603      	mov	r3, r0
 800060e:	2b00      	cmp	r3, #0
 8000610:	f000 8118 	beq.w	8000844 <fsm_traffic+0x394>
 8000614:	4b6b      	ldr	r3, [pc, #428]	; (80007c4 <fsm_traffic+0x314>)
 8000616:	2209      	movs	r2, #9
 8000618:	601a      	str	r2, [r3, #0]
			break;
 800061a:	e113      	b.n	8000844 <fsm_traffic+0x394>

		case MAN_INIT:
			setTimer(0,BLINK_TIME);
 800061c:	2132      	movs	r1, #50	; 0x32
 800061e:	2000      	movs	r0, #0
 8000620:	f000 fd2e 	bl	8001080 <setTimer>
			status = MAN_RED;
 8000624:	4b67      	ldr	r3, [pc, #412]	; (80007c4 <fsm_traffic+0x314>)
 8000626:	2206      	movs	r2, #6
 8000628:	601a      	str	r2, [r3, #0]
			init_Button(1);
 800062a:	2001      	movs	r0, #1
 800062c:	f7ff fe2a 	bl	8000284 <init_Button>
			init_Button(2);
 8000630:	2002      	movs	r0, #2
 8000632:	f7ff fe27 	bl	8000284 <init_Button>
			clearLed();
 8000636:	f7ff fd89 	bl	800014c <clearLed>
			temp[0] = red_time;
 800063a:	4b65      	ldr	r3, [pc, #404]	; (80007d0 <fsm_traffic+0x320>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	4a65      	ldr	r2, [pc, #404]	; (80007d4 <fsm_traffic+0x324>)
 8000640:	6013      	str	r3, [r2, #0]
			temp[1] = yel_time;
 8000642:	4b62      	ldr	r3, [pc, #392]	; (80007cc <fsm_traffic+0x31c>)
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a63      	ldr	r2, [pc, #396]	; (80007d4 <fsm_traffic+0x324>)
 8000648:	6053      	str	r3, [r2, #4]
			temp[2] = green_time;
 800064a:	4b5f      	ldr	r3, [pc, #380]	; (80007c8 <fsm_traffic+0x318>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4a61      	ldr	r2, [pc, #388]	; (80007d4 <fsm_traffic+0x324>)
 8000650:	6093      	str	r3, [r2, #8]
			break;
 8000652:	e0fe      	b.n	8000852 <fsm_traffic+0x3a2>
		case MAN_RED:
			if(isButtonPressed(0)){
 8000654:	2000      	movs	r0, #0
 8000656:	f7ff fe57 	bl	8000308 <isButtonPressed>
 800065a:	4603      	mov	r3, r0
 800065c:	2b00      	cmp	r3, #0
 800065e:	d009      	beq.n	8000674 <fsm_traffic+0x1c4>
				status = MAN_YEL;
 8000660:	4b58      	ldr	r3, [pc, #352]	; (80007c4 <fsm_traffic+0x314>)
 8000662:	2207      	movs	r2, #7
 8000664:	601a      	str	r2, [r3, #0]
				clearLed();
 8000666:	f7ff fd71 	bl	800014c <clearLed>
				setTimer(0, BLINK_TIME);
 800066a:	2132      	movs	r1, #50	; 0x32
 800066c:	2000      	movs	r0, #0
 800066e:	f000 fd07 	bl	8001080 <setTimer>
				HAL_GPIO_TogglePin(D6_GPIO_Port, D6_Pin);
				HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
				HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);
				setTimer(0, BLINK_TIME);
			}
			break;
 8000672:	e0e9      	b.n	8000848 <fsm_traffic+0x398>
			else if(isButtonPressed(1)){
 8000674:	2001      	movs	r0, #1
 8000676:	f7ff fe47 	bl	8000308 <isButtonPressed>
 800067a:	4603      	mov	r3, r0
 800067c:	2b00      	cmp	r3, #0
 800067e:	d00a      	beq.n	8000696 <fsm_traffic+0x1e6>
				temp[0] += 1000;
 8000680:	4b54      	ldr	r3, [pc, #336]	; (80007d4 <fsm_traffic+0x324>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000688:	4a52      	ldr	r2, [pc, #328]	; (80007d4 <fsm_traffic+0x324>)
 800068a:	6013      	str	r3, [r2, #0]
				setTimer(0, BLINK_TIME);
 800068c:	2132      	movs	r1, #50	; 0x32
 800068e:	2000      	movs	r0, #0
 8000690:	f000 fcf6 	bl	8001080 <setTimer>
			break;
 8000694:	e0d8      	b.n	8000848 <fsm_traffic+0x398>
			}else if(isButtonPressed(2)){
 8000696:	2002      	movs	r0, #2
 8000698:	f7ff fe36 	bl	8000308 <isButtonPressed>
 800069c:	4603      	mov	r3, r0
 800069e:	2b00      	cmp	r3, #0
 80006a0:	d00e      	beq.n	80006c0 <fsm_traffic+0x210>
				red_time = temp[0];
 80006a2:	4b4c      	ldr	r3, [pc, #304]	; (80007d4 <fsm_traffic+0x324>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	4a4a      	ldr	r2, [pc, #296]	; (80007d0 <fsm_traffic+0x320>)
 80006a8:	6013      	str	r3, [r2, #0]
				setTimer(0, 0);
 80006aa:	2100      	movs	r1, #0
 80006ac:	2000      	movs	r0, #0
 80006ae:	f000 fce7 	bl	8001080 <setTimer>
				displayLed(RED);
 80006b2:	206f      	movs	r0, #111	; 0x6f
 80006b4:	f7ff fd56 	bl	8000164 <displayLed>
				displayLed2(RED);
 80006b8:	206f      	movs	r0, #111	; 0x6f
 80006ba:	f7ff fd99 	bl	80001f0 <displayLed2>
			break;
 80006be:	e0c3      	b.n	8000848 <fsm_traffic+0x398>
			else if(isTimerExpired(0)){
 80006c0:	2000      	movs	r0, #0
 80006c2:	f000 fcfd 	bl	80010c0 <isTimerExpired>
 80006c6:	4603      	mov	r3, r0
 80006c8:	2b00      	cmp	r3, #0
 80006ca:	f000 80bd 	beq.w	8000848 <fsm_traffic+0x398>
				HAL_GPIO_TogglePin(D5_GPIO_Port, D5_Pin);
 80006ce:	2110      	movs	r1, #16
 80006d0:	4841      	ldr	r0, [pc, #260]	; (80007d8 <fsm_traffic+0x328>)
 80006d2:	f001 fa94 	bl	8001bfe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(D6_GPIO_Port, D6_Pin);
 80006d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006da:	483f      	ldr	r0, [pc, #252]	; (80007d8 <fsm_traffic+0x328>)
 80006dc:	f001 fa8f 	bl	8001bfe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
 80006e0:	2108      	movs	r1, #8
 80006e2:	483d      	ldr	r0, [pc, #244]	; (80007d8 <fsm_traffic+0x328>)
 80006e4:	f001 fa8b 	bl	8001bfe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);
 80006e8:	2120      	movs	r1, #32
 80006ea:	483b      	ldr	r0, [pc, #236]	; (80007d8 <fsm_traffic+0x328>)
 80006ec:	f001 fa87 	bl	8001bfe <HAL_GPIO_TogglePin>
				setTimer(0, BLINK_TIME);
 80006f0:	2132      	movs	r1, #50	; 0x32
 80006f2:	2000      	movs	r0, #0
 80006f4:	f000 fcc4 	bl	8001080 <setTimer>
			break;
 80006f8:	e0a6      	b.n	8000848 <fsm_traffic+0x398>

		case MAN_YEL:
			if(isButtonPressed(0)){
 80006fa:	2000      	movs	r0, #0
 80006fc:	f7ff fe04 	bl	8000308 <isButtonPressed>
 8000700:	4603      	mov	r3, r0
 8000702:	2b00      	cmp	r3, #0
 8000704:	d009      	beq.n	800071a <fsm_traffic+0x26a>
				status = MAN_GREEN;
 8000706:	4b2f      	ldr	r3, [pc, #188]	; (80007c4 <fsm_traffic+0x314>)
 8000708:	2208      	movs	r2, #8
 800070a:	601a      	str	r2, [r3, #0]
				clearLed();
 800070c:	f7ff fd1e 	bl	800014c <clearLed>
				setTimer(0, BLINK_TIME);
 8000710:	2132      	movs	r1, #50	; 0x32
 8000712:	2000      	movs	r0, #0
 8000714:	f000 fcb4 	bl	8001080 <setTimer>
				HAL_GPIO_TogglePin(D6_GPIO_Port, D6_Pin);
				HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);

				setTimer(0, BLINK_TIME);
			}
			break;
 8000718:	e098      	b.n	800084c <fsm_traffic+0x39c>
			}else if(isButtonPressed(1)){
 800071a:	2001      	movs	r0, #1
 800071c:	f7ff fdf4 	bl	8000308 <isButtonPressed>
 8000720:	4603      	mov	r3, r0
 8000722:	2b00      	cmp	r3, #0
 8000724:	d00a      	beq.n	800073c <fsm_traffic+0x28c>
				temp[1] += 1000;
 8000726:	4b2b      	ldr	r3, [pc, #172]	; (80007d4 <fsm_traffic+0x324>)
 8000728:	685b      	ldr	r3, [r3, #4]
 800072a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 800072e:	4a29      	ldr	r2, [pc, #164]	; (80007d4 <fsm_traffic+0x324>)
 8000730:	6053      	str	r3, [r2, #4]
				setTimer(0, BLINK_TIME);
 8000732:	2132      	movs	r1, #50	; 0x32
 8000734:	2000      	movs	r0, #0
 8000736:	f000 fca3 	bl	8001080 <setTimer>
			break;
 800073a:	e087      	b.n	800084c <fsm_traffic+0x39c>
			}else if(isButtonPressed(2)){
 800073c:	2002      	movs	r0, #2
 800073e:	f7ff fde3 	bl	8000308 <isButtonPressed>
 8000742:	4603      	mov	r3, r0
 8000744:	2b00      	cmp	r3, #0
 8000746:	d00e      	beq.n	8000766 <fsm_traffic+0x2b6>
				yel_time = temp[1];
 8000748:	4b22      	ldr	r3, [pc, #136]	; (80007d4 <fsm_traffic+0x324>)
 800074a:	685b      	ldr	r3, [r3, #4]
 800074c:	4a1f      	ldr	r2, [pc, #124]	; (80007cc <fsm_traffic+0x31c>)
 800074e:	6013      	str	r3, [r2, #0]
				setTimer(0, 0);
 8000750:	2100      	movs	r1, #0
 8000752:	2000      	movs	r0, #0
 8000754:	f000 fc94 	bl	8001080 <setTimer>
				displayLed(YEL);
 8000758:	20de      	movs	r0, #222	; 0xde
 800075a:	f7ff fd03 	bl	8000164 <displayLed>
				displayLed2(YEL);
 800075e:	20de      	movs	r0, #222	; 0xde
 8000760:	f7ff fd46 	bl	80001f0 <displayLed2>
			break;
 8000764:	e072      	b.n	800084c <fsm_traffic+0x39c>
			else if(isTimerExpired(0)){
 8000766:	2000      	movs	r0, #0
 8000768:	f000 fcaa 	bl	80010c0 <isTimerExpired>
 800076c:	4603      	mov	r3, r0
 800076e:	2b00      	cmp	r3, #0
 8000770:	d06c      	beq.n	800084c <fsm_traffic+0x39c>
				HAL_GPIO_TogglePin(D6_GPIO_Port, D6_Pin);
 8000772:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000776:	4818      	ldr	r0, [pc, #96]	; (80007d8 <fsm_traffic+0x328>)
 8000778:	f001 fa41 	bl	8001bfe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(D4_GPIO_Port, D4_Pin);
 800077c:	2120      	movs	r1, #32
 800077e:	4816      	ldr	r0, [pc, #88]	; (80007d8 <fsm_traffic+0x328>)
 8000780:	f001 fa3d 	bl	8001bfe <HAL_GPIO_TogglePin>
				setTimer(0, BLINK_TIME);
 8000784:	2132      	movs	r1, #50	; 0x32
 8000786:	2000      	movs	r0, #0
 8000788:	f000 fc7a 	bl	8001080 <setTimer>
			break;
 800078c:	e05e      	b.n	800084c <fsm_traffic+0x39c>

		case MAN_GREEN:
			if(isButtonPressed(0)){
 800078e:	2000      	movs	r0, #0
 8000790:	f7ff fdba 	bl	8000308 <isButtonPressed>
 8000794:	4603      	mov	r3, r0
 8000796:	2b00      	cmp	r3, #0
 8000798:	d003      	beq.n	80007a2 <fsm_traffic+0x2f2>
				status = INIT;
 800079a:	4b0a      	ldr	r3, [pc, #40]	; (80007c4 <fsm_traffic+0x314>)
 800079c:	2201      	movs	r2, #1
 800079e:	601a      	str	r2, [r3, #0]
			else if(isTimerExpired(0)){
				HAL_GPIO_TogglePin(D5_GPIO_Port, D5_Pin);
				HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
				setTimer(0, BLINK_TIME);
			}
			break;
 80007a0:	e056      	b.n	8000850 <fsm_traffic+0x3a0>
			}else if(isButtonPressed(1)){
 80007a2:	2001      	movs	r0, #1
 80007a4:	f7ff fdb0 	bl	8000308 <isButtonPressed>
 80007a8:	4603      	mov	r3, r0
 80007aa:	2b00      	cmp	r3, #0
 80007ac:	d016      	beq.n	80007dc <fsm_traffic+0x32c>
				temp[2] += 1000;
 80007ae:	4b09      	ldr	r3, [pc, #36]	; (80007d4 <fsm_traffic+0x324>)
 80007b0:	689b      	ldr	r3, [r3, #8]
 80007b2:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80007b6:	4a07      	ldr	r2, [pc, #28]	; (80007d4 <fsm_traffic+0x324>)
 80007b8:	6093      	str	r3, [r2, #8]
				setTimer(0, BLINK_TIME);
 80007ba:	2132      	movs	r1, #50	; 0x32
 80007bc:	2000      	movs	r0, #0
 80007be:	f000 fc5f 	bl	8001080 <setTimer>
			break;
 80007c2:	e045      	b.n	8000850 <fsm_traffic+0x3a0>
 80007c4:	20000048 	.word	0x20000048
 80007c8:	20000018 	.word	0x20000018
 80007cc:	2000001c 	.word	0x2000001c
 80007d0:	20000014 	.word	0x20000014
 80007d4:	200000b4 	.word	0x200000b4
 80007d8:	40010c00 	.word	0x40010c00
			}else if(isButtonPressed(2)){
 80007dc:	2002      	movs	r0, #2
 80007de:	f7ff fd93 	bl	8000308 <isButtonPressed>
 80007e2:	4603      	mov	r3, r0
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d010      	beq.n	800080a <fsm_traffic+0x35a>
				green_time = temp[2];
 80007e8:	4b1b      	ldr	r3, [pc, #108]	; (8000858 <fsm_traffic+0x3a8>)
 80007ea:	689b      	ldr	r3, [r3, #8]
 80007ec:	4a1b      	ldr	r2, [pc, #108]	; (800085c <fsm_traffic+0x3ac>)
 80007ee:	6013      	str	r3, [r2, #0]
				setTimer(0, 0);
 80007f0:	2100      	movs	r1, #0
 80007f2:	2000      	movs	r0, #0
 80007f4:	f000 fc44 	bl	8001080 <setTimer>
				displayLed(GREEN);
 80007f8:	f240 104d 	movw	r0, #333	; 0x14d
 80007fc:	f7ff fcb2 	bl	8000164 <displayLed>
				displayLed2(GREEN);
 8000800:	f240 104d 	movw	r0, #333	; 0x14d
 8000804:	f7ff fcf4 	bl	80001f0 <displayLed2>
			break;
 8000808:	e022      	b.n	8000850 <fsm_traffic+0x3a0>
			else if(isTimerExpired(0)){
 800080a:	2000      	movs	r0, #0
 800080c:	f000 fc58 	bl	80010c0 <isTimerExpired>
 8000810:	4603      	mov	r3, r0
 8000812:	2b00      	cmp	r3, #0
 8000814:	d01c      	beq.n	8000850 <fsm_traffic+0x3a0>
				HAL_GPIO_TogglePin(D5_GPIO_Port, D5_Pin);
 8000816:	2110      	movs	r1, #16
 8000818:	4811      	ldr	r0, [pc, #68]	; (8000860 <fsm_traffic+0x3b0>)
 800081a:	f001 f9f0 	bl	8001bfe <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(D3_GPIO_Port, D3_Pin);
 800081e:	2108      	movs	r1, #8
 8000820:	480f      	ldr	r0, [pc, #60]	; (8000860 <fsm_traffic+0x3b0>)
 8000822:	f001 f9ec 	bl	8001bfe <HAL_GPIO_TogglePin>
				setTimer(0, BLINK_TIME);
 8000826:	2132      	movs	r1, #50	; 0x32
 8000828:	2000      	movs	r0, #0
 800082a:	f000 fc29 	bl	8001080 <setTimer>
			break;
 800082e:	e00f      	b.n	8000850 <fsm_traffic+0x3a0>

		default:
				break;
 8000830:	bf00      	nop
 8000832:	e00e      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000834:	bf00      	nop
 8000836:	e00c      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000838:	bf00      	nop
 800083a:	e00a      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 800083c:	bf00      	nop
 800083e:	e008      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000840:	bf00      	nop
 8000842:	e006      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000844:	bf00      	nop
 8000846:	e004      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000848:	bf00      	nop
 800084a:	e002      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 800084c:	bf00      	nop
 800084e:	e000      	b.n	8000852 <fsm_traffic+0x3a2>
			break;
 8000850:	bf00      	nop
		}
}
 8000852:	bf00      	nop
 8000854:	bd80      	pop	{r7, pc}
 8000856:	bf00      	nop
 8000858:	200000b4 	.word	0x200000b4
 800085c:	20000018 	.word	0x20000018
 8000860:	40010c00 	.word	0x40010c00

08000864 <lcd_send_cmd>:
extern I2C_HandleTypeDef hi2c1;  // change your handler here accordingly

#define SLAVE_ADDRESS_LCD 0x42 // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	b086      	sub	sp, #24
 8000868:	af02      	add	r7, sp, #8
 800086a:	4603      	mov	r3, r0
 800086c:	71fb      	strb	r3, [r7, #7]
  char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 800086e:	79fb      	ldrb	r3, [r7, #7]
 8000870:	f023 030f 	bic.w	r3, r3, #15
 8000874:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	011b      	lsls	r3, r3, #4
 800087a:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0 -> bxxxx1100
 800087c:	7bfb      	ldrb	r3, [r7, #15]
 800087e:	f043 030c 	orr.w	r3, r3, #12
 8000882:	b2db      	uxtb	r3, r3
 8000884:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0 -> bxxxx1000
 8000886:	7bfb      	ldrb	r3, [r7, #15]
 8000888:	f043 0308 	orr.w	r3, r3, #8
 800088c:	b2db      	uxtb	r3, r3
 800088e:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0 -> bxxxx1100
 8000890:	7bbb      	ldrb	r3, [r7, #14]
 8000892:	f043 030c 	orr.w	r3, r3, #12
 8000896:	b2db      	uxtb	r3, r3
 8000898:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0 -> bxxxx1000
 800089a:	7bbb      	ldrb	r3, [r7, #14]
 800089c:	f043 0308 	orr.w	r3, r3, #8
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 80008a4:	f107 0208 	add.w	r2, r7, #8
 80008a8:	2364      	movs	r3, #100	; 0x64
 80008aa:	9300      	str	r3, [sp, #0]
 80008ac:	2304      	movs	r3, #4
 80008ae:	2142      	movs	r1, #66	; 0x42
 80008b0:	4803      	ldr	r0, [pc, #12]	; (80008c0 <lcd_send_cmd+0x5c>)
 80008b2:	f001 fb23 	bl	8001efc <HAL_I2C_Master_Transmit>
}
 80008b6:	bf00      	nop
 80008b8:	3710      	adds	r7, #16
 80008ba:	46bd      	mov	sp, r7
 80008bc:	bd80      	pop	{r7, pc}
 80008be:	bf00      	nop
 80008c0:	200000c0 	.word	0x200000c0

080008c4 <lcd_send_data>:

void lcd_send_data (char data)
{
 80008c4:	b580      	push	{r7, lr}
 80008c6:	b086      	sub	sp, #24
 80008c8:	af02      	add	r7, sp, #8
 80008ca:	4603      	mov	r3, r0
 80008cc:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 80008ce:	79fb      	ldrb	r3, [r7, #7]
 80008d0:	f023 030f 	bic.w	r3, r3, #15
 80008d4:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 80008d6:	79fb      	ldrb	r3, [r7, #7]
 80008d8:	011b      	lsls	r3, r3, #4
 80008da:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0 -> bxxxx1101
 80008dc:	7bfb      	ldrb	r3, [r7, #15]
 80008de:	f043 030d 	orr.w	r3, r3, #13
 80008e2:	b2db      	uxtb	r3, r3
 80008e4:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0 -> bxxxx1001
 80008e6:	7bfb      	ldrb	r3, [r7, #15]
 80008e8:	f043 0309 	orr.w	r3, r3, #9
 80008ec:	b2db      	uxtb	r3, r3
 80008ee:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0 -> bxxxx1101
 80008f0:	7bbb      	ldrb	r3, [r7, #14]
 80008f2:	f043 030d 	orr.w	r3, r3, #13
 80008f6:	b2db      	uxtb	r3, r3
 80008f8:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0 -> bxxxx1001
 80008fa:	7bbb      	ldrb	r3, [r7, #14]
 80008fc:	f043 0309 	orr.w	r3, r3, #9
 8000900:	b2db      	uxtb	r3, r3
 8000902:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000904:	f107 0208 	add.w	r2, r7, #8
 8000908:	2364      	movs	r3, #100	; 0x64
 800090a:	9300      	str	r3, [sp, #0]
 800090c:	2304      	movs	r3, #4
 800090e:	2142      	movs	r1, #66	; 0x42
 8000910:	4803      	ldr	r0, [pc, #12]	; (8000920 <lcd_send_data+0x5c>)
 8000912:	f001 faf3 	bl	8001efc <HAL_I2C_Master_Transmit>
}
 8000916:	bf00      	nop
 8000918:	3710      	adds	r7, #16
 800091a:	46bd      	mov	sp, r7
 800091c:	bd80      	pop	{r7, pc}
 800091e:	bf00      	nop
 8000920:	200000c0 	.word	0x200000c0

08000924 <lcd_clear>:

void lcd_clear (void)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	b082      	sub	sp, #8
 8000928:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x80);
 800092a:	2080      	movs	r0, #128	; 0x80
 800092c:	f7ff ff9a 	bl	8000864 <lcd_send_cmd>
	for (int i=0; i<70; i++)
 8000930:	2300      	movs	r3, #0
 8000932:	607b      	str	r3, [r7, #4]
 8000934:	e005      	b.n	8000942 <lcd_clear+0x1e>
	{
		lcd_send_data (' ');
 8000936:	2020      	movs	r0, #32
 8000938:	f7ff ffc4 	bl	80008c4 <lcd_send_data>
	for (int i=0; i<70; i++)
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	3301      	adds	r3, #1
 8000940:	607b      	str	r3, [r7, #4]
 8000942:	687b      	ldr	r3, [r7, #4]
 8000944:	2b45      	cmp	r3, #69	; 0x45
 8000946:	ddf6      	ble.n	8000936 <lcd_clear+0x12>
	}
}
 8000948:	bf00      	nop
 800094a:	bf00      	nop
 800094c:	3708      	adds	r7, #8
 800094e:	46bd      	mov	sp, r7
 8000950:	bd80      	pop	{r7, pc}

08000952 <lcd_put_cur>:

void lcd_put_cur(int row, int col)
{
 8000952:	b580      	push	{r7, lr}
 8000954:	b082      	sub	sp, #8
 8000956:	af00      	add	r7, sp, #0
 8000958:	6078      	str	r0, [r7, #4]
 800095a:	6039      	str	r1, [r7, #0]
    switch (row)
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	2b00      	cmp	r3, #0
 8000960:	d003      	beq.n	800096a <lcd_put_cur+0x18>
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	2b01      	cmp	r3, #1
 8000966:	d005      	beq.n	8000974 <lcd_put_cur+0x22>
 8000968:	e009      	b.n	800097e <lcd_put_cur+0x2c>
    {
        case 0:
            col |= 0x80;
 800096a:	683b      	ldr	r3, [r7, #0]
 800096c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000970:	603b      	str	r3, [r7, #0]
            break;
 8000972:	e004      	b.n	800097e <lcd_put_cur+0x2c>
        case 1:
            col |= 0xC0;
 8000974:	683b      	ldr	r3, [r7, #0]
 8000976:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800097a:	603b      	str	r3, [r7, #0]
            break;
 800097c:	bf00      	nop
    }

    lcd_send_cmd (col);
 800097e:	683b      	ldr	r3, [r7, #0]
 8000980:	b2db      	uxtb	r3, r3
 8000982:	4618      	mov	r0, r3
 8000984:	f7ff ff6e 	bl	8000864 <lcd_send_cmd>
}
 8000988:	bf00      	nop
 800098a:	3708      	adds	r7, #8
 800098c:	46bd      	mov	sp, r7
 800098e:	bd80      	pop	{r7, pc}

08000990 <lcd_init>:


void lcd_init (void)
{
 8000990:	b580      	push	{r7, lr}
 8000992:	af00      	add	r7, sp, #0
	// 4 bit initialisation
	HAL_Delay(50);  // wait for >40ms
 8000994:	2032      	movs	r0, #50	; 0x32
 8000996:	f000 fd9b 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x30);
 800099a:	2030      	movs	r0, #48	; 0x30
 800099c:	f7ff ff62 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(5);  // wait for >4.1ms
 80009a0:	2005      	movs	r0, #5
 80009a2:	f000 fd95 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x30);
 80009a6:	2030      	movs	r0, #48	; 0x30
 80009a8:	f7ff ff5c 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(1);  // wait for >100us
 80009ac:	2001      	movs	r0, #1
 80009ae:	f000 fd8f 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x30);
 80009b2:	2030      	movs	r0, #48	; 0x30
 80009b4:	f7ff ff56 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(10);
 80009b8:	200a      	movs	r0, #10
 80009ba:	f000 fd89 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x20);  // 4bit mode
 80009be:	2020      	movs	r0, #32
 80009c0:	f7ff ff50 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(10);
 80009c4:	200a      	movs	r0, #10
 80009c6:	f000 fd83 	bl	80014d0 <HAL_Delay>

  // dislay initialisation
	lcd_send_cmd (0x28); // Function set --> DL=0 (4 bit mode), N = 1 (2 line display) F = 0 (5x8 characters)
 80009ca:	2028      	movs	r0, #40	; 0x28
 80009cc:	f7ff ff4a 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(1);
 80009d0:	2001      	movs	r0, #1
 80009d2:	f000 fd7d 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x08); //Display on/off control --> D=0,C=0, B=0  ---> display off
 80009d6:	2008      	movs	r0, #8
 80009d8:	f7ff ff44 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(1);
 80009dc:	2001      	movs	r0, #1
 80009de:	f000 fd77 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x01);  // clear display
 80009e2:	2001      	movs	r0, #1
 80009e4:	f7ff ff3e 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(1);
 80009e8:	2001      	movs	r0, #1
 80009ea:	f000 fd71 	bl	80014d0 <HAL_Delay>
	HAL_Delay(1);
 80009ee:	2001      	movs	r0, #1
 80009f0:	f000 fd6e 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x06); //Entry mode set --> I/D = 1 (increment cursor) & S = 0 (no shift)
 80009f4:	2006      	movs	r0, #6
 80009f6:	f7ff ff35 	bl	8000864 <lcd_send_cmd>
	HAL_Delay(1);
 80009fa:	2001      	movs	r0, #1
 80009fc:	f000 fd68 	bl	80014d0 <HAL_Delay>
	lcd_send_cmd (0x0C); //Display on/off control --> D = 1, C and B = 0. (Cursor and blink, last two bits)
 8000a00:	200c      	movs	r0, #12
 8000a02:	f7ff ff2f 	bl	8000864 <lcd_send_cmd>
}
 8000a06:	bf00      	nop
 8000a08:	bd80      	pop	{r7, pc}

08000a0a <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000a0a:	b580      	push	{r7, lr}
 8000a0c:	b082      	sub	sp, #8
 8000a0e:	af00      	add	r7, sp, #0
 8000a10:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000a12:	e006      	b.n	8000a22 <lcd_send_string+0x18>
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	1c5a      	adds	r2, r3, #1
 8000a18:	607a      	str	r2, [r7, #4]
 8000a1a:	781b      	ldrb	r3, [r3, #0]
 8000a1c:	4618      	mov	r0, r3
 8000a1e:	f7ff ff51 	bl	80008c4 <lcd_send_data>
 8000a22:	687b      	ldr	r3, [r7, #4]
 8000a24:	781b      	ldrb	r3, [r3, #0]
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d1f4      	bne.n	8000a14 <lcd_send_string+0xa>
}
 8000a2a:	bf00      	nop
 8000a2c:	bf00      	nop
 8000a2e:	3708      	adds	r7, #8
 8000a30:	46bd      	mov	sp, r7
 8000a32:	bd80      	pop	{r7, pc}

08000a34 <pppp>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void pppp() {
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b086      	sub	sp, #24
 8000a38:	af00      	add	r7, sp, #0
		char str[16];
	  uint8_t abc = 1;
 8000a3a:	2301      	movs	r3, #1
 8000a3c:	75fb      	strb	r3, [r7, #23]
	  uint8_t def = 2;
 8000a3e:	2302      	movs	r3, #2
 8000a40:	75bb      	strb	r3, [r7, #22]
	  lcd_clear();
 8000a42:	f7ff ff6f 	bl	8000924 <lcd_clear>
	  lcd_put_cur(0, 0);
 8000a46:	2100      	movs	r1, #0
 8000a48:	2000      	movs	r0, #0
 8000a4a:	f7ff ff82 	bl	8000952 <lcd_put_cur>
//	  sprintf(str, "CUR: %ds", abc);
	  lcd_send_string("Hello World");
 8000a4e:	4803      	ldr	r0, [pc, #12]	; (8000a5c <pppp+0x28>)
 8000a50:	f7ff ffdb 	bl	8000a0a <lcd_send_string>
//	  lcd_put_cur(1, 0);
//	sprintf(str, "ABC: %ds", def);
//	lcd_send_string(str);
}
 8000a54:	bf00      	nop
 8000a56:	3718      	adds	r7, #24
 8000a58:	46bd      	mov	sp, r7
 8000a5a:	bd80      	pop	{r7, pc}
 8000a5c:	08004080 	.word	0x08004080

08000a60 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a60:	b580      	push	{r7, lr}
 8000a62:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a64:	f000 fcd2 	bl	800140c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a68:	f000 f836 	bl	8000ad8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a6c:	f000 f91a 	bl	8000ca4 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000a70:	f000 f8ee 	bl	8000c50 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8000a74:	f000 f8a0 	bl	8000bb8 <MX_TIM2_Init>
  MX_I2C1_Init();
 8000a78:	f000 f870 	bl	8000b5c <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000a7c:	4810      	ldr	r0, [pc, #64]	; (8000ac0 <main+0x60>)
 8000a7e:	f002 f9f3 	bl	8002e68 <HAL_TIM_Base_Start_IT>
  SCH_Init();
 8000a82:	f000 f9bf 	bl	8000e04 <SCH_Init>
  lcd_init();
 8000a86:	f7ff ff83 	bl	8000990 <lcd_init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  status = INIT;
 8000a8a:	4b0e      	ldr	r3, [pc, #56]	; (8000ac4 <main+0x64>)
 8000a8c:	2201      	movs	r2, #1
 8000a8e:	601a      	str	r2, [r3, #0]
  SCH_Add_Task(getKeyInput, 0, 10);
 8000a90:	220a      	movs	r2, #10
 8000a92:	2100      	movs	r1, #0
 8000a94:	480c      	ldr	r0, [pc, #48]	; (8000ac8 <main+0x68>)
 8000a96:	f000 f9c5 	bl	8000e24 <SCH_Add_Task>
  SCH_Add_Task(timerRun, 0, 10);
 8000a9a:	220a      	movs	r2, #10
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	480b      	ldr	r0, [pc, #44]	; (8000acc <main+0x6c>)
 8000aa0:	f000 f9c0 	bl	8000e24 <SCH_Add_Task>
  SCH_Add_Task(fsm_traffic, 0, 10);
 8000aa4:	220a      	movs	r2, #10
 8000aa6:	2100      	movs	r1, #0
 8000aa8:	4809      	ldr	r0, [pc, #36]	; (8000ad0 <main+0x70>)
 8000aaa:	f000 f9bb 	bl	8000e24 <SCH_Add_Task>
  SCH_Add_Task(pppp, 0, 5000);
 8000aae:	f241 3288 	movw	r2, #5000	; 0x1388
 8000ab2:	2100      	movs	r1, #0
 8000ab4:	4807      	ldr	r0, [pc, #28]	; (8000ad4 <main+0x74>)
 8000ab6:	f000 f9b5 	bl	8000e24 <SCH_Add_Task>
  while (1)
  {
	  SCH_Dispatch_Tasks();
 8000aba:	f000 fa5b 	bl	8000f74 <SCH_Dispatch_Tasks>
 8000abe:	e7fc      	b.n	8000aba <main+0x5a>
 8000ac0:	20000114 	.word	0x20000114
 8000ac4:	20000048 	.word	0x20000048
 8000ac8:	0800033d 	.word	0x0800033d
 8000acc:	080010f5 	.word	0x080010f5
 8000ad0:	080004b1 	.word	0x080004b1
 8000ad4:	08000a35 	.word	0x08000a35

08000ad8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ad8:	b580      	push	{r7, lr}
 8000ada:	b090      	sub	sp, #64	; 0x40
 8000adc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ade:	f107 0318 	add.w	r3, r7, #24
 8000ae2:	2228      	movs	r2, #40	; 0x28
 8000ae4:	2100      	movs	r1, #0
 8000ae6:	4618      	mov	r0, r3
 8000ae8:	f003 fab6 	bl	8004058 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000aec:	1d3b      	adds	r3, r7, #4
 8000aee:	2200      	movs	r2, #0
 8000af0:	601a      	str	r2, [r3, #0]
 8000af2:	605a      	str	r2, [r3, #4]
 8000af4:	609a      	str	r2, [r3, #8]
 8000af6:	60da      	str	r2, [r3, #12]
 8000af8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000afa:	2302      	movs	r3, #2
 8000afc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000afe:	2301      	movs	r3, #1
 8000b00:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000b02:	2310      	movs	r3, #16
 8000b04:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000b06:	2302      	movs	r3, #2
 8000b08:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000b0e:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000b12:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f107 0318 	add.w	r3, r7, #24
 8000b18:	4618      	mov	r0, r3
 8000b1a:	f001 fd47 	bl	80025ac <HAL_RCC_OscConfig>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d001      	beq.n	8000b28 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000b24:	f000 f968 	bl	8000df8 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b28:	230f      	movs	r3, #15
 8000b2a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b2c:	2302      	movs	r3, #2
 8000b2e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b30:	2300      	movs	r3, #0
 8000b32:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000b34:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b38:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000b3e:	1d3b      	adds	r3, r7, #4
 8000b40:	2102      	movs	r1, #2
 8000b42:	4618      	mov	r0, r3
 8000b44:	f001 ffb2 	bl	8002aac <HAL_RCC_ClockConfig>
 8000b48:	4603      	mov	r3, r0
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d001      	beq.n	8000b52 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000b4e:	f000 f953 	bl	8000df8 <Error_Handler>
  }
}
 8000b52:	bf00      	nop
 8000b54:	3740      	adds	r7, #64	; 0x40
 8000b56:	46bd      	mov	sp, r7
 8000b58:	bd80      	pop	{r7, pc}
	...

08000b5c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000b60:	4b12      	ldr	r3, [pc, #72]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b62:	4a13      	ldr	r2, [pc, #76]	; (8000bb0 <MX_I2C1_Init+0x54>)
 8000b64:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000b66:	4b11      	ldr	r3, [pc, #68]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b68:	4a12      	ldr	r2, [pc, #72]	; (8000bb4 <MX_I2C1_Init+0x58>)
 8000b6a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000b6c:	4b0f      	ldr	r3, [pc, #60]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b6e:	2200      	movs	r2, #0
 8000b70:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000b72:	4b0e      	ldr	r3, [pc, #56]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b74:	2200      	movs	r2, #0
 8000b76:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b78:	4b0c      	ldr	r3, [pc, #48]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b7a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000b7e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b80:	4b0a      	ldr	r3, [pc, #40]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b82:	2200      	movs	r2, #0
 8000b84:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000b86:	4b09      	ldr	r3, [pc, #36]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b88:	2200      	movs	r2, #0
 8000b8a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b8c:	4b07      	ldr	r3, [pc, #28]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b92:	4b06      	ldr	r3, [pc, #24]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b94:	2200      	movs	r2, #0
 8000b96:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000b98:	4804      	ldr	r0, [pc, #16]	; (8000bac <MX_I2C1_Init+0x50>)
 8000b9a:	f001 f86b 	bl	8001c74 <HAL_I2C_Init>
 8000b9e:	4603      	mov	r3, r0
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d001      	beq.n	8000ba8 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000ba4:	f000 f928 	bl	8000df8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000ba8:	bf00      	nop
 8000baa:	bd80      	pop	{r7, pc}
 8000bac:	200000c0 	.word	0x200000c0
 8000bb0:	40005400 	.word	0x40005400
 8000bb4:	000186a0 	.word	0x000186a0

08000bb8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b086      	sub	sp, #24
 8000bbc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000bbe:	f107 0308 	add.w	r3, r7, #8
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	601a      	str	r2, [r3, #0]
 8000bc6:	605a      	str	r2, [r3, #4]
 8000bc8:	609a      	str	r2, [r3, #8]
 8000bca:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bcc:	463b      	mov	r3, r7
 8000bce:	2200      	movs	r2, #0
 8000bd0:	601a      	str	r2, [r3, #0]
 8000bd2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000bd4:	4b1d      	ldr	r3, [pc, #116]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bd6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bda:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63999;
 8000bdc:	4b1b      	ldr	r3, [pc, #108]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bde:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 8000be2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000be4:	4b19      	ldr	r3, [pc, #100]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000be6:	2200      	movs	r2, #0
 8000be8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000bea:	4b18      	ldr	r3, [pc, #96]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bec:	2209      	movs	r2, #9
 8000bee:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bf0:	4b16      	ldr	r3, [pc, #88]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bf6:	4b15      	ldr	r3, [pc, #84]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000bfc:	4813      	ldr	r0, [pc, #76]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000bfe:	f002 f8e3 	bl	8002dc8 <HAL_TIM_Base_Init>
 8000c02:	4603      	mov	r3, r0
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d001      	beq.n	8000c0c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000c08:	f000 f8f6 	bl	8000df8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c10:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c12:	f107 0308 	add.w	r3, r7, #8
 8000c16:	4619      	mov	r1, r3
 8000c18:	480c      	ldr	r0, [pc, #48]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000c1a:	f002 fa67 	bl	80030ec <HAL_TIM_ConfigClockSource>
 8000c1e:	4603      	mov	r3, r0
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d001      	beq.n	8000c28 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000c24:	f000 f8e8 	bl	8000df8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c28:	2300      	movs	r3, #0
 8000c2a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c30:	463b      	mov	r3, r7
 8000c32:	4619      	mov	r1, r3
 8000c34:	4805      	ldr	r0, [pc, #20]	; (8000c4c <MX_TIM2_Init+0x94>)
 8000c36:	f002 fc49 	bl	80034cc <HAL_TIMEx_MasterConfigSynchronization>
 8000c3a:	4603      	mov	r3, r0
 8000c3c:	2b00      	cmp	r3, #0
 8000c3e:	d001      	beq.n	8000c44 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000c40:	f000 f8da 	bl	8000df8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c44:	bf00      	nop
 8000c46:	3718      	adds	r7, #24
 8000c48:	46bd      	mov	sp, r7
 8000c4a:	bd80      	pop	{r7, pc}
 8000c4c:	20000114 	.word	0x20000114

08000c50 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000c50:	b580      	push	{r7, lr}
 8000c52:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000c54:	4b11      	ldr	r3, [pc, #68]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c56:	4a12      	ldr	r2, [pc, #72]	; (8000ca0 <MX_USART2_UART_Init+0x50>)
 8000c58:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000c5a:	4b10      	ldr	r3, [pc, #64]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c5c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000c60:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000c62:	4b0e      	ldr	r3, [pc, #56]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000c68:	4b0c      	ldr	r3, [pc, #48]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000c6e:	4b0b      	ldr	r3, [pc, #44]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c70:	2200      	movs	r2, #0
 8000c72:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000c74:	4b09      	ldr	r3, [pc, #36]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c76:	220c      	movs	r2, #12
 8000c78:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c7a:	4b08      	ldr	r3, [pc, #32]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000c80:	4b06      	ldr	r3, [pc, #24]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c82:	2200      	movs	r2, #0
 8000c84:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000c86:	4805      	ldr	r0, [pc, #20]	; (8000c9c <MX_USART2_UART_Init+0x4c>)
 8000c88:	f002 fc90 	bl	80035ac <HAL_UART_Init>
 8000c8c:	4603      	mov	r3, r0
 8000c8e:	2b00      	cmp	r3, #0
 8000c90:	d001      	beq.n	8000c96 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000c92:	f000 f8b1 	bl	8000df8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000c96:	bf00      	nop
 8000c98:	bd80      	pop	{r7, pc}
 8000c9a:	bf00      	nop
 8000c9c:	2000015c 	.word	0x2000015c
 8000ca0:	40004400 	.word	0x40004400

08000ca4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b088      	sub	sp, #32
 8000ca8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000caa:	f107 0310 	add.w	r3, r7, #16
 8000cae:	2200      	movs	r2, #0
 8000cb0:	601a      	str	r2, [r3, #0]
 8000cb2:	605a      	str	r2, [r3, #4]
 8000cb4:	609a      	str	r2, [r3, #8]
 8000cb6:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cb8:	4b45      	ldr	r3, [pc, #276]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cba:	699b      	ldr	r3, [r3, #24]
 8000cbc:	4a44      	ldr	r2, [pc, #272]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cbe:	f043 0310 	orr.w	r3, r3, #16
 8000cc2:	6193      	str	r3, [r2, #24]
 8000cc4:	4b42      	ldr	r3, [pc, #264]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cc6:	699b      	ldr	r3, [r3, #24]
 8000cc8:	f003 0310 	and.w	r3, r3, #16
 8000ccc:	60fb      	str	r3, [r7, #12]
 8000cce:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000cd0:	4b3f      	ldr	r3, [pc, #252]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cd2:	699b      	ldr	r3, [r3, #24]
 8000cd4:	4a3e      	ldr	r2, [pc, #248]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cd6:	f043 0320 	orr.w	r3, r3, #32
 8000cda:	6193      	str	r3, [r2, #24]
 8000cdc:	4b3c      	ldr	r3, [pc, #240]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cde:	699b      	ldr	r3, [r3, #24]
 8000ce0:	f003 0320 	and.w	r3, r3, #32
 8000ce4:	60bb      	str	r3, [r7, #8]
 8000ce6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ce8:	4b39      	ldr	r3, [pc, #228]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cea:	699b      	ldr	r3, [r3, #24]
 8000cec:	4a38      	ldr	r2, [pc, #224]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cee:	f043 0304 	orr.w	r3, r3, #4
 8000cf2:	6193      	str	r3, [r2, #24]
 8000cf4:	4b36      	ldr	r3, [pc, #216]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000cf6:	699b      	ldr	r3, [r3, #24]
 8000cf8:	f003 0304 	and.w	r3, r3, #4
 8000cfc:	607b      	str	r3, [r7, #4]
 8000cfe:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d00:	4b33      	ldr	r3, [pc, #204]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000d02:	699b      	ldr	r3, [r3, #24]
 8000d04:	4a32      	ldr	r2, [pc, #200]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000d06:	f043 0308 	orr.w	r3, r3, #8
 8000d0a:	6193      	str	r3, [r2, #24]
 8000d0c:	4b30      	ldr	r3, [pc, #192]	; (8000dd0 <MX_GPIO_Init+0x12c>)
 8000d0e:	699b      	ldr	r3, [r3, #24]
 8000d10:	f003 0308 	and.w	r3, r3, #8
 8000d14:	603b      	str	r3, [r7, #0]
 8000d16:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|Buzzer_Pin|D7_Pin|D2_Pin, GPIO_PIN_RESET);
 8000d18:	2200      	movs	r2, #0
 8000d1a:	f44f 61ac 	mov.w	r1, #1376	; 0x560
 8000d1e:	482d      	ldr	r0, [pc, #180]	; (8000dd4 <MX_GPIO_Init+0x130>)
 8000d20:	f000 ff55 	bl	8001bce <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 8000d24:	2200      	movs	r2, #0
 8000d26:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000d2a:	482b      	ldr	r0, [pc, #172]	; (8000dd8 <MX_GPIO_Init+0x134>)
 8000d2c:	f000 ff4f 	bl	8001bce <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000d30:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000d34:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000d36:	4b29      	ldr	r3, [pc, #164]	; (8000ddc <MX_GPIO_Init+0x138>)
 8000d38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000d3e:	f107 0310 	add.w	r3, r7, #16
 8000d42:	4619      	mov	r1, r3
 8000d44:	4826      	ldr	r0, [pc, #152]	; (8000de0 <MX_GPIO_Init+0x13c>)
 8000d46:	f000 fda7 	bl	8001898 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON4_Pin BUTTON1_Pin BUTTON2_Pin */
  GPIO_InitStruct.Pin = BUTTON4_Pin|BUTTON1_Pin|BUTTON2_Pin;
 8000d4a:	2313      	movs	r3, #19
 8000d4c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d52:	2301      	movs	r3, #1
 8000d54:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d56:	f107 0310 	add.w	r3, r7, #16
 8000d5a:	4619      	mov	r1, r3
 8000d5c:	481d      	ldr	r0, [pc, #116]	; (8000dd4 <MX_GPIO_Init+0x130>)
 8000d5e:	f000 fd9b 	bl	8001898 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin Buzzer_Pin D7_Pin D2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|Buzzer_Pin|D7_Pin|D2_Pin;
 8000d62:	f44f 63ac 	mov.w	r3, #1376	; 0x560
 8000d66:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d68:	2301      	movs	r3, #1
 8000d6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d70:	2302      	movs	r3, #2
 8000d72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d74:	f107 0310 	add.w	r3, r7, #16
 8000d78:	4619      	mov	r1, r3
 8000d7a:	4816      	ldr	r0, [pc, #88]	; (8000dd4 <MX_GPIO_Init+0x130>)
 8000d7c:	f000 fd8c 	bl	8001898 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON3_Pin */
  GPIO_InitStruct.Pin = BUTTON3_Pin;
 8000d80:	2301      	movs	r3, #1
 8000d82:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d84:	2300      	movs	r3, #0
 8000d86:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d88:	2301      	movs	r3, #1
 8000d8a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BUTTON3_GPIO_Port, &GPIO_InitStruct);
 8000d8c:	f107 0310 	add.w	r3, r7, #16
 8000d90:	4619      	mov	r1, r3
 8000d92:	4811      	ldr	r0, [pc, #68]	; (8000dd8 <MX_GPIO_Init+0x134>)
 8000d94:	f000 fd80 	bl	8001898 <HAL_GPIO_Init>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 8000d98:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000d9c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d9e:	2301      	movs	r3, #1
 8000da0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000da2:	2300      	movs	r3, #0
 8000da4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000da6:	2302      	movs	r3, #2
 8000da8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000daa:	f107 0310 	add.w	r3, r7, #16
 8000dae:	4619      	mov	r1, r3
 8000db0:	4809      	ldr	r0, [pc, #36]	; (8000dd8 <MX_GPIO_Init+0x134>)
 8000db2:	f000 fd71 	bl	8001898 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000db6:	2200      	movs	r2, #0
 8000db8:	2100      	movs	r1, #0
 8000dba:	2028      	movs	r0, #40	; 0x28
 8000dbc:	f000 fc83 	bl	80016c6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000dc0:	2028      	movs	r0, #40	; 0x28
 8000dc2:	f000 fc9c 	bl	80016fe <HAL_NVIC_EnableIRQ>

}
 8000dc6:	bf00      	nop
 8000dc8:	3720      	adds	r7, #32
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	bd80      	pop	{r7, pc}
 8000dce:	bf00      	nop
 8000dd0:	40021000 	.word	0x40021000
 8000dd4:	40010800 	.word	0x40010800
 8000dd8:	40010c00 	.word	0x40010c00
 8000ddc:	10110000 	.word	0x10110000
 8000de0:	40011000 	.word	0x40011000

08000de4 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef * htim){
 8000de4:	b580      	push	{r7, lr}
 8000de6:	b082      	sub	sp, #8
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	6078      	str	r0, [r7, #4]
	SCH_Update();
 8000dec:	f000 f8b4 	bl	8000f58 <SCH_Update>
}
 8000df0:	bf00      	nop
 8000df2:	3708      	adds	r7, #8
 8000df4:	46bd      	mov	sp, r7
 8000df6:	bd80      	pop	{r7, pc}

08000df8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000df8:	b480      	push	{r7}
 8000dfa:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000dfc:	b672      	cpsid	i
}
 8000dfe:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e00:	e7fe      	b.n	8000e00 <Error_Handler+0x8>
	...

08000e04 <SCH_Init>:

sTasks SCH_tasks_G[SCH_MAX_TASKS];
uint8_t current_index_task = 0;
uint32_t global_timer = 0;

void SCH_Init(void) {
 8000e04:	b480      	push	{r7}
 8000e06:	af00      	add	r7, sp, #0
    current_index_task = 0;
 8000e08:	4b04      	ldr	r3, [pc, #16]	; (8000e1c <SCH_Init+0x18>)
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	701a      	strb	r2, [r3, #0]
    global_timer = 0;
 8000e0e:	4b04      	ldr	r3, [pc, #16]	; (8000e20 <SCH_Init+0x1c>)
 8000e10:	2200      	movs	r2, #0
 8000e12:	601a      	str	r2, [r3, #0]
}
 8000e14:	bf00      	nop
 8000e16:	46bd      	mov	sp, r7
 8000e18:	bc80      	pop	{r7}
 8000e1a:	4770      	bx	lr
 8000e1c:	2000004c 	.word	0x2000004c
 8000e20:	20000050 	.word	0x20000050

08000e24 <SCH_Add_Task>:

void SCH_Add_Task(void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD) {
 8000e24:	b480      	push	{r7}
 8000e26:	b085      	sub	sp, #20
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	60f8      	str	r0, [r7, #12]
 8000e2c:	60b9      	str	r1, [r7, #8]
 8000e2e:	607a      	str	r2, [r7, #4]
    if (current_index_task < SCH_MAX_TASKS) {
 8000e30:	4b29      	ldr	r3, [pc, #164]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000e32:	781b      	ldrb	r3, [r3, #0]
 8000e34:	2b27      	cmp	r3, #39	; 0x27
 8000e36:	d84a      	bhi.n	8000ece <SCH_Add_Task+0xaa>
        SCH_tasks_G[current_index_task].pTask = pFunction;
 8000e38:	4b27      	ldr	r3, [pc, #156]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000e3a:	781b      	ldrb	r3, [r3, #0]
 8000e3c:	4619      	mov	r1, r3
 8000e3e:	4a27      	ldr	r2, [pc, #156]	; (8000edc <SCH_Add_Task+0xb8>)
 8000e40:	460b      	mov	r3, r1
 8000e42:	009b      	lsls	r3, r3, #2
 8000e44:	440b      	add	r3, r1
 8000e46:	009b      	lsls	r3, r3, #2
 8000e48:	4413      	add	r3, r2
 8000e4a:	68fa      	ldr	r2, [r7, #12]
 8000e4c:	601a      	str	r2, [r3, #0]
        SCH_tasks_G[current_index_task].Delay = DELAY / TICK;
 8000e4e:	4b22      	ldr	r3, [pc, #136]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000e50:	781b      	ldrb	r3, [r3, #0]
 8000e52:	4618      	mov	r0, r3
 8000e54:	68bb      	ldr	r3, [r7, #8]
 8000e56:	4a22      	ldr	r2, [pc, #136]	; (8000ee0 <SCH_Add_Task+0xbc>)
 8000e58:	fba2 2303 	umull	r2, r3, r2, r3
 8000e5c:	08da      	lsrs	r2, r3, #3
 8000e5e:	491f      	ldr	r1, [pc, #124]	; (8000edc <SCH_Add_Task+0xb8>)
 8000e60:	4603      	mov	r3, r0
 8000e62:	009b      	lsls	r3, r3, #2
 8000e64:	4403      	add	r3, r0
 8000e66:	009b      	lsls	r3, r3, #2
 8000e68:	440b      	add	r3, r1
 8000e6a:	3304      	adds	r3, #4
 8000e6c:	601a      	str	r2, [r3, #0]
        SCH_tasks_G[current_index_task].Period = PERIOD / TICK;
 8000e6e:	4b1a      	ldr	r3, [pc, #104]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000e70:	781b      	ldrb	r3, [r3, #0]
 8000e72:	4618      	mov	r0, r3
 8000e74:	687b      	ldr	r3, [r7, #4]
 8000e76:	4a1a      	ldr	r2, [pc, #104]	; (8000ee0 <SCH_Add_Task+0xbc>)
 8000e78:	fba2 2303 	umull	r2, r3, r2, r3
 8000e7c:	08da      	lsrs	r2, r3, #3
 8000e7e:	4917      	ldr	r1, [pc, #92]	; (8000edc <SCH_Add_Task+0xb8>)
 8000e80:	4603      	mov	r3, r0
 8000e82:	009b      	lsls	r3, r3, #2
 8000e84:	4403      	add	r3, r0
 8000e86:	009b      	lsls	r3, r3, #2
 8000e88:	440b      	add	r3, r1
 8000e8a:	3308      	adds	r3, #8
 8000e8c:	601a      	str	r2, [r3, #0]
        SCH_tasks_G[current_index_task].RunMe = 0;
 8000e8e:	4b12      	ldr	r3, [pc, #72]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000e90:	781b      	ldrb	r3, [r3, #0]
 8000e92:	4619      	mov	r1, r3
 8000e94:	4a11      	ldr	r2, [pc, #68]	; (8000edc <SCH_Add_Task+0xb8>)
 8000e96:	460b      	mov	r3, r1
 8000e98:	009b      	lsls	r3, r3, #2
 8000e9a:	440b      	add	r3, r1
 8000e9c:	009b      	lsls	r3, r3, #2
 8000e9e:	4413      	add	r3, r2
 8000ea0:	330c      	adds	r3, #12
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	701a      	strb	r2, [r3, #0]
        SCH_tasks_G[current_index_task].TaskID = current_index_task;
 8000ea6:	4b0c      	ldr	r3, [pc, #48]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000ea8:	781a      	ldrb	r2, [r3, #0]
 8000eaa:	4b0b      	ldr	r3, [pc, #44]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000eac:	781b      	ldrb	r3, [r3, #0]
 8000eae:	4619      	mov	r1, r3
 8000eb0:	4610      	mov	r0, r2
 8000eb2:	4a0a      	ldr	r2, [pc, #40]	; (8000edc <SCH_Add_Task+0xb8>)
 8000eb4:	460b      	mov	r3, r1
 8000eb6:	009b      	lsls	r3, r3, #2
 8000eb8:	440b      	add	r3, r1
 8000eba:	009b      	lsls	r3, r3, #2
 8000ebc:	4413      	add	r3, r2
 8000ebe:	3310      	adds	r3, #16
 8000ec0:	6018      	str	r0, [r3, #0]

        ++current_index_task;
 8000ec2:	4b05      	ldr	r3, [pc, #20]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000ec4:	781b      	ldrb	r3, [r3, #0]
 8000ec6:	3301      	adds	r3, #1
 8000ec8:	b2da      	uxtb	r2, r3
 8000eca:	4b03      	ldr	r3, [pc, #12]	; (8000ed8 <SCH_Add_Task+0xb4>)
 8000ecc:	701a      	strb	r2, [r3, #0]
    }
}
 8000ece:	bf00      	nop
 8000ed0:	3714      	adds	r7, #20
 8000ed2:	46bd      	mov	sp, r7
 8000ed4:	bc80      	pop	{r7}
 8000ed6:	4770      	bx	lr
 8000ed8:	2000004c 	.word	0x2000004c
 8000edc:	200001a4 	.word	0x200001a4
 8000ee0:	cccccccd 	.word	0xcccccccd

08000ee4 <SCH_Delete_Task>:

void SCH_Delete_Task(uint32_t ID) {
 8000ee4:	b4b0      	push	{r4, r5, r7}
 8000ee6:	b085      	sub	sp, #20
 8000ee8:	af00      	add	r7, sp, #0
 8000eea:	6078      	str	r0, [r7, #4]
    if (current_index_task > ID) {
 8000eec:	4b18      	ldr	r3, [pc, #96]	; (8000f50 <SCH_Delete_Task+0x6c>)
 8000eee:	781b      	ldrb	r3, [r3, #0]
 8000ef0:	461a      	mov	r2, r3
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	4293      	cmp	r3, r2
 8000ef6:	d226      	bcs.n	8000f46 <SCH_Delete_Task+0x62>
        for (int i = ID; i < current_index_task - 1; ++i) {
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	60fb      	str	r3, [r7, #12]
 8000efc:	e017      	b.n	8000f2e <SCH_Delete_Task+0x4a>
            SCH_tasks_G[i] = SCH_tasks_G[i + 1];
 8000efe:	68fb      	ldr	r3, [r7, #12]
 8000f00:	1c5a      	adds	r2, r3, #1
 8000f02:	4814      	ldr	r0, [pc, #80]	; (8000f54 <SCH_Delete_Task+0x70>)
 8000f04:	68f9      	ldr	r1, [r7, #12]
 8000f06:	460b      	mov	r3, r1
 8000f08:	009b      	lsls	r3, r3, #2
 8000f0a:	440b      	add	r3, r1
 8000f0c:	009b      	lsls	r3, r3, #2
 8000f0e:	4418      	add	r0, r3
 8000f10:	4910      	ldr	r1, [pc, #64]	; (8000f54 <SCH_Delete_Task+0x70>)
 8000f12:	4613      	mov	r3, r2
 8000f14:	009b      	lsls	r3, r3, #2
 8000f16:	4413      	add	r3, r2
 8000f18:	009b      	lsls	r3, r3, #2
 8000f1a:	440b      	add	r3, r1
 8000f1c:	4604      	mov	r4, r0
 8000f1e:	461d      	mov	r5, r3
 8000f20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000f22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000f24:	682b      	ldr	r3, [r5, #0]
 8000f26:	6023      	str	r3, [r4, #0]
        for (int i = ID; i < current_index_task - 1; ++i) {
 8000f28:	68fb      	ldr	r3, [r7, #12]
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	60fb      	str	r3, [r7, #12]
 8000f2e:	4b08      	ldr	r3, [pc, #32]	; (8000f50 <SCH_Delete_Task+0x6c>)
 8000f30:	781b      	ldrb	r3, [r3, #0]
 8000f32:	3b01      	subs	r3, #1
 8000f34:	68fa      	ldr	r2, [r7, #12]
 8000f36:	429a      	cmp	r2, r3
 8000f38:	dbe1      	blt.n	8000efe <SCH_Delete_Task+0x1a>
        }
        --current_index_task;
 8000f3a:	4b05      	ldr	r3, [pc, #20]	; (8000f50 <SCH_Delete_Task+0x6c>)
 8000f3c:	781b      	ldrb	r3, [r3, #0]
 8000f3e:	3b01      	subs	r3, #1
 8000f40:	b2da      	uxtb	r2, r3
 8000f42:	4b03      	ldr	r3, [pc, #12]	; (8000f50 <SCH_Delete_Task+0x6c>)
 8000f44:	701a      	strb	r2, [r3, #0]
    }
}
 8000f46:	bf00      	nop
 8000f48:	3714      	adds	r7, #20
 8000f4a:	46bd      	mov	sp, r7
 8000f4c:	bcb0      	pop	{r4, r5, r7}
 8000f4e:	4770      	bx	lr
 8000f50:	2000004c 	.word	0x2000004c
 8000f54:	200001a4 	.word	0x200001a4

08000f58 <SCH_Update>:

void SCH_Update(void) {
 8000f58:	b480      	push	{r7}
 8000f5a:	af00      	add	r7, sp, #0
	++global_timer;
 8000f5c:	4b04      	ldr	r3, [pc, #16]	; (8000f70 <SCH_Update+0x18>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	3301      	adds	r3, #1
 8000f62:	4a03      	ldr	r2, [pc, #12]	; (8000f70 <SCH_Update+0x18>)
 8000f64:	6013      	str	r3, [r2, #0]
    if (global_timer > UINT32_MAX) {
    	global_timer = 0;
    }
}
 8000f66:	bf00      	nop
 8000f68:	46bd      	mov	sp, r7
 8000f6a:	bc80      	pop	{r7}
 8000f6c:	4770      	bx	lr
 8000f6e:	bf00      	nop
 8000f70:	20000050 	.word	0x20000050

08000f74 <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void) {
 8000f74:	b580      	push	{r7, lr}
 8000f76:	b082      	sub	sp, #8
 8000f78:	af00      	add	r7, sp, #0
    for (int i = 0; i < current_index_task; ++i) {
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	607b      	str	r3, [r7, #4]
 8000f7e:	e06e      	b.n	800105e <SCH_Dispatch_Tasks+0xea>
        if (global_timer >= SCH_tasks_G[i].Delay) {//Check if task execute
 8000f80:	493c      	ldr	r1, [pc, #240]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000f82:	687a      	ldr	r2, [r7, #4]
 8000f84:	4613      	mov	r3, r2
 8000f86:	009b      	lsls	r3, r3, #2
 8000f88:	4413      	add	r3, r2
 8000f8a:	009b      	lsls	r3, r3, #2
 8000f8c:	440b      	add	r3, r1
 8000f8e:	3304      	adds	r3, #4
 8000f90:	681a      	ldr	r2, [r3, #0]
 8000f92:	4b39      	ldr	r3, [pc, #228]	; (8001078 <SCH_Dispatch_Tasks+0x104>)
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	429a      	cmp	r2, r3
 8000f98:	d840      	bhi.n	800101c <SCH_Dispatch_Tasks+0xa8>
            ++SCH_tasks_G[i].RunMe;
 8000f9a:	4936      	ldr	r1, [pc, #216]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000f9c:	687a      	ldr	r2, [r7, #4]
 8000f9e:	4613      	mov	r3, r2
 8000fa0:	009b      	lsls	r3, r3, #2
 8000fa2:	4413      	add	r3, r2
 8000fa4:	009b      	lsls	r3, r3, #2
 8000fa6:	440b      	add	r3, r1
 8000fa8:	330c      	adds	r3, #12
 8000faa:	781b      	ldrb	r3, [r3, #0]
 8000fac:	3301      	adds	r3, #1
 8000fae:	b2d8      	uxtb	r0, r3
 8000fb0:	4930      	ldr	r1, [pc, #192]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000fb2:	687a      	ldr	r2, [r7, #4]
 8000fb4:	4613      	mov	r3, r2
 8000fb6:	009b      	lsls	r3, r3, #2
 8000fb8:	4413      	add	r3, r2
 8000fba:	009b      	lsls	r3, r3, #2
 8000fbc:	440b      	add	r3, r1
 8000fbe:	330c      	adds	r3, #12
 8000fc0:	4602      	mov	r2, r0
 8000fc2:	701a      	strb	r2, [r3, #0]
            if (SCH_tasks_G[i].Period > 0) {
 8000fc4:	492b      	ldr	r1, [pc, #172]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000fc6:	687a      	ldr	r2, [r7, #4]
 8000fc8:	4613      	mov	r3, r2
 8000fca:	009b      	lsls	r3, r3, #2
 8000fcc:	4413      	add	r3, r2
 8000fce:	009b      	lsls	r3, r3, #2
 8000fd0:	440b      	add	r3, r1
 8000fd2:	3308      	adds	r3, #8
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	2b00      	cmp	r3, #0
 8000fd8:	d01c      	beq.n	8001014 <SCH_Dispatch_Tasks+0xa0>
            	if (global_timer + SCH_tasks_G[i].Period <= UINT32_MAX) {
            		SCH_tasks_G[i].Delay += SCH_tasks_G[i].Period;
 8000fda:	4926      	ldr	r1, [pc, #152]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000fdc:	687a      	ldr	r2, [r7, #4]
 8000fde:	4613      	mov	r3, r2
 8000fe0:	009b      	lsls	r3, r3, #2
 8000fe2:	4413      	add	r3, r2
 8000fe4:	009b      	lsls	r3, r3, #2
 8000fe6:	440b      	add	r3, r1
 8000fe8:	3304      	adds	r3, #4
 8000fea:	6819      	ldr	r1, [r3, #0]
 8000fec:	4821      	ldr	r0, [pc, #132]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8000fee:	687a      	ldr	r2, [r7, #4]
 8000ff0:	4613      	mov	r3, r2
 8000ff2:	009b      	lsls	r3, r3, #2
 8000ff4:	4413      	add	r3, r2
 8000ff6:	009b      	lsls	r3, r3, #2
 8000ff8:	4403      	add	r3, r0
 8000ffa:	3308      	adds	r3, #8
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	4419      	add	r1, r3
 8001000:	481c      	ldr	r0, [pc, #112]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8001002:	687a      	ldr	r2, [r7, #4]
 8001004:	4613      	mov	r3, r2
 8001006:	009b      	lsls	r3, r3, #2
 8001008:	4413      	add	r3, r2
 800100a:	009b      	lsls	r3, r3, #2
 800100c:	4403      	add	r3, r0
 800100e:	3304      	adds	r3, #4
 8001010:	6019      	str	r1, [r3, #0]
 8001012:	e003      	b.n	800101c <SCH_Dispatch_Tasks+0xa8>
            		SCH_tasks_G[i].Delay = SCH_tasks_G[i].Period - (UINT32_MAX - SCH_tasks_G[i].Delay);
            		--SCH_tasks_G[i].RunMe;
            	}
            }
            else {
                SCH_Delete_Task(i);
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	4618      	mov	r0, r3
 8001018:	f7ff ff64 	bl	8000ee4 <SCH_Delete_Task>
            }
        }
        if (SCH_tasks_G[i].RunMe > 0) {
 800101c:	4915      	ldr	r1, [pc, #84]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 800101e:	687a      	ldr	r2, [r7, #4]
 8001020:	4613      	mov	r3, r2
 8001022:	009b      	lsls	r3, r3, #2
 8001024:	4413      	add	r3, r2
 8001026:	009b      	lsls	r3, r3, #2
 8001028:	440b      	add	r3, r1
 800102a:	330c      	adds	r3, #12
 800102c:	781b      	ldrb	r3, [r3, #0]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d012      	beq.n	8001058 <SCH_Dispatch_Tasks+0xe4>
            SCH_tasks_G[i].RunMe = 0;
 8001032:	4910      	ldr	r1, [pc, #64]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8001034:	687a      	ldr	r2, [r7, #4]
 8001036:	4613      	mov	r3, r2
 8001038:	009b      	lsls	r3, r3, #2
 800103a:	4413      	add	r3, r2
 800103c:	009b      	lsls	r3, r3, #2
 800103e:	440b      	add	r3, r1
 8001040:	330c      	adds	r3, #12
 8001042:	2200      	movs	r2, #0
 8001044:	701a      	strb	r2, [r3, #0]
            (*SCH_tasks_G[i].pTask)();
 8001046:	490b      	ldr	r1, [pc, #44]	; (8001074 <SCH_Dispatch_Tasks+0x100>)
 8001048:	687a      	ldr	r2, [r7, #4]
 800104a:	4613      	mov	r3, r2
 800104c:	009b      	lsls	r3, r3, #2
 800104e:	4413      	add	r3, r2
 8001050:	009b      	lsls	r3, r3, #2
 8001052:	440b      	add	r3, r1
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	4798      	blx	r3
    for (int i = 0; i < current_index_task; ++i) {
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	3301      	adds	r3, #1
 800105c:	607b      	str	r3, [r7, #4]
 800105e:	4b07      	ldr	r3, [pc, #28]	; (800107c <SCH_Dispatch_Tasks+0x108>)
 8001060:	781b      	ldrb	r3, [r3, #0]
 8001062:	461a      	mov	r2, r3
 8001064:	687b      	ldr	r3, [r7, #4]
 8001066:	4293      	cmp	r3, r2
 8001068:	db8a      	blt.n	8000f80 <SCH_Dispatch_Tasks+0xc>
        }
    }
}
 800106a:	bf00      	nop
 800106c:	bf00      	nop
 800106e:	3708      	adds	r7, #8
 8001070:	46bd      	mov	sp, r7
 8001072:	bd80      	pop	{r7, pc}
 8001074:	200001a4 	.word	0x200001a4
 8001078:	20000050 	.word	0x20000050
 800107c:	2000004c 	.word	0x2000004c

08001080 <setTimer>:
#include "global.h"

int timer_counter[MAX_COUNTER];
int timer_flag[MAX_COUNTER];

void setTimer(int index, int value) {
 8001080:	b480      	push	{r7}
 8001082:	b083      	sub	sp, #12
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]
 8001088:	6039      	str	r1, [r7, #0]
	timer_counter[index] = value/TICK;
 800108a:	683b      	ldr	r3, [r7, #0]
 800108c:	4a09      	ldr	r2, [pc, #36]	; (80010b4 <setTimer+0x34>)
 800108e:	fb82 1203 	smull	r1, r2, r2, r3
 8001092:	1092      	asrs	r2, r2, #2
 8001094:	17db      	asrs	r3, r3, #31
 8001096:	1ad2      	subs	r2, r2, r3
 8001098:	4907      	ldr	r1, [pc, #28]	; (80010b8 <setTimer+0x38>)
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[index] = 0;
 80010a0:	4a06      	ldr	r2, [pc, #24]	; (80010bc <setTimer+0x3c>)
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	2100      	movs	r1, #0
 80010a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80010aa:	bf00      	nop
 80010ac:	370c      	adds	r7, #12
 80010ae:	46bd      	mov	sp, r7
 80010b0:	bc80      	pop	{r7}
 80010b2:	4770      	bx	lr
 80010b4:	66666667 	.word	0x66666667
 80010b8:	200004c4 	.word	0x200004c4
 80010bc:	200004f0 	.word	0x200004f0

080010c0 <isTimerExpired>:

int isTimerExpired(int index) {
 80010c0:	b480      	push	{r7}
 80010c2:	b083      	sub	sp, #12
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	6078      	str	r0, [r7, #4]
	if (timer_flag[index] == 1) {
 80010c8:	4a09      	ldr	r2, [pc, #36]	; (80010f0 <isTimerExpired+0x30>)
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010d0:	2b01      	cmp	r3, #1
 80010d2:	d106      	bne.n	80010e2 <isTimerExpired+0x22>
		timer_flag[index] = 0;
 80010d4:	4a06      	ldr	r2, [pc, #24]	; (80010f0 <isTimerExpired+0x30>)
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	2100      	movs	r1, #0
 80010da:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 80010de:	2301      	movs	r3, #1
 80010e0:	e000      	b.n	80010e4 <isTimerExpired+0x24>
	}
	return 0;
 80010e2:	2300      	movs	r3, #0
}
 80010e4:	4618      	mov	r0, r3
 80010e6:	370c      	adds	r7, #12
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bc80      	pop	{r7}
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop
 80010f0:	200004f0 	.word	0x200004f0

080010f4 <timerRun>:

void timerRun() {
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
	for (int i = 0; i < MAX_COUNTER; i++) {
 80010fa:	2300      	movs	r3, #0
 80010fc:	607b      	str	r3, [r7, #4]
 80010fe:	e01c      	b.n	800113a <timerRun+0x46>
		if (timer_counter[i] > 0) {
 8001100:	4a12      	ldr	r2, [pc, #72]	; (800114c <timerRun+0x58>)
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001108:	2b00      	cmp	r3, #0
 800110a:	dd13      	ble.n	8001134 <timerRun+0x40>
			--timer_counter[i];
 800110c:	4a0f      	ldr	r2, [pc, #60]	; (800114c <timerRun+0x58>)
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001114:	1e5a      	subs	r2, r3, #1
 8001116:	490d      	ldr	r1, [pc, #52]	; (800114c <timerRun+0x58>)
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (timer_counter[i] <= 0) {
 800111e:	4a0b      	ldr	r2, [pc, #44]	; (800114c <timerRun+0x58>)
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001126:	2b00      	cmp	r3, #0
 8001128:	dc04      	bgt.n	8001134 <timerRun+0x40>
				timer_flag[i] = 1;
 800112a:	4a09      	ldr	r2, [pc, #36]	; (8001150 <timerRun+0x5c>)
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	2101      	movs	r1, #1
 8001130:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int i = 0; i < MAX_COUNTER; i++) {
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	3301      	adds	r3, #1
 8001138:	607b      	str	r3, [r7, #4]
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	2b0a      	cmp	r3, #10
 800113e:	dddf      	ble.n	8001100 <timerRun+0xc>
			}
		}
	}
}
 8001140:	bf00      	nop
 8001142:	bf00      	nop
 8001144:	370c      	adds	r7, #12
 8001146:	46bd      	mov	sp, r7
 8001148:	bc80      	pop	{r7}
 800114a:	4770      	bx	lr
 800114c:	200004c4 	.word	0x200004c4
 8001150:	200004f0 	.word	0x200004f0

08001154 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001154:	b480      	push	{r7}
 8001156:	b085      	sub	sp, #20
 8001158:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800115a:	4b15      	ldr	r3, [pc, #84]	; (80011b0 <HAL_MspInit+0x5c>)
 800115c:	699b      	ldr	r3, [r3, #24]
 800115e:	4a14      	ldr	r2, [pc, #80]	; (80011b0 <HAL_MspInit+0x5c>)
 8001160:	f043 0301 	orr.w	r3, r3, #1
 8001164:	6193      	str	r3, [r2, #24]
 8001166:	4b12      	ldr	r3, [pc, #72]	; (80011b0 <HAL_MspInit+0x5c>)
 8001168:	699b      	ldr	r3, [r3, #24]
 800116a:	f003 0301 	and.w	r3, r3, #1
 800116e:	60bb      	str	r3, [r7, #8]
 8001170:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001172:	4b0f      	ldr	r3, [pc, #60]	; (80011b0 <HAL_MspInit+0x5c>)
 8001174:	69db      	ldr	r3, [r3, #28]
 8001176:	4a0e      	ldr	r2, [pc, #56]	; (80011b0 <HAL_MspInit+0x5c>)
 8001178:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800117c:	61d3      	str	r3, [r2, #28]
 800117e:	4b0c      	ldr	r3, [pc, #48]	; (80011b0 <HAL_MspInit+0x5c>)
 8001180:	69db      	ldr	r3, [r3, #28]
 8001182:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001186:	607b      	str	r3, [r7, #4]
 8001188:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800118a:	4b0a      	ldr	r3, [pc, #40]	; (80011b4 <HAL_MspInit+0x60>)
 800118c:	685b      	ldr	r3, [r3, #4]
 800118e:	60fb      	str	r3, [r7, #12]
 8001190:	68fb      	ldr	r3, [r7, #12]
 8001192:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001196:	60fb      	str	r3, [r7, #12]
 8001198:	68fb      	ldr	r3, [r7, #12]
 800119a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800119e:	60fb      	str	r3, [r7, #12]
 80011a0:	4a04      	ldr	r2, [pc, #16]	; (80011b4 <HAL_MspInit+0x60>)
 80011a2:	68fb      	ldr	r3, [r7, #12]
 80011a4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80011a6:	bf00      	nop
 80011a8:	3714      	adds	r7, #20
 80011aa:	46bd      	mov	sp, r7
 80011ac:	bc80      	pop	{r7}
 80011ae:	4770      	bx	lr
 80011b0:	40021000 	.word	0x40021000
 80011b4:	40010000 	.word	0x40010000

080011b8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80011b8:	b580      	push	{r7, lr}
 80011ba:	b08a      	sub	sp, #40	; 0x28
 80011bc:	af00      	add	r7, sp, #0
 80011be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011c0:	f107 0314 	add.w	r3, r7, #20
 80011c4:	2200      	movs	r2, #0
 80011c6:	601a      	str	r2, [r3, #0]
 80011c8:	605a      	str	r2, [r3, #4]
 80011ca:	609a      	str	r2, [r3, #8]
 80011cc:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	4a1d      	ldr	r2, [pc, #116]	; (8001248 <HAL_I2C_MspInit+0x90>)
 80011d4:	4293      	cmp	r3, r2
 80011d6:	d132      	bne.n	800123e <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80011d8:	4b1c      	ldr	r3, [pc, #112]	; (800124c <HAL_I2C_MspInit+0x94>)
 80011da:	699b      	ldr	r3, [r3, #24]
 80011dc:	4a1b      	ldr	r2, [pc, #108]	; (800124c <HAL_I2C_MspInit+0x94>)
 80011de:	f043 0308 	orr.w	r3, r3, #8
 80011e2:	6193      	str	r3, [r2, #24]
 80011e4:	4b19      	ldr	r3, [pc, #100]	; (800124c <HAL_I2C_MspInit+0x94>)
 80011e6:	699b      	ldr	r3, [r3, #24]
 80011e8:	f003 0308 	and.w	r3, r3, #8
 80011ec:	613b      	str	r3, [r7, #16]
 80011ee:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80011f0:	f44f 7340 	mov.w	r3, #768	; 0x300
 80011f4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80011f6:	2312      	movs	r3, #18
 80011f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80011fa:	2303      	movs	r3, #3
 80011fc:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80011fe:	f107 0314 	add.w	r3, r7, #20
 8001202:	4619      	mov	r1, r3
 8001204:	4812      	ldr	r0, [pc, #72]	; (8001250 <HAL_I2C_MspInit+0x98>)
 8001206:	f000 fb47 	bl	8001898 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 800120a:	4b12      	ldr	r3, [pc, #72]	; (8001254 <HAL_I2C_MspInit+0x9c>)
 800120c:	685b      	ldr	r3, [r3, #4]
 800120e:	627b      	str	r3, [r7, #36]	; 0x24
 8001210:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001212:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8001216:	627b      	str	r3, [r7, #36]	; 0x24
 8001218:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800121a:	f043 0302 	orr.w	r3, r3, #2
 800121e:	627b      	str	r3, [r7, #36]	; 0x24
 8001220:	4a0c      	ldr	r2, [pc, #48]	; (8001254 <HAL_I2C_MspInit+0x9c>)
 8001222:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001224:	6053      	str	r3, [r2, #4]

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001226:	4b09      	ldr	r3, [pc, #36]	; (800124c <HAL_I2C_MspInit+0x94>)
 8001228:	69db      	ldr	r3, [r3, #28]
 800122a:	4a08      	ldr	r2, [pc, #32]	; (800124c <HAL_I2C_MspInit+0x94>)
 800122c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001230:	61d3      	str	r3, [r2, #28]
 8001232:	4b06      	ldr	r3, [pc, #24]	; (800124c <HAL_I2C_MspInit+0x94>)
 8001234:	69db      	ldr	r3, [r3, #28]
 8001236:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800123a:	60fb      	str	r3, [r7, #12]
 800123c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800123e:	bf00      	nop
 8001240:	3728      	adds	r7, #40	; 0x28
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}
 8001246:	bf00      	nop
 8001248:	40005400 	.word	0x40005400
 800124c:	40021000 	.word	0x40021000
 8001250:	40010c00 	.word	0x40010c00
 8001254:	40010000 	.word	0x40010000

08001258 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001258:	b580      	push	{r7, lr}
 800125a:	b084      	sub	sp, #16
 800125c:	af00      	add	r7, sp, #0
 800125e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	681b      	ldr	r3, [r3, #0]
 8001264:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001268:	d113      	bne.n	8001292 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800126a:	4b0c      	ldr	r3, [pc, #48]	; (800129c <HAL_TIM_Base_MspInit+0x44>)
 800126c:	69db      	ldr	r3, [r3, #28]
 800126e:	4a0b      	ldr	r2, [pc, #44]	; (800129c <HAL_TIM_Base_MspInit+0x44>)
 8001270:	f043 0301 	orr.w	r3, r3, #1
 8001274:	61d3      	str	r3, [r2, #28]
 8001276:	4b09      	ldr	r3, [pc, #36]	; (800129c <HAL_TIM_Base_MspInit+0x44>)
 8001278:	69db      	ldr	r3, [r3, #28]
 800127a:	f003 0301 	and.w	r3, r3, #1
 800127e:	60fb      	str	r3, [r7, #12]
 8001280:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001282:	2200      	movs	r2, #0
 8001284:	2100      	movs	r1, #0
 8001286:	201c      	movs	r0, #28
 8001288:	f000 fa1d 	bl	80016c6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800128c:	201c      	movs	r0, #28
 800128e:	f000 fa36 	bl	80016fe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8001292:	bf00      	nop
 8001294:	3710      	adds	r7, #16
 8001296:	46bd      	mov	sp, r7
 8001298:	bd80      	pop	{r7, pc}
 800129a:	bf00      	nop
 800129c:	40021000 	.word	0x40021000

080012a0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b088      	sub	sp, #32
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012a8:	f107 0310 	add.w	r3, r7, #16
 80012ac:	2200      	movs	r2, #0
 80012ae:	601a      	str	r2, [r3, #0]
 80012b0:	605a      	str	r2, [r3, #4]
 80012b2:	609a      	str	r2, [r3, #8]
 80012b4:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	4a19      	ldr	r2, [pc, #100]	; (8001320 <HAL_UART_MspInit+0x80>)
 80012bc:	4293      	cmp	r3, r2
 80012be:	d12b      	bne.n	8001318 <HAL_UART_MspInit+0x78>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80012c0:	4b18      	ldr	r3, [pc, #96]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012c2:	69db      	ldr	r3, [r3, #28]
 80012c4:	4a17      	ldr	r2, [pc, #92]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012ca:	61d3      	str	r3, [r2, #28]
 80012cc:	4b15      	ldr	r3, [pc, #84]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012ce:	69db      	ldr	r3, [r3, #28]
 80012d0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012d4:	60fb      	str	r3, [r7, #12]
 80012d6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80012d8:	4b12      	ldr	r3, [pc, #72]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012da:	699b      	ldr	r3, [r3, #24]
 80012dc:	4a11      	ldr	r2, [pc, #68]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012de:	f043 0304 	orr.w	r3, r3, #4
 80012e2:	6193      	str	r3, [r2, #24]
 80012e4:	4b0f      	ldr	r3, [pc, #60]	; (8001324 <HAL_UART_MspInit+0x84>)
 80012e6:	699b      	ldr	r3, [r3, #24]
 80012e8:	f003 0304 	and.w	r3, r3, #4
 80012ec:	60bb      	str	r3, [r7, #8]
 80012ee:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80012f0:	230c      	movs	r3, #12
 80012f2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012f4:	2302      	movs	r3, #2
 80012f6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012f8:	2302      	movs	r3, #2
 80012fa:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012fc:	f107 0310 	add.w	r3, r7, #16
 8001300:	4619      	mov	r1, r3
 8001302:	4809      	ldr	r0, [pc, #36]	; (8001328 <HAL_UART_MspInit+0x88>)
 8001304:	f000 fac8 	bl	8001898 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001308:	2200      	movs	r2, #0
 800130a:	2100      	movs	r1, #0
 800130c:	2026      	movs	r0, #38	; 0x26
 800130e:	f000 f9da 	bl	80016c6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001312:	2026      	movs	r0, #38	; 0x26
 8001314:	f000 f9f3 	bl	80016fe <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001318:	bf00      	nop
 800131a:	3720      	adds	r7, #32
 800131c:	46bd      	mov	sp, r7
 800131e:	bd80      	pop	{r7, pc}
 8001320:	40004400 	.word	0x40004400
 8001324:	40021000 	.word	0x40021000
 8001328:	40010800 	.word	0x40010800

0800132c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800132c:	b480      	push	{r7}
 800132e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001330:	e7fe      	b.n	8001330 <NMI_Handler+0x4>

08001332 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001332:	b480      	push	{r7}
 8001334:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001336:	e7fe      	b.n	8001336 <HardFault_Handler+0x4>

08001338 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001338:	b480      	push	{r7}
 800133a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800133c:	e7fe      	b.n	800133c <MemManage_Handler+0x4>

0800133e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800133e:	b480      	push	{r7}
 8001340:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001342:	e7fe      	b.n	8001342 <BusFault_Handler+0x4>

08001344 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001344:	b480      	push	{r7}
 8001346:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001348:	e7fe      	b.n	8001348 <UsageFault_Handler+0x4>

0800134a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800134a:	b480      	push	{r7}
 800134c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800134e:	bf00      	nop
 8001350:	46bd      	mov	sp, r7
 8001352:	bc80      	pop	{r7}
 8001354:	4770      	bx	lr

08001356 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001356:	b480      	push	{r7}
 8001358:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800135a:	bf00      	nop
 800135c:	46bd      	mov	sp, r7
 800135e:	bc80      	pop	{r7}
 8001360:	4770      	bx	lr

08001362 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001362:	b480      	push	{r7}
 8001364:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001366:	bf00      	nop
 8001368:	46bd      	mov	sp, r7
 800136a:	bc80      	pop	{r7}
 800136c:	4770      	bx	lr

0800136e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800136e:	b580      	push	{r7, lr}
 8001370:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001372:	f000 f891 	bl	8001498 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001376:	bf00      	nop
 8001378:	bd80      	pop	{r7, pc}
	...

0800137c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800137c:	b580      	push	{r7, lr}
 800137e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001380:	4802      	ldr	r0, [pc, #8]	; (800138c <TIM2_IRQHandler+0x10>)
 8001382:	f001 fdc3 	bl	8002f0c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001386:	bf00      	nop
 8001388:	bd80      	pop	{r7, pc}
 800138a:	bf00      	nop
 800138c:	20000114 	.word	0x20000114

08001390 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001394:	4802      	ldr	r0, [pc, #8]	; (80013a0 <USART2_IRQHandler+0x10>)
 8001396:	f002 f959 	bl	800364c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800139a:	bf00      	nop
 800139c:	bd80      	pop	{r7, pc}
 800139e:	bf00      	nop
 80013a0:	2000015c 	.word	0x2000015c

080013a4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80013a4:	b580      	push	{r7, lr}
 80013a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80013a8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80013ac:	f000 fc40 	bl	8001c30 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80013b0:	bf00      	nop
 80013b2:	bd80      	pop	{r7, pc}

080013b4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80013b4:	b480      	push	{r7}
 80013b6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80013b8:	bf00      	nop
 80013ba:	46bd      	mov	sp, r7
 80013bc:	bc80      	pop	{r7}
 80013be:	4770      	bx	lr

080013c0 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 80013c0:	f7ff fff8 	bl	80013b4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013c4:	480b      	ldr	r0, [pc, #44]	; (80013f4 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 80013c6:	490c      	ldr	r1, [pc, #48]	; (80013f8 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 80013c8:	4a0c      	ldr	r2, [pc, #48]	; (80013fc <LoopFillZerobss+0x16>)
  movs r3, #0
 80013ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013cc:	e002      	b.n	80013d4 <LoopCopyDataInit>

080013ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80013d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80013d2:	3304      	adds	r3, #4

080013d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80013d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80013d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80013d8:	d3f9      	bcc.n	80013ce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80013da:	4a09      	ldr	r2, [pc, #36]	; (8001400 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 80013dc:	4c09      	ldr	r4, [pc, #36]	; (8001404 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80013de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80013e0:	e001      	b.n	80013e6 <LoopFillZerobss>

080013e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80013e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80013e4:	3204      	adds	r2, #4

080013e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80013e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80013e8:	d3fb      	bcc.n	80013e2 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80013ea:	f002 fe11 	bl	8004010 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80013ee:	f7ff fb37 	bl	8000a60 <main>
  bx lr
 80013f2:	4770      	bx	lr
  ldr r0, =_sdata
 80013f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013f8:	2000002c 	.word	0x2000002c
  ldr r2, =_sidata
 80013fc:	080040c0 	.word	0x080040c0
  ldr r2, =_sbss
 8001400:	2000002c 	.word	0x2000002c
  ldr r4, =_ebss
 8001404:	20000520 	.word	0x20000520

08001408 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001408:	e7fe      	b.n	8001408 <ADC1_2_IRQHandler>
	...

0800140c <HAL_Init>:
 800140c:	b580      	push	{r7, lr}
 800140e:	af00      	add	r7, sp, #0
 8001410:	4b08      	ldr	r3, [pc, #32]	; (8001434 <HAL_Init+0x28>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4a07      	ldr	r2, [pc, #28]	; (8001434 <HAL_Init+0x28>)
 8001416:	f043 0310 	orr.w	r3, r3, #16
 800141a:	6013      	str	r3, [r2, #0]
 800141c:	2003      	movs	r0, #3
 800141e:	f000 f947 	bl	80016b0 <HAL_NVIC_SetPriorityGrouping>
 8001422:	2000      	movs	r0, #0
 8001424:	f000 f808 	bl	8001438 <HAL_InitTick>
 8001428:	f7ff fe94 	bl	8001154 <HAL_MspInit>
 800142c:	2300      	movs	r3, #0
 800142e:	4618      	mov	r0, r3
 8001430:	bd80      	pop	{r7, pc}
 8001432:	bf00      	nop
 8001434:	40022000 	.word	0x40022000

08001438 <HAL_InitTick>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b082      	sub	sp, #8
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	4b12      	ldr	r3, [pc, #72]	; (800148c <HAL_InitTick+0x54>)
 8001442:	681a      	ldr	r2, [r3, #0]
 8001444:	4b12      	ldr	r3, [pc, #72]	; (8001490 <HAL_InitTick+0x58>)
 8001446:	781b      	ldrb	r3, [r3, #0]
 8001448:	4619      	mov	r1, r3
 800144a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800144e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001452:	fbb2 f3f3 	udiv	r3, r2, r3
 8001456:	4618      	mov	r0, r3
 8001458:	f000 f95f 	bl	800171a <HAL_SYSTICK_Config>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <HAL_InitTick+0x2e>
 8001462:	2301      	movs	r3, #1
 8001464:	e00e      	b.n	8001484 <HAL_InitTick+0x4c>
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	2b0f      	cmp	r3, #15
 800146a:	d80a      	bhi.n	8001482 <HAL_InitTick+0x4a>
 800146c:	2200      	movs	r2, #0
 800146e:	6879      	ldr	r1, [r7, #4]
 8001470:	f04f 30ff 	mov.w	r0, #4294967295
 8001474:	f000 f927 	bl	80016c6 <HAL_NVIC_SetPriority>
 8001478:	4a06      	ldr	r2, [pc, #24]	; (8001494 <HAL_InitTick+0x5c>)
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	6013      	str	r3, [r2, #0]
 800147e:	2300      	movs	r3, #0
 8001480:	e000      	b.n	8001484 <HAL_InitTick+0x4c>
 8001482:	2301      	movs	r3, #1
 8001484:	4618      	mov	r0, r3
 8001486:	3708      	adds	r7, #8
 8001488:	46bd      	mov	sp, r7
 800148a:	bd80      	pop	{r7, pc}
 800148c:	20000020 	.word	0x20000020
 8001490:	20000028 	.word	0x20000028
 8001494:	20000024 	.word	0x20000024

08001498 <HAL_IncTick>:
 8001498:	b480      	push	{r7}
 800149a:	af00      	add	r7, sp, #0
 800149c:	4b05      	ldr	r3, [pc, #20]	; (80014b4 <HAL_IncTick+0x1c>)
 800149e:	781b      	ldrb	r3, [r3, #0]
 80014a0:	461a      	mov	r2, r3
 80014a2:	4b05      	ldr	r3, [pc, #20]	; (80014b8 <HAL_IncTick+0x20>)
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	4413      	add	r3, r2
 80014a8:	4a03      	ldr	r2, [pc, #12]	; (80014b8 <HAL_IncTick+0x20>)
 80014aa:	6013      	str	r3, [r2, #0]
 80014ac:	bf00      	nop
 80014ae:	46bd      	mov	sp, r7
 80014b0:	bc80      	pop	{r7}
 80014b2:	4770      	bx	lr
 80014b4:	20000028 	.word	0x20000028
 80014b8:	2000051c 	.word	0x2000051c

080014bc <HAL_GetTick>:
 80014bc:	b480      	push	{r7}
 80014be:	af00      	add	r7, sp, #0
 80014c0:	4b02      	ldr	r3, [pc, #8]	; (80014cc <HAL_GetTick+0x10>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	4618      	mov	r0, r3
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bc80      	pop	{r7}
 80014ca:	4770      	bx	lr
 80014cc:	2000051c 	.word	0x2000051c

080014d0 <HAL_Delay>:
 80014d0:	b580      	push	{r7, lr}
 80014d2:	b084      	sub	sp, #16
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
 80014d8:	f7ff fff0 	bl	80014bc <HAL_GetTick>
 80014dc:	60b8      	str	r0, [r7, #8]
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	60fb      	str	r3, [r7, #12]
 80014e2:	68fb      	ldr	r3, [r7, #12]
 80014e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80014e8:	d005      	beq.n	80014f6 <HAL_Delay+0x26>
 80014ea:	4b0a      	ldr	r3, [pc, #40]	; (8001514 <HAL_Delay+0x44>)
 80014ec:	781b      	ldrb	r3, [r3, #0]
 80014ee:	461a      	mov	r2, r3
 80014f0:	68fb      	ldr	r3, [r7, #12]
 80014f2:	4413      	add	r3, r2
 80014f4:	60fb      	str	r3, [r7, #12]
 80014f6:	bf00      	nop
 80014f8:	f7ff ffe0 	bl	80014bc <HAL_GetTick>
 80014fc:	4602      	mov	r2, r0
 80014fe:	68bb      	ldr	r3, [r7, #8]
 8001500:	1ad3      	subs	r3, r2, r3
 8001502:	68fa      	ldr	r2, [r7, #12]
 8001504:	429a      	cmp	r2, r3
 8001506:	d8f7      	bhi.n	80014f8 <HAL_Delay+0x28>
 8001508:	bf00      	nop
 800150a:	bf00      	nop
 800150c:	3710      	adds	r7, #16
 800150e:	46bd      	mov	sp, r7
 8001510:	bd80      	pop	{r7, pc}
 8001512:	bf00      	nop
 8001514:	20000028 	.word	0x20000028

08001518 <__NVIC_SetPriorityGrouping>:
 8001518:	b480      	push	{r7}
 800151a:	b085      	sub	sp, #20
 800151c:	af00      	add	r7, sp, #0
 800151e:	6078      	str	r0, [r7, #4]
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	f003 0307 	and.w	r3, r3, #7
 8001526:	60fb      	str	r3, [r7, #12]
 8001528:	4b0c      	ldr	r3, [pc, #48]	; (800155c <__NVIC_SetPriorityGrouping+0x44>)
 800152a:	68db      	ldr	r3, [r3, #12]
 800152c:	60bb      	str	r3, [r7, #8]
 800152e:	68ba      	ldr	r2, [r7, #8]
 8001530:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001534:	4013      	ands	r3, r2
 8001536:	60bb      	str	r3, [r7, #8]
 8001538:	68fb      	ldr	r3, [r7, #12]
 800153a:	021a      	lsls	r2, r3, #8
 800153c:	68bb      	ldr	r3, [r7, #8]
 800153e:	4313      	orrs	r3, r2
 8001540:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001544:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001548:	60bb      	str	r3, [r7, #8]
 800154a:	4a04      	ldr	r2, [pc, #16]	; (800155c <__NVIC_SetPriorityGrouping+0x44>)
 800154c:	68bb      	ldr	r3, [r7, #8]
 800154e:	60d3      	str	r3, [r2, #12]
 8001550:	bf00      	nop
 8001552:	3714      	adds	r7, #20
 8001554:	46bd      	mov	sp, r7
 8001556:	bc80      	pop	{r7}
 8001558:	4770      	bx	lr
 800155a:	bf00      	nop
 800155c:	e000ed00 	.word	0xe000ed00

08001560 <__NVIC_GetPriorityGrouping>:
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0
 8001564:	4b04      	ldr	r3, [pc, #16]	; (8001578 <__NVIC_GetPriorityGrouping+0x18>)
 8001566:	68db      	ldr	r3, [r3, #12]
 8001568:	0a1b      	lsrs	r3, r3, #8
 800156a:	f003 0307 	and.w	r3, r3, #7
 800156e:	4618      	mov	r0, r3
 8001570:	46bd      	mov	sp, r7
 8001572:	bc80      	pop	{r7}
 8001574:	4770      	bx	lr
 8001576:	bf00      	nop
 8001578:	e000ed00 	.word	0xe000ed00

0800157c <__NVIC_EnableIRQ>:
 800157c:	b480      	push	{r7}
 800157e:	b083      	sub	sp, #12
 8001580:	af00      	add	r7, sp, #0
 8001582:	4603      	mov	r3, r0
 8001584:	71fb      	strb	r3, [r7, #7]
 8001586:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800158a:	2b00      	cmp	r3, #0
 800158c:	db0b      	blt.n	80015a6 <__NVIC_EnableIRQ+0x2a>
 800158e:	79fb      	ldrb	r3, [r7, #7]
 8001590:	f003 021f 	and.w	r2, r3, #31
 8001594:	4906      	ldr	r1, [pc, #24]	; (80015b0 <__NVIC_EnableIRQ+0x34>)
 8001596:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800159a:	095b      	lsrs	r3, r3, #5
 800159c:	2001      	movs	r0, #1
 800159e:	fa00 f202 	lsl.w	r2, r0, r2
 80015a2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015a6:	bf00      	nop
 80015a8:	370c      	adds	r7, #12
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bc80      	pop	{r7}
 80015ae:	4770      	bx	lr
 80015b0:	e000e100 	.word	0xe000e100

080015b4 <__NVIC_SetPriority>:
 80015b4:	b480      	push	{r7}
 80015b6:	b083      	sub	sp, #12
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	4603      	mov	r3, r0
 80015bc:	6039      	str	r1, [r7, #0]
 80015be:	71fb      	strb	r3, [r7, #7]
 80015c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	db0a      	blt.n	80015de <__NVIC_SetPriority+0x2a>
 80015c8:	683b      	ldr	r3, [r7, #0]
 80015ca:	b2da      	uxtb	r2, r3
 80015cc:	490c      	ldr	r1, [pc, #48]	; (8001600 <__NVIC_SetPriority+0x4c>)
 80015ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015d2:	0112      	lsls	r2, r2, #4
 80015d4:	b2d2      	uxtb	r2, r2
 80015d6:	440b      	add	r3, r1
 80015d8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80015dc:	e00a      	b.n	80015f4 <__NVIC_SetPriority+0x40>
 80015de:	683b      	ldr	r3, [r7, #0]
 80015e0:	b2da      	uxtb	r2, r3
 80015e2:	4908      	ldr	r1, [pc, #32]	; (8001604 <__NVIC_SetPriority+0x50>)
 80015e4:	79fb      	ldrb	r3, [r7, #7]
 80015e6:	f003 030f 	and.w	r3, r3, #15
 80015ea:	3b04      	subs	r3, #4
 80015ec:	0112      	lsls	r2, r2, #4
 80015ee:	b2d2      	uxtb	r2, r2
 80015f0:	440b      	add	r3, r1
 80015f2:	761a      	strb	r2, [r3, #24]
 80015f4:	bf00      	nop
 80015f6:	370c      	adds	r7, #12
 80015f8:	46bd      	mov	sp, r7
 80015fa:	bc80      	pop	{r7}
 80015fc:	4770      	bx	lr
 80015fe:	bf00      	nop
 8001600:	e000e100 	.word	0xe000e100
 8001604:	e000ed00 	.word	0xe000ed00

08001608 <NVIC_EncodePriority>:
 8001608:	b480      	push	{r7}
 800160a:	b089      	sub	sp, #36	; 0x24
 800160c:	af00      	add	r7, sp, #0
 800160e:	60f8      	str	r0, [r7, #12]
 8001610:	60b9      	str	r1, [r7, #8]
 8001612:	607a      	str	r2, [r7, #4]
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	f003 0307 	and.w	r3, r3, #7
 800161a:	61fb      	str	r3, [r7, #28]
 800161c:	69fb      	ldr	r3, [r7, #28]
 800161e:	f1c3 0307 	rsb	r3, r3, #7
 8001622:	2b04      	cmp	r3, #4
 8001624:	bf28      	it	cs
 8001626:	2304      	movcs	r3, #4
 8001628:	61bb      	str	r3, [r7, #24]
 800162a:	69fb      	ldr	r3, [r7, #28]
 800162c:	3304      	adds	r3, #4
 800162e:	2b06      	cmp	r3, #6
 8001630:	d902      	bls.n	8001638 <NVIC_EncodePriority+0x30>
 8001632:	69fb      	ldr	r3, [r7, #28]
 8001634:	3b03      	subs	r3, #3
 8001636:	e000      	b.n	800163a <NVIC_EncodePriority+0x32>
 8001638:	2300      	movs	r3, #0
 800163a:	617b      	str	r3, [r7, #20]
 800163c:	f04f 32ff 	mov.w	r2, #4294967295
 8001640:	69bb      	ldr	r3, [r7, #24]
 8001642:	fa02 f303 	lsl.w	r3, r2, r3
 8001646:	43da      	mvns	r2, r3
 8001648:	68bb      	ldr	r3, [r7, #8]
 800164a:	401a      	ands	r2, r3
 800164c:	697b      	ldr	r3, [r7, #20]
 800164e:	409a      	lsls	r2, r3
 8001650:	f04f 31ff 	mov.w	r1, #4294967295
 8001654:	697b      	ldr	r3, [r7, #20]
 8001656:	fa01 f303 	lsl.w	r3, r1, r3
 800165a:	43d9      	mvns	r1, r3
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	400b      	ands	r3, r1
 8001660:	4313      	orrs	r3, r2
 8001662:	4618      	mov	r0, r3
 8001664:	3724      	adds	r7, #36	; 0x24
 8001666:	46bd      	mov	sp, r7
 8001668:	bc80      	pop	{r7}
 800166a:	4770      	bx	lr

0800166c <SysTick_Config>:
 800166c:	b580      	push	{r7, lr}
 800166e:	b082      	sub	sp, #8
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	3b01      	subs	r3, #1
 8001678:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800167c:	d301      	bcc.n	8001682 <SysTick_Config+0x16>
 800167e:	2301      	movs	r3, #1
 8001680:	e00f      	b.n	80016a2 <SysTick_Config+0x36>
 8001682:	4a0a      	ldr	r2, [pc, #40]	; (80016ac <SysTick_Config+0x40>)
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	3b01      	subs	r3, #1
 8001688:	6053      	str	r3, [r2, #4]
 800168a:	210f      	movs	r1, #15
 800168c:	f04f 30ff 	mov.w	r0, #4294967295
 8001690:	f7ff ff90 	bl	80015b4 <__NVIC_SetPriority>
 8001694:	4b05      	ldr	r3, [pc, #20]	; (80016ac <SysTick_Config+0x40>)
 8001696:	2200      	movs	r2, #0
 8001698:	609a      	str	r2, [r3, #8]
 800169a:	4b04      	ldr	r3, [pc, #16]	; (80016ac <SysTick_Config+0x40>)
 800169c:	2207      	movs	r2, #7
 800169e:	601a      	str	r2, [r3, #0]
 80016a0:	2300      	movs	r3, #0
 80016a2:	4618      	mov	r0, r3
 80016a4:	3708      	adds	r7, #8
 80016a6:	46bd      	mov	sp, r7
 80016a8:	bd80      	pop	{r7, pc}
 80016aa:	bf00      	nop
 80016ac:	e000e010 	.word	0xe000e010

080016b0 <HAL_NVIC_SetPriorityGrouping>:
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b082      	sub	sp, #8
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	6878      	ldr	r0, [r7, #4]
 80016ba:	f7ff ff2d 	bl	8001518 <__NVIC_SetPriorityGrouping>
 80016be:	bf00      	nop
 80016c0:	3708      	adds	r7, #8
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bd80      	pop	{r7, pc}

080016c6 <HAL_NVIC_SetPriority>:
 80016c6:	b580      	push	{r7, lr}
 80016c8:	b086      	sub	sp, #24
 80016ca:	af00      	add	r7, sp, #0
 80016cc:	4603      	mov	r3, r0
 80016ce:	60b9      	str	r1, [r7, #8]
 80016d0:	607a      	str	r2, [r7, #4]
 80016d2:	73fb      	strb	r3, [r7, #15]
 80016d4:	2300      	movs	r3, #0
 80016d6:	617b      	str	r3, [r7, #20]
 80016d8:	f7ff ff42 	bl	8001560 <__NVIC_GetPriorityGrouping>
 80016dc:	6178      	str	r0, [r7, #20]
 80016de:	687a      	ldr	r2, [r7, #4]
 80016e0:	68b9      	ldr	r1, [r7, #8]
 80016e2:	6978      	ldr	r0, [r7, #20]
 80016e4:	f7ff ff90 	bl	8001608 <NVIC_EncodePriority>
 80016e8:	4602      	mov	r2, r0
 80016ea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016ee:	4611      	mov	r1, r2
 80016f0:	4618      	mov	r0, r3
 80016f2:	f7ff ff5f 	bl	80015b4 <__NVIC_SetPriority>
 80016f6:	bf00      	nop
 80016f8:	3718      	adds	r7, #24
 80016fa:	46bd      	mov	sp, r7
 80016fc:	bd80      	pop	{r7, pc}

080016fe <HAL_NVIC_EnableIRQ>:
 80016fe:	b580      	push	{r7, lr}
 8001700:	b082      	sub	sp, #8
 8001702:	af00      	add	r7, sp, #0
 8001704:	4603      	mov	r3, r0
 8001706:	71fb      	strb	r3, [r7, #7]
 8001708:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800170c:	4618      	mov	r0, r3
 800170e:	f7ff ff35 	bl	800157c <__NVIC_EnableIRQ>
 8001712:	bf00      	nop
 8001714:	3708      	adds	r7, #8
 8001716:	46bd      	mov	sp, r7
 8001718:	bd80      	pop	{r7, pc}

0800171a <HAL_SYSTICK_Config>:
 800171a:	b580      	push	{r7, lr}
 800171c:	b082      	sub	sp, #8
 800171e:	af00      	add	r7, sp, #0
 8001720:	6078      	str	r0, [r7, #4]
 8001722:	6878      	ldr	r0, [r7, #4]
 8001724:	f7ff ffa2 	bl	800166c <SysTick_Config>
 8001728:	4603      	mov	r3, r0
 800172a:	4618      	mov	r0, r3
 800172c:	3708      	adds	r7, #8
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}

08001732 <HAL_DMA_Abort>:
 8001732:	b480      	push	{r7}
 8001734:	b085      	sub	sp, #20
 8001736:	af00      	add	r7, sp, #0
 8001738:	6078      	str	r0, [r7, #4]
 800173a:	2300      	movs	r3, #0
 800173c:	73fb      	strb	r3, [r7, #15]
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001744:	b2db      	uxtb	r3, r3
 8001746:	2b02      	cmp	r3, #2
 8001748:	d008      	beq.n	800175c <HAL_DMA_Abort+0x2a>
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	2204      	movs	r2, #4
 800174e:	639a      	str	r2, [r3, #56]	; 0x38
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	2200      	movs	r2, #0
 8001754:	f883 2020 	strb.w	r2, [r3, #32]
 8001758:	2301      	movs	r3, #1
 800175a:	e020      	b.n	800179e <HAL_DMA_Abort+0x6c>
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	681a      	ldr	r2, [r3, #0]
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	f022 020e 	bic.w	r2, r2, #14
 800176a:	601a      	str	r2, [r3, #0]
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	681a      	ldr	r2, [r3, #0]
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	f022 0201 	bic.w	r2, r2, #1
 800177a:	601a      	str	r2, [r3, #0]
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001784:	2101      	movs	r1, #1
 8001786:	fa01 f202 	lsl.w	r2, r1, r2
 800178a:	605a      	str	r2, [r3, #4]
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	2201      	movs	r2, #1
 8001790:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	2200      	movs	r2, #0
 8001798:	f883 2020 	strb.w	r2, [r3, #32]
 800179c:	7bfb      	ldrb	r3, [r7, #15]
 800179e:	4618      	mov	r0, r3
 80017a0:	3714      	adds	r7, #20
 80017a2:	46bd      	mov	sp, r7
 80017a4:	bc80      	pop	{r7}
 80017a6:	4770      	bx	lr

080017a8 <HAL_DMA_Abort_IT>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b084      	sub	sp, #16
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	6078      	str	r0, [r7, #4]
 80017b0:	2300      	movs	r3, #0
 80017b2:	73fb      	strb	r3, [r7, #15]
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80017ba:	b2db      	uxtb	r3, r3
 80017bc:	2b02      	cmp	r3, #2
 80017be:	d005      	beq.n	80017cc <HAL_DMA_Abort_IT+0x24>
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	2204      	movs	r2, #4
 80017c4:	639a      	str	r2, [r3, #56]	; 0x38
 80017c6:	2301      	movs	r3, #1
 80017c8:	73fb      	strb	r3, [r7, #15]
 80017ca:	e051      	b.n	8001870 <HAL_DMA_Abort_IT+0xc8>
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	681a      	ldr	r2, [r3, #0]
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	f022 020e 	bic.w	r2, r2, #14
 80017da:	601a      	str	r2, [r3, #0]
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	681a      	ldr	r2, [r3, #0]
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	f022 0201 	bic.w	r2, r2, #1
 80017ea:	601a      	str	r2, [r3, #0]
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	4a22      	ldr	r2, [pc, #136]	; (800187c <HAL_DMA_Abort_IT+0xd4>)
 80017f2:	4293      	cmp	r3, r2
 80017f4:	d029      	beq.n	800184a <HAL_DMA_Abort_IT+0xa2>
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	4a21      	ldr	r2, [pc, #132]	; (8001880 <HAL_DMA_Abort_IT+0xd8>)
 80017fc:	4293      	cmp	r3, r2
 80017fe:	d022      	beq.n	8001846 <HAL_DMA_Abort_IT+0x9e>
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a1f      	ldr	r2, [pc, #124]	; (8001884 <HAL_DMA_Abort_IT+0xdc>)
 8001806:	4293      	cmp	r3, r2
 8001808:	d01a      	beq.n	8001840 <HAL_DMA_Abort_IT+0x98>
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4a1e      	ldr	r2, [pc, #120]	; (8001888 <HAL_DMA_Abort_IT+0xe0>)
 8001810:	4293      	cmp	r3, r2
 8001812:	d012      	beq.n	800183a <HAL_DMA_Abort_IT+0x92>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	4a1c      	ldr	r2, [pc, #112]	; (800188c <HAL_DMA_Abort_IT+0xe4>)
 800181a:	4293      	cmp	r3, r2
 800181c:	d00a      	beq.n	8001834 <HAL_DMA_Abort_IT+0x8c>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4a1b      	ldr	r2, [pc, #108]	; (8001890 <HAL_DMA_Abort_IT+0xe8>)
 8001824:	4293      	cmp	r3, r2
 8001826:	d102      	bne.n	800182e <HAL_DMA_Abort_IT+0x86>
 8001828:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800182c:	e00e      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 800182e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001832:	e00b      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 8001834:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001838:	e008      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 800183a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800183e:	e005      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 8001840:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001844:	e002      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 8001846:	2310      	movs	r3, #16
 8001848:	e000      	b.n	800184c <HAL_DMA_Abort_IT+0xa4>
 800184a:	2301      	movs	r3, #1
 800184c:	4a11      	ldr	r2, [pc, #68]	; (8001894 <HAL_DMA_Abort_IT+0xec>)
 800184e:	6053      	str	r3, [r2, #4]
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	2201      	movs	r2, #1
 8001854:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	2200      	movs	r2, #0
 800185c:	f883 2020 	strb.w	r2, [r3, #32]
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001864:	2b00      	cmp	r3, #0
 8001866:	d003      	beq.n	8001870 <HAL_DMA_Abort_IT+0xc8>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800186c:	6878      	ldr	r0, [r7, #4]
 800186e:	4798      	blx	r3
 8001870:	7bfb      	ldrb	r3, [r7, #15]
 8001872:	4618      	mov	r0, r3
 8001874:	3710      	adds	r7, #16
 8001876:	46bd      	mov	sp, r7
 8001878:	bd80      	pop	{r7, pc}
 800187a:	bf00      	nop
 800187c:	40020008 	.word	0x40020008
 8001880:	4002001c 	.word	0x4002001c
 8001884:	40020030 	.word	0x40020030
 8001888:	40020044 	.word	0x40020044
 800188c:	40020058 	.word	0x40020058
 8001890:	4002006c 	.word	0x4002006c
 8001894:	40020000 	.word	0x40020000

08001898 <HAL_GPIO_Init>:
 8001898:	b480      	push	{r7}
 800189a:	b08b      	sub	sp, #44	; 0x2c
 800189c:	af00      	add	r7, sp, #0
 800189e:	6078      	str	r0, [r7, #4]
 80018a0:	6039      	str	r1, [r7, #0]
 80018a2:	2300      	movs	r3, #0
 80018a4:	627b      	str	r3, [r7, #36]	; 0x24
 80018a6:	2300      	movs	r3, #0
 80018a8:	623b      	str	r3, [r7, #32]
 80018aa:	e169      	b.n	8001b80 <HAL_GPIO_Init+0x2e8>
 80018ac:	2201      	movs	r2, #1
 80018ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018b0:	fa02 f303 	lsl.w	r3, r2, r3
 80018b4:	61fb      	str	r3, [r7, #28]
 80018b6:	683b      	ldr	r3, [r7, #0]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	69fa      	ldr	r2, [r7, #28]
 80018bc:	4013      	ands	r3, r2
 80018be:	61bb      	str	r3, [r7, #24]
 80018c0:	69ba      	ldr	r2, [r7, #24]
 80018c2:	69fb      	ldr	r3, [r7, #28]
 80018c4:	429a      	cmp	r2, r3
 80018c6:	f040 8158 	bne.w	8001b7a <HAL_GPIO_Init+0x2e2>
 80018ca:	683b      	ldr	r3, [r7, #0]
 80018cc:	685b      	ldr	r3, [r3, #4]
 80018ce:	4a9a      	ldr	r2, [pc, #616]	; (8001b38 <HAL_GPIO_Init+0x2a0>)
 80018d0:	4293      	cmp	r3, r2
 80018d2:	d05e      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 80018d4:	4a98      	ldr	r2, [pc, #608]	; (8001b38 <HAL_GPIO_Init+0x2a0>)
 80018d6:	4293      	cmp	r3, r2
 80018d8:	d875      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 80018da:	4a98      	ldr	r2, [pc, #608]	; (8001b3c <HAL_GPIO_Init+0x2a4>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d058      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 80018e0:	4a96      	ldr	r2, [pc, #600]	; (8001b3c <HAL_GPIO_Init+0x2a4>)
 80018e2:	4293      	cmp	r3, r2
 80018e4:	d86f      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 80018e6:	4a96      	ldr	r2, [pc, #600]	; (8001b40 <HAL_GPIO_Init+0x2a8>)
 80018e8:	4293      	cmp	r3, r2
 80018ea:	d052      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 80018ec:	4a94      	ldr	r2, [pc, #592]	; (8001b40 <HAL_GPIO_Init+0x2a8>)
 80018ee:	4293      	cmp	r3, r2
 80018f0:	d869      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 80018f2:	4a94      	ldr	r2, [pc, #592]	; (8001b44 <HAL_GPIO_Init+0x2ac>)
 80018f4:	4293      	cmp	r3, r2
 80018f6:	d04c      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 80018f8:	4a92      	ldr	r2, [pc, #584]	; (8001b44 <HAL_GPIO_Init+0x2ac>)
 80018fa:	4293      	cmp	r3, r2
 80018fc:	d863      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 80018fe:	4a92      	ldr	r2, [pc, #584]	; (8001b48 <HAL_GPIO_Init+0x2b0>)
 8001900:	4293      	cmp	r3, r2
 8001902:	d046      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 8001904:	4a90      	ldr	r2, [pc, #576]	; (8001b48 <HAL_GPIO_Init+0x2b0>)
 8001906:	4293      	cmp	r3, r2
 8001908:	d85d      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 800190a:	2b12      	cmp	r3, #18
 800190c:	d82a      	bhi.n	8001964 <HAL_GPIO_Init+0xcc>
 800190e:	2b12      	cmp	r3, #18
 8001910:	d859      	bhi.n	80019c6 <HAL_GPIO_Init+0x12e>
 8001912:	a201      	add	r2, pc, #4	; (adr r2, 8001918 <HAL_GPIO_Init+0x80>)
 8001914:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001918:	08001993 	.word	0x08001993
 800191c:	0800196d 	.word	0x0800196d
 8001920:	0800197f 	.word	0x0800197f
 8001924:	080019c1 	.word	0x080019c1
 8001928:	080019c7 	.word	0x080019c7
 800192c:	080019c7 	.word	0x080019c7
 8001930:	080019c7 	.word	0x080019c7
 8001934:	080019c7 	.word	0x080019c7
 8001938:	080019c7 	.word	0x080019c7
 800193c:	080019c7 	.word	0x080019c7
 8001940:	080019c7 	.word	0x080019c7
 8001944:	080019c7 	.word	0x080019c7
 8001948:	080019c7 	.word	0x080019c7
 800194c:	080019c7 	.word	0x080019c7
 8001950:	080019c7 	.word	0x080019c7
 8001954:	080019c7 	.word	0x080019c7
 8001958:	080019c7 	.word	0x080019c7
 800195c:	08001975 	.word	0x08001975
 8001960:	08001989 	.word	0x08001989
 8001964:	4a79      	ldr	r2, [pc, #484]	; (8001b4c <HAL_GPIO_Init+0x2b4>)
 8001966:	4293      	cmp	r3, r2
 8001968:	d013      	beq.n	8001992 <HAL_GPIO_Init+0xfa>
 800196a:	e02c      	b.n	80019c6 <HAL_GPIO_Init+0x12e>
 800196c:	683b      	ldr	r3, [r7, #0]
 800196e:	68db      	ldr	r3, [r3, #12]
 8001970:	623b      	str	r3, [r7, #32]
 8001972:	e029      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 8001974:	683b      	ldr	r3, [r7, #0]
 8001976:	68db      	ldr	r3, [r3, #12]
 8001978:	3304      	adds	r3, #4
 800197a:	623b      	str	r3, [r7, #32]
 800197c:	e024      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 800197e:	683b      	ldr	r3, [r7, #0]
 8001980:	68db      	ldr	r3, [r3, #12]
 8001982:	3308      	adds	r3, #8
 8001984:	623b      	str	r3, [r7, #32]
 8001986:	e01f      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 8001988:	683b      	ldr	r3, [r7, #0]
 800198a:	68db      	ldr	r3, [r3, #12]
 800198c:	330c      	adds	r3, #12
 800198e:	623b      	str	r3, [r7, #32]
 8001990:	e01a      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 8001992:	683b      	ldr	r3, [r7, #0]
 8001994:	689b      	ldr	r3, [r3, #8]
 8001996:	2b00      	cmp	r3, #0
 8001998:	d102      	bne.n	80019a0 <HAL_GPIO_Init+0x108>
 800199a:	2304      	movs	r3, #4
 800199c:	623b      	str	r3, [r7, #32]
 800199e:	e013      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 80019a0:	683b      	ldr	r3, [r7, #0]
 80019a2:	689b      	ldr	r3, [r3, #8]
 80019a4:	2b01      	cmp	r3, #1
 80019a6:	d105      	bne.n	80019b4 <HAL_GPIO_Init+0x11c>
 80019a8:	2308      	movs	r3, #8
 80019aa:	623b      	str	r3, [r7, #32]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	69fa      	ldr	r2, [r7, #28]
 80019b0:	611a      	str	r2, [r3, #16]
 80019b2:	e009      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 80019b4:	2308      	movs	r3, #8
 80019b6:	623b      	str	r3, [r7, #32]
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	69fa      	ldr	r2, [r7, #28]
 80019bc:	615a      	str	r2, [r3, #20]
 80019be:	e003      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 80019c0:	2300      	movs	r3, #0
 80019c2:	623b      	str	r3, [r7, #32]
 80019c4:	e000      	b.n	80019c8 <HAL_GPIO_Init+0x130>
 80019c6:	bf00      	nop
 80019c8:	69bb      	ldr	r3, [r7, #24]
 80019ca:	2bff      	cmp	r3, #255	; 0xff
 80019cc:	d801      	bhi.n	80019d2 <HAL_GPIO_Init+0x13a>
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	e001      	b.n	80019d6 <HAL_GPIO_Init+0x13e>
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	3304      	adds	r3, #4
 80019d6:	617b      	str	r3, [r7, #20]
 80019d8:	69bb      	ldr	r3, [r7, #24]
 80019da:	2bff      	cmp	r3, #255	; 0xff
 80019dc:	d802      	bhi.n	80019e4 <HAL_GPIO_Init+0x14c>
 80019de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019e0:	009b      	lsls	r3, r3, #2
 80019e2:	e002      	b.n	80019ea <HAL_GPIO_Init+0x152>
 80019e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019e6:	3b08      	subs	r3, #8
 80019e8:	009b      	lsls	r3, r3, #2
 80019ea:	613b      	str	r3, [r7, #16]
 80019ec:	697b      	ldr	r3, [r7, #20]
 80019ee:	681a      	ldr	r2, [r3, #0]
 80019f0:	210f      	movs	r1, #15
 80019f2:	693b      	ldr	r3, [r7, #16]
 80019f4:	fa01 f303 	lsl.w	r3, r1, r3
 80019f8:	43db      	mvns	r3, r3
 80019fa:	401a      	ands	r2, r3
 80019fc:	6a39      	ldr	r1, [r7, #32]
 80019fe:	693b      	ldr	r3, [r7, #16]
 8001a00:	fa01 f303 	lsl.w	r3, r1, r3
 8001a04:	431a      	orrs	r2, r3
 8001a06:	697b      	ldr	r3, [r7, #20]
 8001a08:	601a      	str	r2, [r3, #0]
 8001a0a:	683b      	ldr	r3, [r7, #0]
 8001a0c:	685b      	ldr	r3, [r3, #4]
 8001a0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	f000 80b1 	beq.w	8001b7a <HAL_GPIO_Init+0x2e2>
 8001a18:	4b4d      	ldr	r3, [pc, #308]	; (8001b50 <HAL_GPIO_Init+0x2b8>)
 8001a1a:	699b      	ldr	r3, [r3, #24]
 8001a1c:	4a4c      	ldr	r2, [pc, #304]	; (8001b50 <HAL_GPIO_Init+0x2b8>)
 8001a1e:	f043 0301 	orr.w	r3, r3, #1
 8001a22:	6193      	str	r3, [r2, #24]
 8001a24:	4b4a      	ldr	r3, [pc, #296]	; (8001b50 <HAL_GPIO_Init+0x2b8>)
 8001a26:	699b      	ldr	r3, [r3, #24]
 8001a28:	f003 0301 	and.w	r3, r3, #1
 8001a2c:	60bb      	str	r3, [r7, #8]
 8001a2e:	68bb      	ldr	r3, [r7, #8]
 8001a30:	4a48      	ldr	r2, [pc, #288]	; (8001b54 <HAL_GPIO_Init+0x2bc>)
 8001a32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a34:	089b      	lsrs	r3, r3, #2
 8001a36:	3302      	adds	r3, #2
 8001a38:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a3c:	60fb      	str	r3, [r7, #12]
 8001a3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a40:	f003 0303 	and.w	r3, r3, #3
 8001a44:	009b      	lsls	r3, r3, #2
 8001a46:	220f      	movs	r2, #15
 8001a48:	fa02 f303 	lsl.w	r3, r2, r3
 8001a4c:	43db      	mvns	r3, r3
 8001a4e:	68fa      	ldr	r2, [r7, #12]
 8001a50:	4013      	ands	r3, r2
 8001a52:	60fb      	str	r3, [r7, #12]
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	4a40      	ldr	r2, [pc, #256]	; (8001b58 <HAL_GPIO_Init+0x2c0>)
 8001a58:	4293      	cmp	r3, r2
 8001a5a:	d013      	beq.n	8001a84 <HAL_GPIO_Init+0x1ec>
 8001a5c:	687b      	ldr	r3, [r7, #4]
 8001a5e:	4a3f      	ldr	r2, [pc, #252]	; (8001b5c <HAL_GPIO_Init+0x2c4>)
 8001a60:	4293      	cmp	r3, r2
 8001a62:	d00d      	beq.n	8001a80 <HAL_GPIO_Init+0x1e8>
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	4a3e      	ldr	r2, [pc, #248]	; (8001b60 <HAL_GPIO_Init+0x2c8>)
 8001a68:	4293      	cmp	r3, r2
 8001a6a:	d007      	beq.n	8001a7c <HAL_GPIO_Init+0x1e4>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	4a3d      	ldr	r2, [pc, #244]	; (8001b64 <HAL_GPIO_Init+0x2cc>)
 8001a70:	4293      	cmp	r3, r2
 8001a72:	d101      	bne.n	8001a78 <HAL_GPIO_Init+0x1e0>
 8001a74:	2303      	movs	r3, #3
 8001a76:	e006      	b.n	8001a86 <HAL_GPIO_Init+0x1ee>
 8001a78:	2304      	movs	r3, #4
 8001a7a:	e004      	b.n	8001a86 <HAL_GPIO_Init+0x1ee>
 8001a7c:	2302      	movs	r3, #2
 8001a7e:	e002      	b.n	8001a86 <HAL_GPIO_Init+0x1ee>
 8001a80:	2301      	movs	r3, #1
 8001a82:	e000      	b.n	8001a86 <HAL_GPIO_Init+0x1ee>
 8001a84:	2300      	movs	r3, #0
 8001a86:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a88:	f002 0203 	and.w	r2, r2, #3
 8001a8c:	0092      	lsls	r2, r2, #2
 8001a8e:	4093      	lsls	r3, r2
 8001a90:	68fa      	ldr	r2, [r7, #12]
 8001a92:	4313      	orrs	r3, r2
 8001a94:	60fb      	str	r3, [r7, #12]
 8001a96:	492f      	ldr	r1, [pc, #188]	; (8001b54 <HAL_GPIO_Init+0x2bc>)
 8001a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a9a:	089b      	lsrs	r3, r3, #2
 8001a9c:	3302      	adds	r3, #2
 8001a9e:	68fa      	ldr	r2, [r7, #12]
 8001aa0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001aa4:	683b      	ldr	r3, [r7, #0]
 8001aa6:	685b      	ldr	r3, [r3, #4]
 8001aa8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d006      	beq.n	8001abe <HAL_GPIO_Init+0x226>
 8001ab0:	4b2d      	ldr	r3, [pc, #180]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ab2:	689a      	ldr	r2, [r3, #8]
 8001ab4:	492c      	ldr	r1, [pc, #176]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ab6:	69bb      	ldr	r3, [r7, #24]
 8001ab8:	4313      	orrs	r3, r2
 8001aba:	608b      	str	r3, [r1, #8]
 8001abc:	e006      	b.n	8001acc <HAL_GPIO_Init+0x234>
 8001abe:	4b2a      	ldr	r3, [pc, #168]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ac0:	689a      	ldr	r2, [r3, #8]
 8001ac2:	69bb      	ldr	r3, [r7, #24]
 8001ac4:	43db      	mvns	r3, r3
 8001ac6:	4928      	ldr	r1, [pc, #160]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ac8:	4013      	ands	r3, r2
 8001aca:	608b      	str	r3, [r1, #8]
 8001acc:	683b      	ldr	r3, [r7, #0]
 8001ace:	685b      	ldr	r3, [r3, #4]
 8001ad0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d006      	beq.n	8001ae6 <HAL_GPIO_Init+0x24e>
 8001ad8:	4b23      	ldr	r3, [pc, #140]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ada:	68da      	ldr	r2, [r3, #12]
 8001adc:	4922      	ldr	r1, [pc, #136]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ade:	69bb      	ldr	r3, [r7, #24]
 8001ae0:	4313      	orrs	r3, r2
 8001ae2:	60cb      	str	r3, [r1, #12]
 8001ae4:	e006      	b.n	8001af4 <HAL_GPIO_Init+0x25c>
 8001ae6:	4b20      	ldr	r3, [pc, #128]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001ae8:	68da      	ldr	r2, [r3, #12]
 8001aea:	69bb      	ldr	r3, [r7, #24]
 8001aec:	43db      	mvns	r3, r3
 8001aee:	491e      	ldr	r1, [pc, #120]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001af0:	4013      	ands	r3, r2
 8001af2:	60cb      	str	r3, [r1, #12]
 8001af4:	683b      	ldr	r3, [r7, #0]
 8001af6:	685b      	ldr	r3, [r3, #4]
 8001af8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	d006      	beq.n	8001b0e <HAL_GPIO_Init+0x276>
 8001b00:	4b19      	ldr	r3, [pc, #100]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b02:	685a      	ldr	r2, [r3, #4]
 8001b04:	4918      	ldr	r1, [pc, #96]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b06:	69bb      	ldr	r3, [r7, #24]
 8001b08:	4313      	orrs	r3, r2
 8001b0a:	604b      	str	r3, [r1, #4]
 8001b0c:	e006      	b.n	8001b1c <HAL_GPIO_Init+0x284>
 8001b0e:	4b16      	ldr	r3, [pc, #88]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b10:	685a      	ldr	r2, [r3, #4]
 8001b12:	69bb      	ldr	r3, [r7, #24]
 8001b14:	43db      	mvns	r3, r3
 8001b16:	4914      	ldr	r1, [pc, #80]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b18:	4013      	ands	r3, r2
 8001b1a:	604b      	str	r3, [r1, #4]
 8001b1c:	683b      	ldr	r3, [r7, #0]
 8001b1e:	685b      	ldr	r3, [r3, #4]
 8001b20:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	d021      	beq.n	8001b6c <HAL_GPIO_Init+0x2d4>
 8001b28:	4b0f      	ldr	r3, [pc, #60]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b2a:	681a      	ldr	r2, [r3, #0]
 8001b2c:	490e      	ldr	r1, [pc, #56]	; (8001b68 <HAL_GPIO_Init+0x2d0>)
 8001b2e:	69bb      	ldr	r3, [r7, #24]
 8001b30:	4313      	orrs	r3, r2
 8001b32:	600b      	str	r3, [r1, #0]
 8001b34:	e021      	b.n	8001b7a <HAL_GPIO_Init+0x2e2>
 8001b36:	bf00      	nop
 8001b38:	10320000 	.word	0x10320000
 8001b3c:	10310000 	.word	0x10310000
 8001b40:	10220000 	.word	0x10220000
 8001b44:	10210000 	.word	0x10210000
 8001b48:	10120000 	.word	0x10120000
 8001b4c:	10110000 	.word	0x10110000
 8001b50:	40021000 	.word	0x40021000
 8001b54:	40010000 	.word	0x40010000
 8001b58:	40010800 	.word	0x40010800
 8001b5c:	40010c00 	.word	0x40010c00
 8001b60:	40011000 	.word	0x40011000
 8001b64:	40011400 	.word	0x40011400
 8001b68:	40010400 	.word	0x40010400
 8001b6c:	4b0b      	ldr	r3, [pc, #44]	; (8001b9c <HAL_GPIO_Init+0x304>)
 8001b6e:	681a      	ldr	r2, [r3, #0]
 8001b70:	69bb      	ldr	r3, [r7, #24]
 8001b72:	43db      	mvns	r3, r3
 8001b74:	4909      	ldr	r1, [pc, #36]	; (8001b9c <HAL_GPIO_Init+0x304>)
 8001b76:	4013      	ands	r3, r2
 8001b78:	600b      	str	r3, [r1, #0]
 8001b7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b7c:	3301      	adds	r3, #1
 8001b7e:	627b      	str	r3, [r7, #36]	; 0x24
 8001b80:	683b      	ldr	r3, [r7, #0]
 8001b82:	681a      	ldr	r2, [r3, #0]
 8001b84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b86:	fa22 f303 	lsr.w	r3, r2, r3
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	f47f ae8e 	bne.w	80018ac <HAL_GPIO_Init+0x14>
 8001b90:	bf00      	nop
 8001b92:	bf00      	nop
 8001b94:	372c      	adds	r7, #44	; 0x2c
 8001b96:	46bd      	mov	sp, r7
 8001b98:	bc80      	pop	{r7}
 8001b9a:	4770      	bx	lr
 8001b9c:	40010400 	.word	0x40010400

08001ba0 <HAL_GPIO_ReadPin>:
 8001ba0:	b480      	push	{r7}
 8001ba2:	b085      	sub	sp, #20
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]
 8001ba8:	460b      	mov	r3, r1
 8001baa:	807b      	strh	r3, [r7, #2]
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	689a      	ldr	r2, [r3, #8]
 8001bb0:	887b      	ldrh	r3, [r7, #2]
 8001bb2:	4013      	ands	r3, r2
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d002      	beq.n	8001bbe <HAL_GPIO_ReadPin+0x1e>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	73fb      	strb	r3, [r7, #15]
 8001bbc:	e001      	b.n	8001bc2 <HAL_GPIO_ReadPin+0x22>
 8001bbe:	2300      	movs	r3, #0
 8001bc0:	73fb      	strb	r3, [r7, #15]
 8001bc2:	7bfb      	ldrb	r3, [r7, #15]
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	3714      	adds	r7, #20
 8001bc8:	46bd      	mov	sp, r7
 8001bca:	bc80      	pop	{r7}
 8001bcc:	4770      	bx	lr

08001bce <HAL_GPIO_WritePin>:
 8001bce:	b480      	push	{r7}
 8001bd0:	b083      	sub	sp, #12
 8001bd2:	af00      	add	r7, sp, #0
 8001bd4:	6078      	str	r0, [r7, #4]
 8001bd6:	460b      	mov	r3, r1
 8001bd8:	807b      	strh	r3, [r7, #2]
 8001bda:	4613      	mov	r3, r2
 8001bdc:	707b      	strb	r3, [r7, #1]
 8001bde:	787b      	ldrb	r3, [r7, #1]
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	d003      	beq.n	8001bec <HAL_GPIO_WritePin+0x1e>
 8001be4:	887a      	ldrh	r2, [r7, #2]
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	611a      	str	r2, [r3, #16]
 8001bea:	e003      	b.n	8001bf4 <HAL_GPIO_WritePin+0x26>
 8001bec:	887b      	ldrh	r3, [r7, #2]
 8001bee:	041a      	lsls	r2, r3, #16
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	611a      	str	r2, [r3, #16]
 8001bf4:	bf00      	nop
 8001bf6:	370c      	adds	r7, #12
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bc80      	pop	{r7}
 8001bfc:	4770      	bx	lr

08001bfe <HAL_GPIO_TogglePin>:
 8001bfe:	b480      	push	{r7}
 8001c00:	b085      	sub	sp, #20
 8001c02:	af00      	add	r7, sp, #0
 8001c04:	6078      	str	r0, [r7, #4]
 8001c06:	460b      	mov	r3, r1
 8001c08:	807b      	strh	r3, [r7, #2]
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	68db      	ldr	r3, [r3, #12]
 8001c0e:	60fb      	str	r3, [r7, #12]
 8001c10:	887a      	ldrh	r2, [r7, #2]
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	4013      	ands	r3, r2
 8001c16:	041a      	lsls	r2, r3, #16
 8001c18:	68fb      	ldr	r3, [r7, #12]
 8001c1a:	43d9      	mvns	r1, r3
 8001c1c:	887b      	ldrh	r3, [r7, #2]
 8001c1e:	400b      	ands	r3, r1
 8001c20:	431a      	orrs	r2, r3
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	611a      	str	r2, [r3, #16]
 8001c26:	bf00      	nop
 8001c28:	3714      	adds	r7, #20
 8001c2a:	46bd      	mov	sp, r7
 8001c2c:	bc80      	pop	{r7}
 8001c2e:	4770      	bx	lr

08001c30 <HAL_GPIO_EXTI_IRQHandler>:
 8001c30:	b580      	push	{r7, lr}
 8001c32:	b082      	sub	sp, #8
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	4603      	mov	r3, r0
 8001c38:	80fb      	strh	r3, [r7, #6]
 8001c3a:	4b08      	ldr	r3, [pc, #32]	; (8001c5c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001c3c:	695a      	ldr	r2, [r3, #20]
 8001c3e:	88fb      	ldrh	r3, [r7, #6]
 8001c40:	4013      	ands	r3, r2
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d006      	beq.n	8001c54 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001c46:	4a05      	ldr	r2, [pc, #20]	; (8001c5c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001c48:	88fb      	ldrh	r3, [r7, #6]
 8001c4a:	6153      	str	r3, [r2, #20]
 8001c4c:	88fb      	ldrh	r3, [r7, #6]
 8001c4e:	4618      	mov	r0, r3
 8001c50:	f000 f806 	bl	8001c60 <HAL_GPIO_EXTI_Callback>
 8001c54:	bf00      	nop
 8001c56:	3708      	adds	r7, #8
 8001c58:	46bd      	mov	sp, r7
 8001c5a:	bd80      	pop	{r7, pc}
 8001c5c:	40010400 	.word	0x40010400

08001c60 <HAL_GPIO_EXTI_Callback>:
 8001c60:	b480      	push	{r7}
 8001c62:	b083      	sub	sp, #12
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	4603      	mov	r3, r0
 8001c68:	80fb      	strh	r3, [r7, #6]
 8001c6a:	bf00      	nop
 8001c6c:	370c      	adds	r7, #12
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	bc80      	pop	{r7}
 8001c72:	4770      	bx	lr

08001c74 <HAL_I2C_Init>:
 8001c74:	b580      	push	{r7, lr}
 8001c76:	b084      	sub	sp, #16
 8001c78:	af00      	add	r7, sp, #0
 8001c7a:	6078      	str	r0, [r7, #4]
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	d101      	bne.n	8001c86 <HAL_I2C_Init+0x12>
 8001c82:	2301      	movs	r3, #1
 8001c84:	e12b      	b.n	8001ede <HAL_I2C_Init+0x26a>
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001c8c:	b2db      	uxtb	r3, r3
 8001c8e:	2b00      	cmp	r3, #0
 8001c90:	d106      	bne.n	8001ca0 <HAL_I2C_Init+0x2c>
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	2200      	movs	r2, #0
 8001c96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c9a:	6878      	ldr	r0, [r7, #4]
 8001c9c:	f7ff fa8c 	bl	80011b8 <HAL_I2C_MspInit>
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	2224      	movs	r2, #36	; 0x24
 8001ca4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	681a      	ldr	r2, [r3, #0]
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	681b      	ldr	r3, [r3, #0]
 8001cb2:	f022 0201 	bic.w	r2, r2, #1
 8001cb6:	601a      	str	r2, [r3, #0]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	681a      	ldr	r2, [r3, #0]
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001cc6:	601a      	str	r2, [r3, #0]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	681a      	ldr	r2, [r3, #0]
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001cd6:	601a      	str	r2, [r3, #0]
 8001cd8:	f001 f830 	bl	8002d3c <HAL_RCC_GetPCLK1Freq>
 8001cdc:	60f8      	str	r0, [r7, #12]
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	4a81      	ldr	r2, [pc, #516]	; (8001ee8 <HAL_I2C_Init+0x274>)
 8001ce4:	4293      	cmp	r3, r2
 8001ce6:	d807      	bhi.n	8001cf8 <HAL_I2C_Init+0x84>
 8001ce8:	68fb      	ldr	r3, [r7, #12]
 8001cea:	4a80      	ldr	r2, [pc, #512]	; (8001eec <HAL_I2C_Init+0x278>)
 8001cec:	4293      	cmp	r3, r2
 8001cee:	bf94      	ite	ls
 8001cf0:	2301      	movls	r3, #1
 8001cf2:	2300      	movhi	r3, #0
 8001cf4:	b2db      	uxtb	r3, r3
 8001cf6:	e006      	b.n	8001d06 <HAL_I2C_Init+0x92>
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	4a7d      	ldr	r2, [pc, #500]	; (8001ef0 <HAL_I2C_Init+0x27c>)
 8001cfc:	4293      	cmp	r3, r2
 8001cfe:	bf94      	ite	ls
 8001d00:	2301      	movls	r3, #1
 8001d02:	2300      	movhi	r3, #0
 8001d04:	b2db      	uxtb	r3, r3
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	d001      	beq.n	8001d0e <HAL_I2C_Init+0x9a>
 8001d0a:	2301      	movs	r3, #1
 8001d0c:	e0e7      	b.n	8001ede <HAL_I2C_Init+0x26a>
 8001d0e:	68fb      	ldr	r3, [r7, #12]
 8001d10:	4a78      	ldr	r2, [pc, #480]	; (8001ef4 <HAL_I2C_Init+0x280>)
 8001d12:	fba2 2303 	umull	r2, r3, r2, r3
 8001d16:	0c9b      	lsrs	r3, r3, #18
 8001d18:	60bb      	str	r3, [r7, #8]
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	685b      	ldr	r3, [r3, #4]
 8001d20:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	68ba      	ldr	r2, [r7, #8]
 8001d2a:	430a      	orrs	r2, r1
 8001d2c:	605a      	str	r2, [r3, #4]
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	6a1b      	ldr	r3, [r3, #32]
 8001d34:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	685b      	ldr	r3, [r3, #4]
 8001d3c:	4a6a      	ldr	r2, [pc, #424]	; (8001ee8 <HAL_I2C_Init+0x274>)
 8001d3e:	4293      	cmp	r3, r2
 8001d40:	d802      	bhi.n	8001d48 <HAL_I2C_Init+0xd4>
 8001d42:	68bb      	ldr	r3, [r7, #8]
 8001d44:	3301      	adds	r3, #1
 8001d46:	e009      	b.n	8001d5c <HAL_I2C_Init+0xe8>
 8001d48:	68bb      	ldr	r3, [r7, #8]
 8001d4a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001d4e:	fb02 f303 	mul.w	r3, r2, r3
 8001d52:	4a69      	ldr	r2, [pc, #420]	; (8001ef8 <HAL_I2C_Init+0x284>)
 8001d54:	fba2 2303 	umull	r2, r3, r2, r3
 8001d58:	099b      	lsrs	r3, r3, #6
 8001d5a:	3301      	adds	r3, #1
 8001d5c:	687a      	ldr	r2, [r7, #4]
 8001d5e:	6812      	ldr	r2, [r2, #0]
 8001d60:	430b      	orrs	r3, r1
 8001d62:	6213      	str	r3, [r2, #32]
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	69db      	ldr	r3, [r3, #28]
 8001d6a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8001d6e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	685b      	ldr	r3, [r3, #4]
 8001d76:	495c      	ldr	r1, [pc, #368]	; (8001ee8 <HAL_I2C_Init+0x274>)
 8001d78:	428b      	cmp	r3, r1
 8001d7a:	d819      	bhi.n	8001db0 <HAL_I2C_Init+0x13c>
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	1e59      	subs	r1, r3, #1
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	685b      	ldr	r3, [r3, #4]
 8001d84:	005b      	lsls	r3, r3, #1
 8001d86:	fbb1 f3f3 	udiv	r3, r1, r3
 8001d8a:	1c59      	adds	r1, r3, #1
 8001d8c:	f640 73fc 	movw	r3, #4092	; 0xffc
 8001d90:	400b      	ands	r3, r1
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d00a      	beq.n	8001dac <HAL_I2C_Init+0x138>
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	1e59      	subs	r1, r3, #1
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	005b      	lsls	r3, r3, #1
 8001da0:	fbb1 f3f3 	udiv	r3, r1, r3
 8001da4:	3301      	adds	r3, #1
 8001da6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001daa:	e051      	b.n	8001e50 <HAL_I2C_Init+0x1dc>
 8001dac:	2304      	movs	r3, #4
 8001dae:	e04f      	b.n	8001e50 <HAL_I2C_Init+0x1dc>
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	689b      	ldr	r3, [r3, #8]
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d111      	bne.n	8001ddc <HAL_I2C_Init+0x168>
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	1e58      	subs	r0, r3, #1
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	6859      	ldr	r1, [r3, #4]
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	005b      	lsls	r3, r3, #1
 8001dc4:	440b      	add	r3, r1
 8001dc6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001dca:	3301      	adds	r3, #1
 8001dcc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	bf0c      	ite	eq
 8001dd4:	2301      	moveq	r3, #1
 8001dd6:	2300      	movne	r3, #0
 8001dd8:	b2db      	uxtb	r3, r3
 8001dda:	e012      	b.n	8001e02 <HAL_I2C_Init+0x18e>
 8001ddc:	68fb      	ldr	r3, [r7, #12]
 8001dde:	1e58      	subs	r0, r3, #1
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	6859      	ldr	r1, [r3, #4]
 8001de4:	460b      	mov	r3, r1
 8001de6:	009b      	lsls	r3, r3, #2
 8001de8:	440b      	add	r3, r1
 8001dea:	0099      	lsls	r1, r3, #2
 8001dec:	440b      	add	r3, r1
 8001dee:	fbb0 f3f3 	udiv	r3, r0, r3
 8001df2:	3301      	adds	r3, #1
 8001df4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	bf0c      	ite	eq
 8001dfc:	2301      	moveq	r3, #1
 8001dfe:	2300      	movne	r3, #0
 8001e00:	b2db      	uxtb	r3, r3
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d001      	beq.n	8001e0a <HAL_I2C_Init+0x196>
 8001e06:	2301      	movs	r3, #1
 8001e08:	e022      	b.n	8001e50 <HAL_I2C_Init+0x1dc>
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	689b      	ldr	r3, [r3, #8]
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	d10e      	bne.n	8001e30 <HAL_I2C_Init+0x1bc>
 8001e12:	68fb      	ldr	r3, [r7, #12]
 8001e14:	1e58      	subs	r0, r3, #1
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	6859      	ldr	r1, [r3, #4]
 8001e1a:	460b      	mov	r3, r1
 8001e1c:	005b      	lsls	r3, r3, #1
 8001e1e:	440b      	add	r3, r1
 8001e20:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e24:	3301      	adds	r3, #1
 8001e26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e2a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001e2e:	e00f      	b.n	8001e50 <HAL_I2C_Init+0x1dc>
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	1e58      	subs	r0, r3, #1
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	6859      	ldr	r1, [r3, #4]
 8001e38:	460b      	mov	r3, r1
 8001e3a:	009b      	lsls	r3, r3, #2
 8001e3c:	440b      	add	r3, r1
 8001e3e:	0099      	lsls	r1, r3, #2
 8001e40:	440b      	add	r3, r1
 8001e42:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e46:	3301      	adds	r3, #1
 8001e48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e4c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001e50:	6879      	ldr	r1, [r7, #4]
 8001e52:	6809      	ldr	r1, [r1, #0]
 8001e54:	4313      	orrs	r3, r2
 8001e56:	61cb      	str	r3, [r1, #28]
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	69da      	ldr	r2, [r3, #28]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	6a1b      	ldr	r3, [r3, #32]
 8001e6a:	431a      	orrs	r2, r3
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	430a      	orrs	r2, r1
 8001e72:	601a      	str	r2, [r3, #0]
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	689b      	ldr	r3, [r3, #8]
 8001e7a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8001e7e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8001e82:	687a      	ldr	r2, [r7, #4]
 8001e84:	6911      	ldr	r1, [r2, #16]
 8001e86:	687a      	ldr	r2, [r7, #4]
 8001e88:	68d2      	ldr	r2, [r2, #12]
 8001e8a:	4311      	orrs	r1, r2
 8001e8c:	687a      	ldr	r2, [r7, #4]
 8001e8e:	6812      	ldr	r2, [r2, #0]
 8001e90:	430b      	orrs	r3, r1
 8001e92:	6093      	str	r3, [r2, #8]
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	68db      	ldr	r3, [r3, #12]
 8001e9a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	695a      	ldr	r2, [r3, #20]
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	699b      	ldr	r3, [r3, #24]
 8001ea6:	431a      	orrs	r2, r3
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	430a      	orrs	r2, r1
 8001eae:	60da      	str	r2, [r3, #12]
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	681a      	ldr	r2, [r3, #0]
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	f042 0201 	orr.w	r2, r2, #1
 8001ebe:	601a      	str	r2, [r3, #0]
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	641a      	str	r2, [r3, #64]	; 0x40
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	2220      	movs	r2, #32
 8001eca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001edc:	2300      	movs	r3, #0
 8001ede:	4618      	mov	r0, r3
 8001ee0:	3710      	adds	r7, #16
 8001ee2:	46bd      	mov	sp, r7
 8001ee4:	bd80      	pop	{r7, pc}
 8001ee6:	bf00      	nop
 8001ee8:	000186a0 	.word	0x000186a0
 8001eec:	001e847f 	.word	0x001e847f
 8001ef0:	003d08ff 	.word	0x003d08ff
 8001ef4:	431bde83 	.word	0x431bde83
 8001ef8:	10624dd3 	.word	0x10624dd3

08001efc <HAL_I2C_Master_Transmit>:
 8001efc:	b580      	push	{r7, lr}
 8001efe:	b088      	sub	sp, #32
 8001f00:	af02      	add	r7, sp, #8
 8001f02:	60f8      	str	r0, [r7, #12]
 8001f04:	607a      	str	r2, [r7, #4]
 8001f06:	461a      	mov	r2, r3
 8001f08:	460b      	mov	r3, r1
 8001f0a:	817b      	strh	r3, [r7, #10]
 8001f0c:	4613      	mov	r3, r2
 8001f0e:	813b      	strh	r3, [r7, #8]
 8001f10:	f7ff fad4 	bl	80014bc <HAL_GetTick>
 8001f14:	6178      	str	r0, [r7, #20]
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001f1c:	b2db      	uxtb	r3, r3
 8001f1e:	2b20      	cmp	r3, #32
 8001f20:	f040 80e0 	bne.w	80020e4 <HAL_I2C_Master_Transmit+0x1e8>
 8001f24:	697b      	ldr	r3, [r7, #20]
 8001f26:	9300      	str	r3, [sp, #0]
 8001f28:	2319      	movs	r3, #25
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	4970      	ldr	r1, [pc, #448]	; (80020f0 <HAL_I2C_Master_Transmit+0x1f4>)
 8001f2e:	68f8      	ldr	r0, [r7, #12]
 8001f30:	f000 f964 	bl	80021fc <I2C_WaitOnFlagUntilTimeout>
 8001f34:	4603      	mov	r3, r0
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d001      	beq.n	8001f3e <HAL_I2C_Master_Transmit+0x42>
 8001f3a:	2302      	movs	r3, #2
 8001f3c:	e0d3      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 8001f3e:	68fb      	ldr	r3, [r7, #12]
 8001f40:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001f44:	2b01      	cmp	r3, #1
 8001f46:	d101      	bne.n	8001f4c <HAL_I2C_Master_Transmit+0x50>
 8001f48:	2302      	movs	r3, #2
 8001f4a:	e0cc      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 8001f4c:	68fb      	ldr	r3, [r7, #12]
 8001f4e:	2201      	movs	r2, #1
 8001f50:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f54:	68fb      	ldr	r3, [r7, #12]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	f003 0301 	and.w	r3, r3, #1
 8001f5e:	2b01      	cmp	r3, #1
 8001f60:	d007      	beq.n	8001f72 <HAL_I2C_Master_Transmit+0x76>
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	681a      	ldr	r2, [r3, #0]
 8001f68:	68fb      	ldr	r3, [r7, #12]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	f042 0201 	orr.w	r2, r2, #1
 8001f70:	601a      	str	r2, [r3, #0]
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	681a      	ldr	r2, [r3, #0]
 8001f78:	68fb      	ldr	r3, [r7, #12]
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001f80:	601a      	str	r2, [r3, #0]
 8001f82:	68fb      	ldr	r3, [r7, #12]
 8001f84:	2221      	movs	r2, #33	; 0x21
 8001f86:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f8a:	68fb      	ldr	r3, [r7, #12]
 8001f8c:	2210      	movs	r2, #16
 8001f8e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	2200      	movs	r2, #0
 8001f96:	641a      	str	r2, [r3, #64]	; 0x40
 8001f98:	68fb      	ldr	r3, [r7, #12]
 8001f9a:	687a      	ldr	r2, [r7, #4]
 8001f9c:	625a      	str	r2, [r3, #36]	; 0x24
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	893a      	ldrh	r2, [r7, #8]
 8001fa2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001fa4:	68fb      	ldr	r3, [r7, #12]
 8001fa6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001fa8:	b29a      	uxth	r2, r3
 8001faa:	68fb      	ldr	r3, [r7, #12]
 8001fac:	851a      	strh	r2, [r3, #40]	; 0x28
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	4a50      	ldr	r2, [pc, #320]	; (80020f4 <HAL_I2C_Master_Transmit+0x1f8>)
 8001fb2:	62da      	str	r2, [r3, #44]	; 0x2c
 8001fb4:	8979      	ldrh	r1, [r7, #10]
 8001fb6:	697b      	ldr	r3, [r7, #20]
 8001fb8:	6a3a      	ldr	r2, [r7, #32]
 8001fba:	68f8      	ldr	r0, [r7, #12]
 8001fbc:	f000 f89c 	bl	80020f8 <I2C_MasterRequestWrite>
 8001fc0:	4603      	mov	r3, r0
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d001      	beq.n	8001fca <HAL_I2C_Master_Transmit+0xce>
 8001fc6:	2301      	movs	r3, #1
 8001fc8:	e08d      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 8001fca:	2300      	movs	r3, #0
 8001fcc:	613b      	str	r3, [r7, #16]
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	695b      	ldr	r3, [r3, #20]
 8001fd4:	613b      	str	r3, [r7, #16]
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	699b      	ldr	r3, [r3, #24]
 8001fdc:	613b      	str	r3, [r7, #16]
 8001fde:	693b      	ldr	r3, [r7, #16]
 8001fe0:	e066      	b.n	80020b0 <HAL_I2C_Master_Transmit+0x1b4>
 8001fe2:	697a      	ldr	r2, [r7, #20]
 8001fe4:	6a39      	ldr	r1, [r7, #32]
 8001fe6:	68f8      	ldr	r0, [r7, #12]
 8001fe8:	f000 fa22 	bl	8002430 <I2C_WaitOnTXEFlagUntilTimeout>
 8001fec:	4603      	mov	r3, r0
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d00d      	beq.n	800200e <HAL_I2C_Master_Transmit+0x112>
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ff6:	2b04      	cmp	r3, #4
 8001ff8:	d107      	bne.n	800200a <HAL_I2C_Master_Transmit+0x10e>
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	681a      	ldr	r2, [r3, #0]
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002008:	601a      	str	r2, [r3, #0]
 800200a:	2301      	movs	r3, #1
 800200c:	e06b      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 800200e:	68fb      	ldr	r3, [r7, #12]
 8002010:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002012:	781a      	ldrb	r2, [r3, #0]
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	611a      	str	r2, [r3, #16]
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800201e:	1c5a      	adds	r2, r3, #1
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	625a      	str	r2, [r3, #36]	; 0x24
 8002024:	68fb      	ldr	r3, [r7, #12]
 8002026:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002028:	b29b      	uxth	r3, r3
 800202a:	3b01      	subs	r3, #1
 800202c:	b29a      	uxth	r2, r3
 800202e:	68fb      	ldr	r3, [r7, #12]
 8002030:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002032:	68fb      	ldr	r3, [r7, #12]
 8002034:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002036:	3b01      	subs	r3, #1
 8002038:	b29a      	uxth	r2, r3
 800203a:	68fb      	ldr	r3, [r7, #12]
 800203c:	851a      	strh	r2, [r3, #40]	; 0x28
 800203e:	68fb      	ldr	r3, [r7, #12]
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	695b      	ldr	r3, [r3, #20]
 8002044:	f003 0304 	and.w	r3, r3, #4
 8002048:	2b04      	cmp	r3, #4
 800204a:	d11b      	bne.n	8002084 <HAL_I2C_Master_Transmit+0x188>
 800204c:	68fb      	ldr	r3, [r7, #12]
 800204e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002050:	2b00      	cmp	r3, #0
 8002052:	d017      	beq.n	8002084 <HAL_I2C_Master_Transmit+0x188>
 8002054:	68fb      	ldr	r3, [r7, #12]
 8002056:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002058:	781a      	ldrb	r2, [r3, #0]
 800205a:	68fb      	ldr	r3, [r7, #12]
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	611a      	str	r2, [r3, #16]
 8002060:	68fb      	ldr	r3, [r7, #12]
 8002062:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002064:	1c5a      	adds	r2, r3, #1
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	625a      	str	r2, [r3, #36]	; 0x24
 800206a:	68fb      	ldr	r3, [r7, #12]
 800206c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800206e:	b29b      	uxth	r3, r3
 8002070:	3b01      	subs	r3, #1
 8002072:	b29a      	uxth	r2, r3
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800207c:	3b01      	subs	r3, #1
 800207e:	b29a      	uxth	r2, r3
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	851a      	strh	r2, [r3, #40]	; 0x28
 8002084:	697a      	ldr	r2, [r7, #20]
 8002086:	6a39      	ldr	r1, [r7, #32]
 8002088:	68f8      	ldr	r0, [r7, #12]
 800208a:	f000 fa19 	bl	80024c0 <I2C_WaitOnBTFFlagUntilTimeout>
 800208e:	4603      	mov	r3, r0
 8002090:	2b00      	cmp	r3, #0
 8002092:	d00d      	beq.n	80020b0 <HAL_I2C_Master_Transmit+0x1b4>
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002098:	2b04      	cmp	r3, #4
 800209a:	d107      	bne.n	80020ac <HAL_I2C_Master_Transmit+0x1b0>
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	681a      	ldr	r2, [r3, #0]
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80020aa:	601a      	str	r2, [r3, #0]
 80020ac:	2301      	movs	r3, #1
 80020ae:	e01a      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 80020b0:	68fb      	ldr	r3, [r7, #12]
 80020b2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	d194      	bne.n	8001fe2 <HAL_I2C_Master_Transmit+0xe6>
 80020b8:	68fb      	ldr	r3, [r7, #12]
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	681a      	ldr	r2, [r3, #0]
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80020c6:	601a      	str	r2, [r3, #0]
 80020c8:	68fb      	ldr	r3, [r7, #12]
 80020ca:	2220      	movs	r2, #32
 80020cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	2200      	movs	r2, #0
 80020d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	2200      	movs	r2, #0
 80020dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020e0:	2300      	movs	r3, #0
 80020e2:	e000      	b.n	80020e6 <HAL_I2C_Master_Transmit+0x1ea>
 80020e4:	2302      	movs	r3, #2
 80020e6:	4618      	mov	r0, r3
 80020e8:	3718      	adds	r7, #24
 80020ea:	46bd      	mov	sp, r7
 80020ec:	bd80      	pop	{r7, pc}
 80020ee:	bf00      	nop
 80020f0:	00100002 	.word	0x00100002
 80020f4:	ffff0000 	.word	0xffff0000

080020f8 <I2C_MasterRequestWrite>:
 80020f8:	b580      	push	{r7, lr}
 80020fa:	b088      	sub	sp, #32
 80020fc:	af02      	add	r7, sp, #8
 80020fe:	60f8      	str	r0, [r7, #12]
 8002100:	607a      	str	r2, [r7, #4]
 8002102:	603b      	str	r3, [r7, #0]
 8002104:	460b      	mov	r3, r1
 8002106:	817b      	strh	r3, [r7, #10]
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800210c:	617b      	str	r3, [r7, #20]
 800210e:	697b      	ldr	r3, [r7, #20]
 8002110:	2b08      	cmp	r3, #8
 8002112:	d006      	beq.n	8002122 <I2C_MasterRequestWrite+0x2a>
 8002114:	697b      	ldr	r3, [r7, #20]
 8002116:	2b01      	cmp	r3, #1
 8002118:	d003      	beq.n	8002122 <I2C_MasterRequestWrite+0x2a>
 800211a:	697b      	ldr	r3, [r7, #20]
 800211c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8002120:	d108      	bne.n	8002134 <I2C_MasterRequestWrite+0x3c>
 8002122:	68fb      	ldr	r3, [r7, #12]
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	681a      	ldr	r2, [r3, #0]
 8002128:	68fb      	ldr	r3, [r7, #12]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002130:	601a      	str	r2, [r3, #0]
 8002132:	e00b      	b.n	800214c <I2C_MasterRequestWrite+0x54>
 8002134:	68fb      	ldr	r3, [r7, #12]
 8002136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002138:	2b12      	cmp	r3, #18
 800213a:	d107      	bne.n	800214c <I2C_MasterRequestWrite+0x54>
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	681a      	ldr	r2, [r3, #0]
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800214a:	601a      	str	r2, [r3, #0]
 800214c:	683b      	ldr	r3, [r7, #0]
 800214e:	9300      	str	r3, [sp, #0]
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2200      	movs	r2, #0
 8002154:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002158:	68f8      	ldr	r0, [r7, #12]
 800215a:	f000 f84f 	bl	80021fc <I2C_WaitOnFlagUntilTimeout>
 800215e:	4603      	mov	r3, r0
 8002160:	2b00      	cmp	r3, #0
 8002162:	d00d      	beq.n	8002180 <I2C_MasterRequestWrite+0x88>
 8002164:	68fb      	ldr	r3, [r7, #12]
 8002166:	681b      	ldr	r3, [r3, #0]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800216e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002172:	d103      	bne.n	800217c <I2C_MasterRequestWrite+0x84>
 8002174:	68fb      	ldr	r3, [r7, #12]
 8002176:	f44f 7200 	mov.w	r2, #512	; 0x200
 800217a:	641a      	str	r2, [r3, #64]	; 0x40
 800217c:	2303      	movs	r3, #3
 800217e:	e035      	b.n	80021ec <I2C_MasterRequestWrite+0xf4>
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	691b      	ldr	r3, [r3, #16]
 8002184:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002188:	d108      	bne.n	800219c <I2C_MasterRequestWrite+0xa4>
 800218a:	897b      	ldrh	r3, [r7, #10]
 800218c:	b2db      	uxtb	r3, r3
 800218e:	461a      	mov	r2, r3
 8002190:	68fb      	ldr	r3, [r7, #12]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8002198:	611a      	str	r2, [r3, #16]
 800219a:	e01b      	b.n	80021d4 <I2C_MasterRequestWrite+0xdc>
 800219c:	897b      	ldrh	r3, [r7, #10]
 800219e:	11db      	asrs	r3, r3, #7
 80021a0:	b2db      	uxtb	r3, r3
 80021a2:	f003 0306 	and.w	r3, r3, #6
 80021a6:	b2db      	uxtb	r3, r3
 80021a8:	f063 030f 	orn	r3, r3, #15
 80021ac:	b2da      	uxtb	r2, r3
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	611a      	str	r2, [r3, #16]
 80021b4:	683b      	ldr	r3, [r7, #0]
 80021b6:	687a      	ldr	r2, [r7, #4]
 80021b8:	490e      	ldr	r1, [pc, #56]	; (80021f4 <I2C_MasterRequestWrite+0xfc>)
 80021ba:	68f8      	ldr	r0, [r7, #12]
 80021bc:	f000 f898 	bl	80022f0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80021c0:	4603      	mov	r3, r0
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d001      	beq.n	80021ca <I2C_MasterRequestWrite+0xd2>
 80021c6:	2301      	movs	r3, #1
 80021c8:	e010      	b.n	80021ec <I2C_MasterRequestWrite+0xf4>
 80021ca:	897b      	ldrh	r3, [r7, #10]
 80021cc:	b2da      	uxtb	r2, r3
 80021ce:	68fb      	ldr	r3, [r7, #12]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	611a      	str	r2, [r3, #16]
 80021d4:	683b      	ldr	r3, [r7, #0]
 80021d6:	687a      	ldr	r2, [r7, #4]
 80021d8:	4907      	ldr	r1, [pc, #28]	; (80021f8 <I2C_MasterRequestWrite+0x100>)
 80021da:	68f8      	ldr	r0, [r7, #12]
 80021dc:	f000 f888 	bl	80022f0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80021e0:	4603      	mov	r3, r0
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d001      	beq.n	80021ea <I2C_MasterRequestWrite+0xf2>
 80021e6:	2301      	movs	r3, #1
 80021e8:	e000      	b.n	80021ec <I2C_MasterRequestWrite+0xf4>
 80021ea:	2300      	movs	r3, #0
 80021ec:	4618      	mov	r0, r3
 80021ee:	3718      	adds	r7, #24
 80021f0:	46bd      	mov	sp, r7
 80021f2:	bd80      	pop	{r7, pc}
 80021f4:	00010008 	.word	0x00010008
 80021f8:	00010002 	.word	0x00010002

080021fc <I2C_WaitOnFlagUntilTimeout>:
 80021fc:	b580      	push	{r7, lr}
 80021fe:	b084      	sub	sp, #16
 8002200:	af00      	add	r7, sp, #0
 8002202:	60f8      	str	r0, [r7, #12]
 8002204:	60b9      	str	r1, [r7, #8]
 8002206:	603b      	str	r3, [r7, #0]
 8002208:	4613      	mov	r3, r2
 800220a:	71fb      	strb	r3, [r7, #7]
 800220c:	e048      	b.n	80022a0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800220e:	683b      	ldr	r3, [r7, #0]
 8002210:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002214:	d044      	beq.n	80022a0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002216:	f7ff f951 	bl	80014bc <HAL_GetTick>
 800221a:	4602      	mov	r2, r0
 800221c:	69bb      	ldr	r3, [r7, #24]
 800221e:	1ad3      	subs	r3, r2, r3
 8002220:	683a      	ldr	r2, [r7, #0]
 8002222:	429a      	cmp	r2, r3
 8002224:	d302      	bcc.n	800222c <I2C_WaitOnFlagUntilTimeout+0x30>
 8002226:	683b      	ldr	r3, [r7, #0]
 8002228:	2b00      	cmp	r3, #0
 800222a:	d139      	bne.n	80022a0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800222c:	68bb      	ldr	r3, [r7, #8]
 800222e:	0c1b      	lsrs	r3, r3, #16
 8002230:	b2db      	uxtb	r3, r3
 8002232:	2b01      	cmp	r3, #1
 8002234:	d10d      	bne.n	8002252 <I2C_WaitOnFlagUntilTimeout+0x56>
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	695b      	ldr	r3, [r3, #20]
 800223c:	43da      	mvns	r2, r3
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	4013      	ands	r3, r2
 8002242:	b29b      	uxth	r3, r3
 8002244:	2b00      	cmp	r3, #0
 8002246:	bf0c      	ite	eq
 8002248:	2301      	moveq	r3, #1
 800224a:	2300      	movne	r3, #0
 800224c:	b2db      	uxtb	r3, r3
 800224e:	461a      	mov	r2, r3
 8002250:	e00c      	b.n	800226c <I2C_WaitOnFlagUntilTimeout+0x70>
 8002252:	68fb      	ldr	r3, [r7, #12]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	699b      	ldr	r3, [r3, #24]
 8002258:	43da      	mvns	r2, r3
 800225a:	68bb      	ldr	r3, [r7, #8]
 800225c:	4013      	ands	r3, r2
 800225e:	b29b      	uxth	r3, r3
 8002260:	2b00      	cmp	r3, #0
 8002262:	bf0c      	ite	eq
 8002264:	2301      	moveq	r3, #1
 8002266:	2300      	movne	r3, #0
 8002268:	b2db      	uxtb	r3, r3
 800226a:	461a      	mov	r2, r3
 800226c:	79fb      	ldrb	r3, [r7, #7]
 800226e:	429a      	cmp	r2, r3
 8002270:	d116      	bne.n	80022a0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002272:	68fb      	ldr	r3, [r7, #12]
 8002274:	2200      	movs	r2, #0
 8002276:	631a      	str	r2, [r3, #48]	; 0x30
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	2220      	movs	r2, #32
 800227c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002280:	68fb      	ldr	r3, [r7, #12]
 8002282:	2200      	movs	r2, #0
 8002284:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002288:	68fb      	ldr	r3, [r7, #12]
 800228a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800228c:	f043 0220 	orr.w	r2, r3, #32
 8002290:	68fb      	ldr	r3, [r7, #12]
 8002292:	641a      	str	r2, [r3, #64]	; 0x40
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	2200      	movs	r2, #0
 8002298:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800229c:	2301      	movs	r3, #1
 800229e:	e023      	b.n	80022e8 <I2C_WaitOnFlagUntilTimeout+0xec>
 80022a0:	68bb      	ldr	r3, [r7, #8]
 80022a2:	0c1b      	lsrs	r3, r3, #16
 80022a4:	b2db      	uxtb	r3, r3
 80022a6:	2b01      	cmp	r3, #1
 80022a8:	d10d      	bne.n	80022c6 <I2C_WaitOnFlagUntilTimeout+0xca>
 80022aa:	68fb      	ldr	r3, [r7, #12]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	695b      	ldr	r3, [r3, #20]
 80022b0:	43da      	mvns	r2, r3
 80022b2:	68bb      	ldr	r3, [r7, #8]
 80022b4:	4013      	ands	r3, r2
 80022b6:	b29b      	uxth	r3, r3
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	bf0c      	ite	eq
 80022bc:	2301      	moveq	r3, #1
 80022be:	2300      	movne	r3, #0
 80022c0:	b2db      	uxtb	r3, r3
 80022c2:	461a      	mov	r2, r3
 80022c4:	e00c      	b.n	80022e0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 80022c6:	68fb      	ldr	r3, [r7, #12]
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	699b      	ldr	r3, [r3, #24]
 80022cc:	43da      	mvns	r2, r3
 80022ce:	68bb      	ldr	r3, [r7, #8]
 80022d0:	4013      	ands	r3, r2
 80022d2:	b29b      	uxth	r3, r3
 80022d4:	2b00      	cmp	r3, #0
 80022d6:	bf0c      	ite	eq
 80022d8:	2301      	moveq	r3, #1
 80022da:	2300      	movne	r3, #0
 80022dc:	b2db      	uxtb	r3, r3
 80022de:	461a      	mov	r2, r3
 80022e0:	79fb      	ldrb	r3, [r7, #7]
 80022e2:	429a      	cmp	r2, r3
 80022e4:	d093      	beq.n	800220e <I2C_WaitOnFlagUntilTimeout+0x12>
 80022e6:	2300      	movs	r3, #0
 80022e8:	4618      	mov	r0, r3
 80022ea:	3710      	adds	r7, #16
 80022ec:	46bd      	mov	sp, r7
 80022ee:	bd80      	pop	{r7, pc}

080022f0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80022f0:	b580      	push	{r7, lr}
 80022f2:	b084      	sub	sp, #16
 80022f4:	af00      	add	r7, sp, #0
 80022f6:	60f8      	str	r0, [r7, #12]
 80022f8:	60b9      	str	r1, [r7, #8]
 80022fa:	607a      	str	r2, [r7, #4]
 80022fc:	603b      	str	r3, [r7, #0]
 80022fe:	e071      	b.n	80023e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002300:	68fb      	ldr	r3, [r7, #12]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	695b      	ldr	r3, [r3, #20]
 8002306:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800230a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800230e:	d123      	bne.n	8002358 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	681a      	ldr	r2, [r3, #0]
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800231e:	601a      	str	r2, [r3, #0]
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002328:	615a      	str	r2, [r3, #20]
 800232a:	68fb      	ldr	r3, [r7, #12]
 800232c:	2200      	movs	r2, #0
 800232e:	631a      	str	r2, [r3, #48]	; 0x30
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	2220      	movs	r2, #32
 8002334:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	2200      	movs	r2, #0
 800233c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002344:	f043 0204 	orr.w	r2, r3, #4
 8002348:	68fb      	ldr	r3, [r7, #12]
 800234a:	641a      	str	r2, [r3, #64]	; 0x40
 800234c:	68fb      	ldr	r3, [r7, #12]
 800234e:	2200      	movs	r2, #0
 8002350:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002354:	2301      	movs	r3, #1
 8002356:	e067      	b.n	8002428 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800235e:	d041      	beq.n	80023e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002360:	f7ff f8ac 	bl	80014bc <HAL_GetTick>
 8002364:	4602      	mov	r2, r0
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	1ad3      	subs	r3, r2, r3
 800236a:	687a      	ldr	r2, [r7, #4]
 800236c:	429a      	cmp	r2, r3
 800236e:	d302      	bcc.n	8002376 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	2b00      	cmp	r3, #0
 8002374:	d136      	bne.n	80023e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002376:	68bb      	ldr	r3, [r7, #8]
 8002378:	0c1b      	lsrs	r3, r3, #16
 800237a:	b2db      	uxtb	r3, r3
 800237c:	2b01      	cmp	r3, #1
 800237e:	d10c      	bne.n	800239a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8002380:	68fb      	ldr	r3, [r7, #12]
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	695b      	ldr	r3, [r3, #20]
 8002386:	43da      	mvns	r2, r3
 8002388:	68bb      	ldr	r3, [r7, #8]
 800238a:	4013      	ands	r3, r2
 800238c:	b29b      	uxth	r3, r3
 800238e:	2b00      	cmp	r3, #0
 8002390:	bf14      	ite	ne
 8002392:	2301      	movne	r3, #1
 8002394:	2300      	moveq	r3, #0
 8002396:	b2db      	uxtb	r3, r3
 8002398:	e00b      	b.n	80023b2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	699b      	ldr	r3, [r3, #24]
 80023a0:	43da      	mvns	r2, r3
 80023a2:	68bb      	ldr	r3, [r7, #8]
 80023a4:	4013      	ands	r3, r2
 80023a6:	b29b      	uxth	r3, r3
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	bf14      	ite	ne
 80023ac:	2301      	movne	r3, #1
 80023ae:	2300      	moveq	r3, #0
 80023b0:	b2db      	uxtb	r3, r3
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d016      	beq.n	80023e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80023b6:	68fb      	ldr	r3, [r7, #12]
 80023b8:	2200      	movs	r2, #0
 80023ba:	631a      	str	r2, [r3, #48]	; 0x30
 80023bc:	68fb      	ldr	r3, [r7, #12]
 80023be:	2220      	movs	r2, #32
 80023c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	2200      	movs	r2, #0
 80023c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80023cc:	68fb      	ldr	r3, [r7, #12]
 80023ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023d0:	f043 0220 	orr.w	r2, r3, #32
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	641a      	str	r2, [r3, #64]	; 0x40
 80023d8:	68fb      	ldr	r3, [r7, #12]
 80023da:	2200      	movs	r2, #0
 80023dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023e0:	2301      	movs	r3, #1
 80023e2:	e021      	b.n	8002428 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80023e4:	68bb      	ldr	r3, [r7, #8]
 80023e6:	0c1b      	lsrs	r3, r3, #16
 80023e8:	b2db      	uxtb	r3, r3
 80023ea:	2b01      	cmp	r3, #1
 80023ec:	d10c      	bne.n	8002408 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80023ee:	68fb      	ldr	r3, [r7, #12]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	695b      	ldr	r3, [r3, #20]
 80023f4:	43da      	mvns	r2, r3
 80023f6:	68bb      	ldr	r3, [r7, #8]
 80023f8:	4013      	ands	r3, r2
 80023fa:	b29b      	uxth	r3, r3
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	bf14      	ite	ne
 8002400:	2301      	movne	r3, #1
 8002402:	2300      	moveq	r3, #0
 8002404:	b2db      	uxtb	r3, r3
 8002406:	e00b      	b.n	8002420 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	699b      	ldr	r3, [r3, #24]
 800240e:	43da      	mvns	r2, r3
 8002410:	68bb      	ldr	r3, [r7, #8]
 8002412:	4013      	ands	r3, r2
 8002414:	b29b      	uxth	r3, r3
 8002416:	2b00      	cmp	r3, #0
 8002418:	bf14      	ite	ne
 800241a:	2301      	movne	r3, #1
 800241c:	2300      	moveq	r3, #0
 800241e:	b2db      	uxtb	r3, r3
 8002420:	2b00      	cmp	r3, #0
 8002422:	f47f af6d 	bne.w	8002300 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002426:	2300      	movs	r3, #0
 8002428:	4618      	mov	r0, r3
 800242a:	3710      	adds	r7, #16
 800242c:	46bd      	mov	sp, r7
 800242e:	bd80      	pop	{r7, pc}

08002430 <I2C_WaitOnTXEFlagUntilTimeout>:
 8002430:	b580      	push	{r7, lr}
 8002432:	b084      	sub	sp, #16
 8002434:	af00      	add	r7, sp, #0
 8002436:	60f8      	str	r0, [r7, #12]
 8002438:	60b9      	str	r1, [r7, #8]
 800243a:	607a      	str	r2, [r7, #4]
 800243c:	e034      	b.n	80024a8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800243e:	68f8      	ldr	r0, [r7, #12]
 8002440:	f000 f886 	bl	8002550 <I2C_IsAcknowledgeFailed>
 8002444:	4603      	mov	r3, r0
 8002446:	2b00      	cmp	r3, #0
 8002448:	d001      	beq.n	800244e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800244a:	2301      	movs	r3, #1
 800244c:	e034      	b.n	80024b8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800244e:	68bb      	ldr	r3, [r7, #8]
 8002450:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002454:	d028      	beq.n	80024a8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002456:	f7ff f831 	bl	80014bc <HAL_GetTick>
 800245a:	4602      	mov	r2, r0
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	1ad3      	subs	r3, r2, r3
 8002460:	68ba      	ldr	r2, [r7, #8]
 8002462:	429a      	cmp	r2, r3
 8002464:	d302      	bcc.n	800246c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002466:	68bb      	ldr	r3, [r7, #8]
 8002468:	2b00      	cmp	r3, #0
 800246a:	d11d      	bne.n	80024a8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	695b      	ldr	r3, [r3, #20]
 8002472:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002476:	2b80      	cmp	r3, #128	; 0x80
 8002478:	d016      	beq.n	80024a8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800247a:	68fb      	ldr	r3, [r7, #12]
 800247c:	2200      	movs	r2, #0
 800247e:	631a      	str	r2, [r3, #48]	; 0x30
 8002480:	68fb      	ldr	r3, [r7, #12]
 8002482:	2220      	movs	r2, #32
 8002484:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002488:	68fb      	ldr	r3, [r7, #12]
 800248a:	2200      	movs	r2, #0
 800248c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002490:	68fb      	ldr	r3, [r7, #12]
 8002492:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002494:	f043 0220 	orr.w	r2, r3, #32
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	641a      	str	r2, [r3, #64]	; 0x40
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	2200      	movs	r2, #0
 80024a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024a4:	2301      	movs	r3, #1
 80024a6:	e007      	b.n	80024b8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80024a8:	68fb      	ldr	r3, [r7, #12]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	695b      	ldr	r3, [r3, #20]
 80024ae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024b2:	2b80      	cmp	r3, #128	; 0x80
 80024b4:	d1c3      	bne.n	800243e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80024b6:	2300      	movs	r3, #0
 80024b8:	4618      	mov	r0, r3
 80024ba:	3710      	adds	r7, #16
 80024bc:	46bd      	mov	sp, r7
 80024be:	bd80      	pop	{r7, pc}

080024c0 <I2C_WaitOnBTFFlagUntilTimeout>:
 80024c0:	b580      	push	{r7, lr}
 80024c2:	b084      	sub	sp, #16
 80024c4:	af00      	add	r7, sp, #0
 80024c6:	60f8      	str	r0, [r7, #12]
 80024c8:	60b9      	str	r1, [r7, #8]
 80024ca:	607a      	str	r2, [r7, #4]
 80024cc:	e034      	b.n	8002538 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80024ce:	68f8      	ldr	r0, [r7, #12]
 80024d0:	f000 f83e 	bl	8002550 <I2C_IsAcknowledgeFailed>
 80024d4:	4603      	mov	r3, r0
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d001      	beq.n	80024de <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 80024da:	2301      	movs	r3, #1
 80024dc:	e034      	b.n	8002548 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80024de:	68bb      	ldr	r3, [r7, #8]
 80024e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80024e4:	d028      	beq.n	8002538 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80024e6:	f7fe ffe9 	bl	80014bc <HAL_GetTick>
 80024ea:	4602      	mov	r2, r0
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	1ad3      	subs	r3, r2, r3
 80024f0:	68ba      	ldr	r2, [r7, #8]
 80024f2:	429a      	cmp	r2, r3
 80024f4:	d302      	bcc.n	80024fc <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80024f6:	68bb      	ldr	r3, [r7, #8]
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	d11d      	bne.n	8002538 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80024fc:	68fb      	ldr	r3, [r7, #12]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	695b      	ldr	r3, [r3, #20]
 8002502:	f003 0304 	and.w	r3, r3, #4
 8002506:	2b04      	cmp	r3, #4
 8002508:	d016      	beq.n	8002538 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	2200      	movs	r2, #0
 800250e:	631a      	str	r2, [r3, #48]	; 0x30
 8002510:	68fb      	ldr	r3, [r7, #12]
 8002512:	2220      	movs	r2, #32
 8002514:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	2200      	movs	r2, #0
 800251c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002520:	68fb      	ldr	r3, [r7, #12]
 8002522:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002524:	f043 0220 	orr.w	r2, r3, #32
 8002528:	68fb      	ldr	r3, [r7, #12]
 800252a:	641a      	str	r2, [r3, #64]	; 0x40
 800252c:	68fb      	ldr	r3, [r7, #12]
 800252e:	2200      	movs	r2, #0
 8002530:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002534:	2301      	movs	r3, #1
 8002536:	e007      	b.n	8002548 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	695b      	ldr	r3, [r3, #20]
 800253e:	f003 0304 	and.w	r3, r3, #4
 8002542:	2b04      	cmp	r3, #4
 8002544:	d1c3      	bne.n	80024ce <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002546:	2300      	movs	r3, #0
 8002548:	4618      	mov	r0, r3
 800254a:	3710      	adds	r7, #16
 800254c:	46bd      	mov	sp, r7
 800254e:	bd80      	pop	{r7, pc}

08002550 <I2C_IsAcknowledgeFailed>:
 8002550:	b480      	push	{r7}
 8002552:	b083      	sub	sp, #12
 8002554:	af00      	add	r7, sp, #0
 8002556:	6078      	str	r0, [r7, #4]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	695b      	ldr	r3, [r3, #20]
 800255e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002562:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002566:	d11b      	bne.n	80025a0 <I2C_IsAcknowledgeFailed+0x50>
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002570:	615a      	str	r2, [r3, #20]
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2200      	movs	r2, #0
 8002576:	631a      	str	r2, [r3, #48]	; 0x30
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	2220      	movs	r2, #32
 800257c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	2200      	movs	r2, #0
 8002584:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800258c:	f043 0204 	orr.w	r2, r3, #4
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	641a      	str	r2, [r3, #64]	; 0x40
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	2200      	movs	r2, #0
 8002598:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800259c:	2301      	movs	r3, #1
 800259e:	e000      	b.n	80025a2 <I2C_IsAcknowledgeFailed+0x52>
 80025a0:	2300      	movs	r3, #0
 80025a2:	4618      	mov	r0, r3
 80025a4:	370c      	adds	r7, #12
 80025a6:	46bd      	mov	sp, r7
 80025a8:	bc80      	pop	{r7}
 80025aa:	4770      	bx	lr

080025ac <HAL_RCC_OscConfig>:
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b086      	sub	sp, #24
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	6078      	str	r0, [r7, #4]
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	2b00      	cmp	r3, #0
 80025b8:	d101      	bne.n	80025be <HAL_RCC_OscConfig+0x12>
 80025ba:	2301      	movs	r3, #1
 80025bc:	e26c      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	f003 0301 	and.w	r3, r3, #1
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	f000 8087 	beq.w	80026da <HAL_RCC_OscConfig+0x12e>
 80025cc:	4b92      	ldr	r3, [pc, #584]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80025ce:	685b      	ldr	r3, [r3, #4]
 80025d0:	f003 030c 	and.w	r3, r3, #12
 80025d4:	2b04      	cmp	r3, #4
 80025d6:	d00c      	beq.n	80025f2 <HAL_RCC_OscConfig+0x46>
 80025d8:	4b8f      	ldr	r3, [pc, #572]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80025da:	685b      	ldr	r3, [r3, #4]
 80025dc:	f003 030c 	and.w	r3, r3, #12
 80025e0:	2b08      	cmp	r3, #8
 80025e2:	d112      	bne.n	800260a <HAL_RCC_OscConfig+0x5e>
 80025e4:	4b8c      	ldr	r3, [pc, #560]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80025e6:	685b      	ldr	r3, [r3, #4]
 80025e8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025ec:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80025f0:	d10b      	bne.n	800260a <HAL_RCC_OscConfig+0x5e>
 80025f2:	4b89      	ldr	r3, [pc, #548]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d06c      	beq.n	80026d8 <HAL_RCC_OscConfig+0x12c>
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	2b00      	cmp	r3, #0
 8002604:	d168      	bne.n	80026d8 <HAL_RCC_OscConfig+0x12c>
 8002606:	2301      	movs	r3, #1
 8002608:	e246      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	685b      	ldr	r3, [r3, #4]
 800260e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002612:	d106      	bne.n	8002622 <HAL_RCC_OscConfig+0x76>
 8002614:	4b80      	ldr	r3, [pc, #512]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	4a7f      	ldr	r2, [pc, #508]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800261a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800261e:	6013      	str	r3, [r2, #0]
 8002620:	e02e      	b.n	8002680 <HAL_RCC_OscConfig+0xd4>
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	685b      	ldr	r3, [r3, #4]
 8002626:	2b00      	cmp	r3, #0
 8002628:	d10c      	bne.n	8002644 <HAL_RCC_OscConfig+0x98>
 800262a:	4b7b      	ldr	r3, [pc, #492]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800262c:	681b      	ldr	r3, [r3, #0]
 800262e:	4a7a      	ldr	r2, [pc, #488]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002630:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002634:	6013      	str	r3, [r2, #0]
 8002636:	4b78      	ldr	r3, [pc, #480]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	4a77      	ldr	r2, [pc, #476]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800263c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002640:	6013      	str	r3, [r2, #0]
 8002642:	e01d      	b.n	8002680 <HAL_RCC_OscConfig+0xd4>
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	685b      	ldr	r3, [r3, #4]
 8002648:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800264c:	d10c      	bne.n	8002668 <HAL_RCC_OscConfig+0xbc>
 800264e:	4b72      	ldr	r3, [pc, #456]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	4a71      	ldr	r2, [pc, #452]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002654:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002658:	6013      	str	r3, [r2, #0]
 800265a:	4b6f      	ldr	r3, [pc, #444]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	4a6e      	ldr	r2, [pc, #440]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002660:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002664:	6013      	str	r3, [r2, #0]
 8002666:	e00b      	b.n	8002680 <HAL_RCC_OscConfig+0xd4>
 8002668:	4b6b      	ldr	r3, [pc, #428]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	4a6a      	ldr	r2, [pc, #424]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800266e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002672:	6013      	str	r3, [r2, #0]
 8002674:	4b68      	ldr	r3, [pc, #416]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	4a67      	ldr	r2, [pc, #412]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800267a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800267e:	6013      	str	r3, [r2, #0]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	685b      	ldr	r3, [r3, #4]
 8002684:	2b00      	cmp	r3, #0
 8002686:	d013      	beq.n	80026b0 <HAL_RCC_OscConfig+0x104>
 8002688:	f7fe ff18 	bl	80014bc <HAL_GetTick>
 800268c:	6138      	str	r0, [r7, #16]
 800268e:	e008      	b.n	80026a2 <HAL_RCC_OscConfig+0xf6>
 8002690:	f7fe ff14 	bl	80014bc <HAL_GetTick>
 8002694:	4602      	mov	r2, r0
 8002696:	693b      	ldr	r3, [r7, #16]
 8002698:	1ad3      	subs	r3, r2, r3
 800269a:	2b64      	cmp	r3, #100	; 0x64
 800269c:	d901      	bls.n	80026a2 <HAL_RCC_OscConfig+0xf6>
 800269e:	2303      	movs	r3, #3
 80026a0:	e1fa      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80026a2:	4b5d      	ldr	r3, [pc, #372]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d0f0      	beq.n	8002690 <HAL_RCC_OscConfig+0xe4>
 80026ae:	e014      	b.n	80026da <HAL_RCC_OscConfig+0x12e>
 80026b0:	f7fe ff04 	bl	80014bc <HAL_GetTick>
 80026b4:	6138      	str	r0, [r7, #16]
 80026b6:	e008      	b.n	80026ca <HAL_RCC_OscConfig+0x11e>
 80026b8:	f7fe ff00 	bl	80014bc <HAL_GetTick>
 80026bc:	4602      	mov	r2, r0
 80026be:	693b      	ldr	r3, [r7, #16]
 80026c0:	1ad3      	subs	r3, r2, r3
 80026c2:	2b64      	cmp	r3, #100	; 0x64
 80026c4:	d901      	bls.n	80026ca <HAL_RCC_OscConfig+0x11e>
 80026c6:	2303      	movs	r3, #3
 80026c8:	e1e6      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80026ca:	4b53      	ldr	r3, [pc, #332]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d1f0      	bne.n	80026b8 <HAL_RCC_OscConfig+0x10c>
 80026d6:	e000      	b.n	80026da <HAL_RCC_OscConfig+0x12e>
 80026d8:	bf00      	nop
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	f003 0302 	and.w	r3, r3, #2
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d063      	beq.n	80027ae <HAL_RCC_OscConfig+0x202>
 80026e6:	4b4c      	ldr	r3, [pc, #304]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80026e8:	685b      	ldr	r3, [r3, #4]
 80026ea:	f003 030c 	and.w	r3, r3, #12
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d00b      	beq.n	800270a <HAL_RCC_OscConfig+0x15e>
 80026f2:	4b49      	ldr	r3, [pc, #292]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80026f4:	685b      	ldr	r3, [r3, #4]
 80026f6:	f003 030c 	and.w	r3, r3, #12
 80026fa:	2b08      	cmp	r3, #8
 80026fc:	d11c      	bne.n	8002738 <HAL_RCC_OscConfig+0x18c>
 80026fe:	4b46      	ldr	r3, [pc, #280]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002700:	685b      	ldr	r3, [r3, #4]
 8002702:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002706:	2b00      	cmp	r3, #0
 8002708:	d116      	bne.n	8002738 <HAL_RCC_OscConfig+0x18c>
 800270a:	4b43      	ldr	r3, [pc, #268]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	f003 0302 	and.w	r3, r3, #2
 8002712:	2b00      	cmp	r3, #0
 8002714:	d005      	beq.n	8002722 <HAL_RCC_OscConfig+0x176>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	691b      	ldr	r3, [r3, #16]
 800271a:	2b01      	cmp	r3, #1
 800271c:	d001      	beq.n	8002722 <HAL_RCC_OscConfig+0x176>
 800271e:	2301      	movs	r3, #1
 8002720:	e1ba      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002722:	4b3d      	ldr	r3, [pc, #244]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	695b      	ldr	r3, [r3, #20]
 800272e:	00db      	lsls	r3, r3, #3
 8002730:	4939      	ldr	r1, [pc, #228]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002732:	4313      	orrs	r3, r2
 8002734:	600b      	str	r3, [r1, #0]
 8002736:	e03a      	b.n	80027ae <HAL_RCC_OscConfig+0x202>
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	691b      	ldr	r3, [r3, #16]
 800273c:	2b00      	cmp	r3, #0
 800273e:	d020      	beq.n	8002782 <HAL_RCC_OscConfig+0x1d6>
 8002740:	4b36      	ldr	r3, [pc, #216]	; (800281c <HAL_RCC_OscConfig+0x270>)
 8002742:	2201      	movs	r2, #1
 8002744:	601a      	str	r2, [r3, #0]
 8002746:	f7fe feb9 	bl	80014bc <HAL_GetTick>
 800274a:	6138      	str	r0, [r7, #16]
 800274c:	e008      	b.n	8002760 <HAL_RCC_OscConfig+0x1b4>
 800274e:	f7fe feb5 	bl	80014bc <HAL_GetTick>
 8002752:	4602      	mov	r2, r0
 8002754:	693b      	ldr	r3, [r7, #16]
 8002756:	1ad3      	subs	r3, r2, r3
 8002758:	2b02      	cmp	r3, #2
 800275a:	d901      	bls.n	8002760 <HAL_RCC_OscConfig+0x1b4>
 800275c:	2303      	movs	r3, #3
 800275e:	e19b      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002760:	4b2d      	ldr	r3, [pc, #180]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	f003 0302 	and.w	r3, r3, #2
 8002768:	2b00      	cmp	r3, #0
 800276a:	d0f0      	beq.n	800274e <HAL_RCC_OscConfig+0x1a2>
 800276c:	4b2a      	ldr	r3, [pc, #168]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	695b      	ldr	r3, [r3, #20]
 8002778:	00db      	lsls	r3, r3, #3
 800277a:	4927      	ldr	r1, [pc, #156]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 800277c:	4313      	orrs	r3, r2
 800277e:	600b      	str	r3, [r1, #0]
 8002780:	e015      	b.n	80027ae <HAL_RCC_OscConfig+0x202>
 8002782:	4b26      	ldr	r3, [pc, #152]	; (800281c <HAL_RCC_OscConfig+0x270>)
 8002784:	2200      	movs	r2, #0
 8002786:	601a      	str	r2, [r3, #0]
 8002788:	f7fe fe98 	bl	80014bc <HAL_GetTick>
 800278c:	6138      	str	r0, [r7, #16]
 800278e:	e008      	b.n	80027a2 <HAL_RCC_OscConfig+0x1f6>
 8002790:	f7fe fe94 	bl	80014bc <HAL_GetTick>
 8002794:	4602      	mov	r2, r0
 8002796:	693b      	ldr	r3, [r7, #16]
 8002798:	1ad3      	subs	r3, r2, r3
 800279a:	2b02      	cmp	r3, #2
 800279c:	d901      	bls.n	80027a2 <HAL_RCC_OscConfig+0x1f6>
 800279e:	2303      	movs	r3, #3
 80027a0:	e17a      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80027a2:	4b1d      	ldr	r3, [pc, #116]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	f003 0302 	and.w	r3, r3, #2
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d1f0      	bne.n	8002790 <HAL_RCC_OscConfig+0x1e4>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	f003 0308 	and.w	r3, r3, #8
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d03a      	beq.n	8002830 <HAL_RCC_OscConfig+0x284>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	699b      	ldr	r3, [r3, #24]
 80027be:	2b00      	cmp	r3, #0
 80027c0:	d019      	beq.n	80027f6 <HAL_RCC_OscConfig+0x24a>
 80027c2:	4b17      	ldr	r3, [pc, #92]	; (8002820 <HAL_RCC_OscConfig+0x274>)
 80027c4:	2201      	movs	r2, #1
 80027c6:	601a      	str	r2, [r3, #0]
 80027c8:	f7fe fe78 	bl	80014bc <HAL_GetTick>
 80027cc:	6138      	str	r0, [r7, #16]
 80027ce:	e008      	b.n	80027e2 <HAL_RCC_OscConfig+0x236>
 80027d0:	f7fe fe74 	bl	80014bc <HAL_GetTick>
 80027d4:	4602      	mov	r2, r0
 80027d6:	693b      	ldr	r3, [r7, #16]
 80027d8:	1ad3      	subs	r3, r2, r3
 80027da:	2b02      	cmp	r3, #2
 80027dc:	d901      	bls.n	80027e2 <HAL_RCC_OscConfig+0x236>
 80027de:	2303      	movs	r3, #3
 80027e0:	e15a      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80027e2:	4b0d      	ldr	r3, [pc, #52]	; (8002818 <HAL_RCC_OscConfig+0x26c>)
 80027e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027e6:	f003 0302 	and.w	r3, r3, #2
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d0f0      	beq.n	80027d0 <HAL_RCC_OscConfig+0x224>
 80027ee:	2001      	movs	r0, #1
 80027f0:	f000 facc 	bl	8002d8c <RCC_Delay>
 80027f4:	e01c      	b.n	8002830 <HAL_RCC_OscConfig+0x284>
 80027f6:	4b0a      	ldr	r3, [pc, #40]	; (8002820 <HAL_RCC_OscConfig+0x274>)
 80027f8:	2200      	movs	r2, #0
 80027fa:	601a      	str	r2, [r3, #0]
 80027fc:	f7fe fe5e 	bl	80014bc <HAL_GetTick>
 8002800:	6138      	str	r0, [r7, #16]
 8002802:	e00f      	b.n	8002824 <HAL_RCC_OscConfig+0x278>
 8002804:	f7fe fe5a 	bl	80014bc <HAL_GetTick>
 8002808:	4602      	mov	r2, r0
 800280a:	693b      	ldr	r3, [r7, #16]
 800280c:	1ad3      	subs	r3, r2, r3
 800280e:	2b02      	cmp	r3, #2
 8002810:	d908      	bls.n	8002824 <HAL_RCC_OscConfig+0x278>
 8002812:	2303      	movs	r3, #3
 8002814:	e140      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002816:	bf00      	nop
 8002818:	40021000 	.word	0x40021000
 800281c:	42420000 	.word	0x42420000
 8002820:	42420480 	.word	0x42420480
 8002824:	4b9e      	ldr	r3, [pc, #632]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002826:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002828:	f003 0302 	and.w	r3, r3, #2
 800282c:	2b00      	cmp	r3, #0
 800282e:	d1e9      	bne.n	8002804 <HAL_RCC_OscConfig+0x258>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	f003 0304 	and.w	r3, r3, #4
 8002838:	2b00      	cmp	r3, #0
 800283a:	f000 80a6 	beq.w	800298a <HAL_RCC_OscConfig+0x3de>
 800283e:	2300      	movs	r3, #0
 8002840:	75fb      	strb	r3, [r7, #23]
 8002842:	4b97      	ldr	r3, [pc, #604]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002844:	69db      	ldr	r3, [r3, #28]
 8002846:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800284a:	2b00      	cmp	r3, #0
 800284c:	d10d      	bne.n	800286a <HAL_RCC_OscConfig+0x2be>
 800284e:	4b94      	ldr	r3, [pc, #592]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002850:	69db      	ldr	r3, [r3, #28]
 8002852:	4a93      	ldr	r2, [pc, #588]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002854:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002858:	61d3      	str	r3, [r2, #28]
 800285a:	4b91      	ldr	r3, [pc, #580]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 800285c:	69db      	ldr	r3, [r3, #28]
 800285e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002862:	60bb      	str	r3, [r7, #8]
 8002864:	68bb      	ldr	r3, [r7, #8]
 8002866:	2301      	movs	r3, #1
 8002868:	75fb      	strb	r3, [r7, #23]
 800286a:	4b8e      	ldr	r3, [pc, #568]	; (8002aa4 <HAL_RCC_OscConfig+0x4f8>)
 800286c:	681b      	ldr	r3, [r3, #0]
 800286e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002872:	2b00      	cmp	r3, #0
 8002874:	d118      	bne.n	80028a8 <HAL_RCC_OscConfig+0x2fc>
 8002876:	4b8b      	ldr	r3, [pc, #556]	; (8002aa4 <HAL_RCC_OscConfig+0x4f8>)
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	4a8a      	ldr	r2, [pc, #552]	; (8002aa4 <HAL_RCC_OscConfig+0x4f8>)
 800287c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002880:	6013      	str	r3, [r2, #0]
 8002882:	f7fe fe1b 	bl	80014bc <HAL_GetTick>
 8002886:	6138      	str	r0, [r7, #16]
 8002888:	e008      	b.n	800289c <HAL_RCC_OscConfig+0x2f0>
 800288a:	f7fe fe17 	bl	80014bc <HAL_GetTick>
 800288e:	4602      	mov	r2, r0
 8002890:	693b      	ldr	r3, [r7, #16]
 8002892:	1ad3      	subs	r3, r2, r3
 8002894:	2b64      	cmp	r3, #100	; 0x64
 8002896:	d901      	bls.n	800289c <HAL_RCC_OscConfig+0x2f0>
 8002898:	2303      	movs	r3, #3
 800289a:	e0fd      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 800289c:	4b81      	ldr	r3, [pc, #516]	; (8002aa4 <HAL_RCC_OscConfig+0x4f8>)
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d0f0      	beq.n	800288a <HAL_RCC_OscConfig+0x2de>
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	68db      	ldr	r3, [r3, #12]
 80028ac:	2b01      	cmp	r3, #1
 80028ae:	d106      	bne.n	80028be <HAL_RCC_OscConfig+0x312>
 80028b0:	4b7b      	ldr	r3, [pc, #492]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028b2:	6a1b      	ldr	r3, [r3, #32]
 80028b4:	4a7a      	ldr	r2, [pc, #488]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028b6:	f043 0301 	orr.w	r3, r3, #1
 80028ba:	6213      	str	r3, [r2, #32]
 80028bc:	e02d      	b.n	800291a <HAL_RCC_OscConfig+0x36e>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	68db      	ldr	r3, [r3, #12]
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d10c      	bne.n	80028e0 <HAL_RCC_OscConfig+0x334>
 80028c6:	4b76      	ldr	r3, [pc, #472]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028c8:	6a1b      	ldr	r3, [r3, #32]
 80028ca:	4a75      	ldr	r2, [pc, #468]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028cc:	f023 0301 	bic.w	r3, r3, #1
 80028d0:	6213      	str	r3, [r2, #32]
 80028d2:	4b73      	ldr	r3, [pc, #460]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028d4:	6a1b      	ldr	r3, [r3, #32]
 80028d6:	4a72      	ldr	r2, [pc, #456]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028d8:	f023 0304 	bic.w	r3, r3, #4
 80028dc:	6213      	str	r3, [r2, #32]
 80028de:	e01c      	b.n	800291a <HAL_RCC_OscConfig+0x36e>
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	68db      	ldr	r3, [r3, #12]
 80028e4:	2b05      	cmp	r3, #5
 80028e6:	d10c      	bne.n	8002902 <HAL_RCC_OscConfig+0x356>
 80028e8:	4b6d      	ldr	r3, [pc, #436]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028ea:	6a1b      	ldr	r3, [r3, #32]
 80028ec:	4a6c      	ldr	r2, [pc, #432]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028ee:	f043 0304 	orr.w	r3, r3, #4
 80028f2:	6213      	str	r3, [r2, #32]
 80028f4:	4b6a      	ldr	r3, [pc, #424]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028f6:	6a1b      	ldr	r3, [r3, #32]
 80028f8:	4a69      	ldr	r2, [pc, #420]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80028fa:	f043 0301 	orr.w	r3, r3, #1
 80028fe:	6213      	str	r3, [r2, #32]
 8002900:	e00b      	b.n	800291a <HAL_RCC_OscConfig+0x36e>
 8002902:	4b67      	ldr	r3, [pc, #412]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002904:	6a1b      	ldr	r3, [r3, #32]
 8002906:	4a66      	ldr	r2, [pc, #408]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002908:	f023 0301 	bic.w	r3, r3, #1
 800290c:	6213      	str	r3, [r2, #32]
 800290e:	4b64      	ldr	r3, [pc, #400]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002910:	6a1b      	ldr	r3, [r3, #32]
 8002912:	4a63      	ldr	r2, [pc, #396]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002914:	f023 0304 	bic.w	r3, r3, #4
 8002918:	6213      	str	r3, [r2, #32]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	68db      	ldr	r3, [r3, #12]
 800291e:	2b00      	cmp	r3, #0
 8002920:	d015      	beq.n	800294e <HAL_RCC_OscConfig+0x3a2>
 8002922:	f7fe fdcb 	bl	80014bc <HAL_GetTick>
 8002926:	6138      	str	r0, [r7, #16]
 8002928:	e00a      	b.n	8002940 <HAL_RCC_OscConfig+0x394>
 800292a:	f7fe fdc7 	bl	80014bc <HAL_GetTick>
 800292e:	4602      	mov	r2, r0
 8002930:	693b      	ldr	r3, [r7, #16]
 8002932:	1ad3      	subs	r3, r2, r3
 8002934:	f241 3288 	movw	r2, #5000	; 0x1388
 8002938:	4293      	cmp	r3, r2
 800293a:	d901      	bls.n	8002940 <HAL_RCC_OscConfig+0x394>
 800293c:	2303      	movs	r3, #3
 800293e:	e0ab      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002940:	4b57      	ldr	r3, [pc, #348]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002942:	6a1b      	ldr	r3, [r3, #32]
 8002944:	f003 0302 	and.w	r3, r3, #2
 8002948:	2b00      	cmp	r3, #0
 800294a:	d0ee      	beq.n	800292a <HAL_RCC_OscConfig+0x37e>
 800294c:	e014      	b.n	8002978 <HAL_RCC_OscConfig+0x3cc>
 800294e:	f7fe fdb5 	bl	80014bc <HAL_GetTick>
 8002952:	6138      	str	r0, [r7, #16]
 8002954:	e00a      	b.n	800296c <HAL_RCC_OscConfig+0x3c0>
 8002956:	f7fe fdb1 	bl	80014bc <HAL_GetTick>
 800295a:	4602      	mov	r2, r0
 800295c:	693b      	ldr	r3, [r7, #16]
 800295e:	1ad3      	subs	r3, r2, r3
 8002960:	f241 3288 	movw	r2, #5000	; 0x1388
 8002964:	4293      	cmp	r3, r2
 8002966:	d901      	bls.n	800296c <HAL_RCC_OscConfig+0x3c0>
 8002968:	2303      	movs	r3, #3
 800296a:	e095      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 800296c:	4b4c      	ldr	r3, [pc, #304]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 800296e:	6a1b      	ldr	r3, [r3, #32]
 8002970:	f003 0302 	and.w	r3, r3, #2
 8002974:	2b00      	cmp	r3, #0
 8002976:	d1ee      	bne.n	8002956 <HAL_RCC_OscConfig+0x3aa>
 8002978:	7dfb      	ldrb	r3, [r7, #23]
 800297a:	2b01      	cmp	r3, #1
 800297c:	d105      	bne.n	800298a <HAL_RCC_OscConfig+0x3de>
 800297e:	4b48      	ldr	r3, [pc, #288]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002980:	69db      	ldr	r3, [r3, #28]
 8002982:	4a47      	ldr	r2, [pc, #284]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002984:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002988:	61d3      	str	r3, [r2, #28]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	69db      	ldr	r3, [r3, #28]
 800298e:	2b00      	cmp	r3, #0
 8002990:	f000 8081 	beq.w	8002a96 <HAL_RCC_OscConfig+0x4ea>
 8002994:	4b42      	ldr	r3, [pc, #264]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002996:	685b      	ldr	r3, [r3, #4]
 8002998:	f003 030c 	and.w	r3, r3, #12
 800299c:	2b08      	cmp	r3, #8
 800299e:	d061      	beq.n	8002a64 <HAL_RCC_OscConfig+0x4b8>
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	69db      	ldr	r3, [r3, #28]
 80029a4:	2b02      	cmp	r3, #2
 80029a6:	d146      	bne.n	8002a36 <HAL_RCC_OscConfig+0x48a>
 80029a8:	4b3f      	ldr	r3, [pc, #252]	; (8002aa8 <HAL_RCC_OscConfig+0x4fc>)
 80029aa:	2200      	movs	r2, #0
 80029ac:	601a      	str	r2, [r3, #0]
 80029ae:	f7fe fd85 	bl	80014bc <HAL_GetTick>
 80029b2:	6138      	str	r0, [r7, #16]
 80029b4:	e008      	b.n	80029c8 <HAL_RCC_OscConfig+0x41c>
 80029b6:	f7fe fd81 	bl	80014bc <HAL_GetTick>
 80029ba:	4602      	mov	r2, r0
 80029bc:	693b      	ldr	r3, [r7, #16]
 80029be:	1ad3      	subs	r3, r2, r3
 80029c0:	2b02      	cmp	r3, #2
 80029c2:	d901      	bls.n	80029c8 <HAL_RCC_OscConfig+0x41c>
 80029c4:	2303      	movs	r3, #3
 80029c6:	e067      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 80029c8:	4b35      	ldr	r3, [pc, #212]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80029d0:	2b00      	cmp	r3, #0
 80029d2:	d1f0      	bne.n	80029b6 <HAL_RCC_OscConfig+0x40a>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	6a1b      	ldr	r3, [r3, #32]
 80029d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80029dc:	d108      	bne.n	80029f0 <HAL_RCC_OscConfig+0x444>
 80029de:	4b30      	ldr	r3, [pc, #192]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80029e0:	685b      	ldr	r3, [r3, #4]
 80029e2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	689b      	ldr	r3, [r3, #8]
 80029ea:	492d      	ldr	r1, [pc, #180]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80029ec:	4313      	orrs	r3, r2
 80029ee:	604b      	str	r3, [r1, #4]
 80029f0:	4b2b      	ldr	r3, [pc, #172]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 80029f2:	685b      	ldr	r3, [r3, #4]
 80029f4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	6a19      	ldr	r1, [r3, #32]
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a00:	430b      	orrs	r3, r1
 8002a02:	4927      	ldr	r1, [pc, #156]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002a04:	4313      	orrs	r3, r2
 8002a06:	604b      	str	r3, [r1, #4]
 8002a08:	4b27      	ldr	r3, [pc, #156]	; (8002aa8 <HAL_RCC_OscConfig+0x4fc>)
 8002a0a:	2201      	movs	r2, #1
 8002a0c:	601a      	str	r2, [r3, #0]
 8002a0e:	f7fe fd55 	bl	80014bc <HAL_GetTick>
 8002a12:	6138      	str	r0, [r7, #16]
 8002a14:	e008      	b.n	8002a28 <HAL_RCC_OscConfig+0x47c>
 8002a16:	f7fe fd51 	bl	80014bc <HAL_GetTick>
 8002a1a:	4602      	mov	r2, r0
 8002a1c:	693b      	ldr	r3, [r7, #16]
 8002a1e:	1ad3      	subs	r3, r2, r3
 8002a20:	2b02      	cmp	r3, #2
 8002a22:	d901      	bls.n	8002a28 <HAL_RCC_OscConfig+0x47c>
 8002a24:	2303      	movs	r3, #3
 8002a26:	e037      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002a28:	4b1d      	ldr	r3, [pc, #116]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	d0f0      	beq.n	8002a16 <HAL_RCC_OscConfig+0x46a>
 8002a34:	e02f      	b.n	8002a96 <HAL_RCC_OscConfig+0x4ea>
 8002a36:	4b1c      	ldr	r3, [pc, #112]	; (8002aa8 <HAL_RCC_OscConfig+0x4fc>)
 8002a38:	2200      	movs	r2, #0
 8002a3a:	601a      	str	r2, [r3, #0]
 8002a3c:	f7fe fd3e 	bl	80014bc <HAL_GetTick>
 8002a40:	6138      	str	r0, [r7, #16]
 8002a42:	e008      	b.n	8002a56 <HAL_RCC_OscConfig+0x4aa>
 8002a44:	f7fe fd3a 	bl	80014bc <HAL_GetTick>
 8002a48:	4602      	mov	r2, r0
 8002a4a:	693b      	ldr	r3, [r7, #16]
 8002a4c:	1ad3      	subs	r3, r2, r3
 8002a4e:	2b02      	cmp	r3, #2
 8002a50:	d901      	bls.n	8002a56 <HAL_RCC_OscConfig+0x4aa>
 8002a52:	2303      	movs	r3, #3
 8002a54:	e020      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002a56:	4b12      	ldr	r3, [pc, #72]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d1f0      	bne.n	8002a44 <HAL_RCC_OscConfig+0x498>
 8002a62:	e018      	b.n	8002a96 <HAL_RCC_OscConfig+0x4ea>
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	69db      	ldr	r3, [r3, #28]
 8002a68:	2b01      	cmp	r3, #1
 8002a6a:	d101      	bne.n	8002a70 <HAL_RCC_OscConfig+0x4c4>
 8002a6c:	2301      	movs	r3, #1
 8002a6e:	e013      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002a70:	4b0b      	ldr	r3, [pc, #44]	; (8002aa0 <HAL_RCC_OscConfig+0x4f4>)
 8002a72:	685b      	ldr	r3, [r3, #4]
 8002a74:	60fb      	str	r3, [r7, #12]
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	6a1b      	ldr	r3, [r3, #32]
 8002a80:	429a      	cmp	r2, r3
 8002a82:	d106      	bne.n	8002a92 <HAL_RCC_OscConfig+0x4e6>
 8002a84:	68fb      	ldr	r3, [r7, #12]
 8002a86:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a8e:	429a      	cmp	r2, r3
 8002a90:	d001      	beq.n	8002a96 <HAL_RCC_OscConfig+0x4ea>
 8002a92:	2301      	movs	r3, #1
 8002a94:	e000      	b.n	8002a98 <HAL_RCC_OscConfig+0x4ec>
 8002a96:	2300      	movs	r3, #0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	3718      	adds	r7, #24
 8002a9c:	46bd      	mov	sp, r7
 8002a9e:	bd80      	pop	{r7, pc}
 8002aa0:	40021000 	.word	0x40021000
 8002aa4:	40007000 	.word	0x40007000
 8002aa8:	42420060 	.word	0x42420060

08002aac <HAL_RCC_ClockConfig>:
 8002aac:	b580      	push	{r7, lr}
 8002aae:	b084      	sub	sp, #16
 8002ab0:	af00      	add	r7, sp, #0
 8002ab2:	6078      	str	r0, [r7, #4]
 8002ab4:	6039      	str	r1, [r7, #0]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d101      	bne.n	8002ac0 <HAL_RCC_ClockConfig+0x14>
 8002abc:	2301      	movs	r3, #1
 8002abe:	e0d0      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002ac0:	4b6a      	ldr	r3, [pc, #424]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	f003 0307 	and.w	r3, r3, #7
 8002ac8:	683a      	ldr	r2, [r7, #0]
 8002aca:	429a      	cmp	r2, r3
 8002acc:	d910      	bls.n	8002af0 <HAL_RCC_ClockConfig+0x44>
 8002ace:	4b67      	ldr	r3, [pc, #412]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	f023 0207 	bic.w	r2, r3, #7
 8002ad6:	4965      	ldr	r1, [pc, #404]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	4313      	orrs	r3, r2
 8002adc:	600b      	str	r3, [r1, #0]
 8002ade:	4b63      	ldr	r3, [pc, #396]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	f003 0307 	and.w	r3, r3, #7
 8002ae6:	683a      	ldr	r2, [r7, #0]
 8002ae8:	429a      	cmp	r2, r3
 8002aea:	d001      	beq.n	8002af0 <HAL_RCC_ClockConfig+0x44>
 8002aec:	2301      	movs	r3, #1
 8002aee:	e0b8      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f003 0302 	and.w	r3, r3, #2
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d020      	beq.n	8002b3e <HAL_RCC_ClockConfig+0x92>
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	f003 0304 	and.w	r3, r3, #4
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d005      	beq.n	8002b14 <HAL_RCC_ClockConfig+0x68>
 8002b08:	4b59      	ldr	r3, [pc, #356]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b0a:	685b      	ldr	r3, [r3, #4]
 8002b0c:	4a58      	ldr	r2, [pc, #352]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b0e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002b12:	6053      	str	r3, [r2, #4]
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	f003 0308 	and.w	r3, r3, #8
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	d005      	beq.n	8002b2c <HAL_RCC_ClockConfig+0x80>
 8002b20:	4b53      	ldr	r3, [pc, #332]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b22:	685b      	ldr	r3, [r3, #4]
 8002b24:	4a52      	ldr	r2, [pc, #328]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b26:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002b2a:	6053      	str	r3, [r2, #4]
 8002b2c:	4b50      	ldr	r3, [pc, #320]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b2e:	685b      	ldr	r3, [r3, #4]
 8002b30:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	689b      	ldr	r3, [r3, #8]
 8002b38:	494d      	ldr	r1, [pc, #308]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b3a:	4313      	orrs	r3, r2
 8002b3c:	604b      	str	r3, [r1, #4]
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	f003 0301 	and.w	r3, r3, #1
 8002b46:	2b00      	cmp	r3, #0
 8002b48:	d040      	beq.n	8002bcc <HAL_RCC_ClockConfig+0x120>
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	685b      	ldr	r3, [r3, #4]
 8002b4e:	2b01      	cmp	r3, #1
 8002b50:	d107      	bne.n	8002b62 <HAL_RCC_ClockConfig+0xb6>
 8002b52:	4b47      	ldr	r3, [pc, #284]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d115      	bne.n	8002b8a <HAL_RCC_ClockConfig+0xde>
 8002b5e:	2301      	movs	r3, #1
 8002b60:	e07f      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	685b      	ldr	r3, [r3, #4]
 8002b66:	2b02      	cmp	r3, #2
 8002b68:	d107      	bne.n	8002b7a <HAL_RCC_ClockConfig+0xce>
 8002b6a:	4b41      	ldr	r3, [pc, #260]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d109      	bne.n	8002b8a <HAL_RCC_ClockConfig+0xde>
 8002b76:	2301      	movs	r3, #1
 8002b78:	e073      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002b7a:	4b3d      	ldr	r3, [pc, #244]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	f003 0302 	and.w	r3, r3, #2
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d101      	bne.n	8002b8a <HAL_RCC_ClockConfig+0xde>
 8002b86:	2301      	movs	r3, #1
 8002b88:	e06b      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002b8a:	4b39      	ldr	r3, [pc, #228]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b8c:	685b      	ldr	r3, [r3, #4]
 8002b8e:	f023 0203 	bic.w	r2, r3, #3
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	685b      	ldr	r3, [r3, #4]
 8002b96:	4936      	ldr	r1, [pc, #216]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002b98:	4313      	orrs	r3, r2
 8002b9a:	604b      	str	r3, [r1, #4]
 8002b9c:	f7fe fc8e 	bl	80014bc <HAL_GetTick>
 8002ba0:	60f8      	str	r0, [r7, #12]
 8002ba2:	e00a      	b.n	8002bba <HAL_RCC_ClockConfig+0x10e>
 8002ba4:	f7fe fc8a 	bl	80014bc <HAL_GetTick>
 8002ba8:	4602      	mov	r2, r0
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	1ad3      	subs	r3, r2, r3
 8002bae:	f241 3288 	movw	r2, #5000	; 0x1388
 8002bb2:	4293      	cmp	r3, r2
 8002bb4:	d901      	bls.n	8002bba <HAL_RCC_ClockConfig+0x10e>
 8002bb6:	2303      	movs	r3, #3
 8002bb8:	e053      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002bba:	4b2d      	ldr	r3, [pc, #180]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002bbc:	685b      	ldr	r3, [r3, #4]
 8002bbe:	f003 020c 	and.w	r2, r3, #12
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	685b      	ldr	r3, [r3, #4]
 8002bc6:	009b      	lsls	r3, r3, #2
 8002bc8:	429a      	cmp	r2, r3
 8002bca:	d1eb      	bne.n	8002ba4 <HAL_RCC_ClockConfig+0xf8>
 8002bcc:	4b27      	ldr	r3, [pc, #156]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	f003 0307 	and.w	r3, r3, #7
 8002bd4:	683a      	ldr	r2, [r7, #0]
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	d210      	bcs.n	8002bfc <HAL_RCC_ClockConfig+0x150>
 8002bda:	4b24      	ldr	r3, [pc, #144]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	f023 0207 	bic.w	r2, r3, #7
 8002be2:	4922      	ldr	r1, [pc, #136]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002be4:	683b      	ldr	r3, [r7, #0]
 8002be6:	4313      	orrs	r3, r2
 8002be8:	600b      	str	r3, [r1, #0]
 8002bea:	4b20      	ldr	r3, [pc, #128]	; (8002c6c <HAL_RCC_ClockConfig+0x1c0>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f003 0307 	and.w	r3, r3, #7
 8002bf2:	683a      	ldr	r2, [r7, #0]
 8002bf4:	429a      	cmp	r2, r3
 8002bf6:	d001      	beq.n	8002bfc <HAL_RCC_ClockConfig+0x150>
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	e032      	b.n	8002c62 <HAL_RCC_ClockConfig+0x1b6>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	f003 0304 	and.w	r3, r3, #4
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d008      	beq.n	8002c1a <HAL_RCC_ClockConfig+0x16e>
 8002c08:	4b19      	ldr	r3, [pc, #100]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002c0a:	685b      	ldr	r3, [r3, #4]
 8002c0c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	68db      	ldr	r3, [r3, #12]
 8002c14:	4916      	ldr	r1, [pc, #88]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002c16:	4313      	orrs	r3, r2
 8002c18:	604b      	str	r3, [r1, #4]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	f003 0308 	and.w	r3, r3, #8
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d009      	beq.n	8002c3a <HAL_RCC_ClockConfig+0x18e>
 8002c26:	4b12      	ldr	r3, [pc, #72]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002c28:	685b      	ldr	r3, [r3, #4]
 8002c2a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	691b      	ldr	r3, [r3, #16]
 8002c32:	00db      	lsls	r3, r3, #3
 8002c34:	490e      	ldr	r1, [pc, #56]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002c36:	4313      	orrs	r3, r2
 8002c38:	604b      	str	r3, [r1, #4]
 8002c3a:	f000 f821 	bl	8002c80 <HAL_RCC_GetSysClockFreq>
 8002c3e:	4602      	mov	r2, r0
 8002c40:	4b0b      	ldr	r3, [pc, #44]	; (8002c70 <HAL_RCC_ClockConfig+0x1c4>)
 8002c42:	685b      	ldr	r3, [r3, #4]
 8002c44:	091b      	lsrs	r3, r3, #4
 8002c46:	f003 030f 	and.w	r3, r3, #15
 8002c4a:	490a      	ldr	r1, [pc, #40]	; (8002c74 <HAL_RCC_ClockConfig+0x1c8>)
 8002c4c:	5ccb      	ldrb	r3, [r1, r3]
 8002c4e:	fa22 f303 	lsr.w	r3, r2, r3
 8002c52:	4a09      	ldr	r2, [pc, #36]	; (8002c78 <HAL_RCC_ClockConfig+0x1cc>)
 8002c54:	6013      	str	r3, [r2, #0]
 8002c56:	4b09      	ldr	r3, [pc, #36]	; (8002c7c <HAL_RCC_ClockConfig+0x1d0>)
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	4618      	mov	r0, r3
 8002c5c:	f7fe fbec 	bl	8001438 <HAL_InitTick>
 8002c60:	2300      	movs	r3, #0
 8002c62:	4618      	mov	r0, r3
 8002c64:	3710      	adds	r7, #16
 8002c66:	46bd      	mov	sp, r7
 8002c68:	bd80      	pop	{r7, pc}
 8002c6a:	bf00      	nop
 8002c6c:	40022000 	.word	0x40022000
 8002c70:	40021000 	.word	0x40021000
 8002c74:	0800408c 	.word	0x0800408c
 8002c78:	20000020 	.word	0x20000020
 8002c7c:	20000024 	.word	0x20000024

08002c80 <HAL_RCC_GetSysClockFreq>:
 8002c80:	b480      	push	{r7}
 8002c82:	b087      	sub	sp, #28
 8002c84:	af00      	add	r7, sp, #0
 8002c86:	2300      	movs	r3, #0
 8002c88:	60fb      	str	r3, [r7, #12]
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	60bb      	str	r3, [r7, #8]
 8002c8e:	2300      	movs	r3, #0
 8002c90:	617b      	str	r3, [r7, #20]
 8002c92:	2300      	movs	r3, #0
 8002c94:	607b      	str	r3, [r7, #4]
 8002c96:	2300      	movs	r3, #0
 8002c98:	613b      	str	r3, [r7, #16]
 8002c9a:	4b1e      	ldr	r3, [pc, #120]	; (8002d14 <HAL_RCC_GetSysClockFreq+0x94>)
 8002c9c:	685b      	ldr	r3, [r3, #4]
 8002c9e:	60fb      	str	r3, [r7, #12]
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	f003 030c 	and.w	r3, r3, #12
 8002ca6:	2b04      	cmp	r3, #4
 8002ca8:	d002      	beq.n	8002cb0 <HAL_RCC_GetSysClockFreq+0x30>
 8002caa:	2b08      	cmp	r3, #8
 8002cac:	d003      	beq.n	8002cb6 <HAL_RCC_GetSysClockFreq+0x36>
 8002cae:	e027      	b.n	8002d00 <HAL_RCC_GetSysClockFreq+0x80>
 8002cb0:	4b19      	ldr	r3, [pc, #100]	; (8002d18 <HAL_RCC_GetSysClockFreq+0x98>)
 8002cb2:	613b      	str	r3, [r7, #16]
 8002cb4:	e027      	b.n	8002d06 <HAL_RCC_GetSysClockFreq+0x86>
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	0c9b      	lsrs	r3, r3, #18
 8002cba:	f003 030f 	and.w	r3, r3, #15
 8002cbe:	4a17      	ldr	r2, [pc, #92]	; (8002d1c <HAL_RCC_GetSysClockFreq+0x9c>)
 8002cc0:	5cd3      	ldrb	r3, [r2, r3]
 8002cc2:	607b      	str	r3, [r7, #4]
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d010      	beq.n	8002cf0 <HAL_RCC_GetSysClockFreq+0x70>
 8002cce:	4b11      	ldr	r3, [pc, #68]	; (8002d14 <HAL_RCC_GetSysClockFreq+0x94>)
 8002cd0:	685b      	ldr	r3, [r3, #4]
 8002cd2:	0c5b      	lsrs	r3, r3, #17
 8002cd4:	f003 0301 	and.w	r3, r3, #1
 8002cd8:	4a11      	ldr	r2, [pc, #68]	; (8002d20 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002cda:	5cd3      	ldrb	r3, [r2, r3]
 8002cdc:	60bb      	str	r3, [r7, #8]
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	4a0d      	ldr	r2, [pc, #52]	; (8002d18 <HAL_RCC_GetSysClockFreq+0x98>)
 8002ce2:	fb02 f203 	mul.w	r2, r2, r3
 8002ce6:	68bb      	ldr	r3, [r7, #8]
 8002ce8:	fbb2 f3f3 	udiv	r3, r2, r3
 8002cec:	617b      	str	r3, [r7, #20]
 8002cee:	e004      	b.n	8002cfa <HAL_RCC_GetSysClockFreq+0x7a>
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	4a0c      	ldr	r2, [pc, #48]	; (8002d24 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002cf4:	fb02 f303 	mul.w	r3, r2, r3
 8002cf8:	617b      	str	r3, [r7, #20]
 8002cfa:	697b      	ldr	r3, [r7, #20]
 8002cfc:	613b      	str	r3, [r7, #16]
 8002cfe:	e002      	b.n	8002d06 <HAL_RCC_GetSysClockFreq+0x86>
 8002d00:	4b05      	ldr	r3, [pc, #20]	; (8002d18 <HAL_RCC_GetSysClockFreq+0x98>)
 8002d02:	613b      	str	r3, [r7, #16]
 8002d04:	bf00      	nop
 8002d06:	693b      	ldr	r3, [r7, #16]
 8002d08:	4618      	mov	r0, r3
 8002d0a:	371c      	adds	r7, #28
 8002d0c:	46bd      	mov	sp, r7
 8002d0e:	bc80      	pop	{r7}
 8002d10:	4770      	bx	lr
 8002d12:	bf00      	nop
 8002d14:	40021000 	.word	0x40021000
 8002d18:	007a1200 	.word	0x007a1200
 8002d1c:	080040a4 	.word	0x080040a4
 8002d20:	080040b4 	.word	0x080040b4
 8002d24:	003d0900 	.word	0x003d0900

08002d28 <HAL_RCC_GetHCLKFreq>:
 8002d28:	b480      	push	{r7}
 8002d2a:	af00      	add	r7, sp, #0
 8002d2c:	4b02      	ldr	r3, [pc, #8]	; (8002d38 <HAL_RCC_GetHCLKFreq+0x10>)
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	4618      	mov	r0, r3
 8002d32:	46bd      	mov	sp, r7
 8002d34:	bc80      	pop	{r7}
 8002d36:	4770      	bx	lr
 8002d38:	20000020 	.word	0x20000020

08002d3c <HAL_RCC_GetPCLK1Freq>:
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	af00      	add	r7, sp, #0
 8002d40:	f7ff fff2 	bl	8002d28 <HAL_RCC_GetHCLKFreq>
 8002d44:	4602      	mov	r2, r0
 8002d46:	4b05      	ldr	r3, [pc, #20]	; (8002d5c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002d48:	685b      	ldr	r3, [r3, #4]
 8002d4a:	0a1b      	lsrs	r3, r3, #8
 8002d4c:	f003 0307 	and.w	r3, r3, #7
 8002d50:	4903      	ldr	r1, [pc, #12]	; (8002d60 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002d52:	5ccb      	ldrb	r3, [r1, r3]
 8002d54:	fa22 f303 	lsr.w	r3, r2, r3
 8002d58:	4618      	mov	r0, r3
 8002d5a:	bd80      	pop	{r7, pc}
 8002d5c:	40021000 	.word	0x40021000
 8002d60:	0800409c 	.word	0x0800409c

08002d64 <HAL_RCC_GetPCLK2Freq>:
 8002d64:	b580      	push	{r7, lr}
 8002d66:	af00      	add	r7, sp, #0
 8002d68:	f7ff ffde 	bl	8002d28 <HAL_RCC_GetHCLKFreq>
 8002d6c:	4602      	mov	r2, r0
 8002d6e:	4b05      	ldr	r3, [pc, #20]	; (8002d84 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002d70:	685b      	ldr	r3, [r3, #4]
 8002d72:	0adb      	lsrs	r3, r3, #11
 8002d74:	f003 0307 	and.w	r3, r3, #7
 8002d78:	4903      	ldr	r1, [pc, #12]	; (8002d88 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002d7a:	5ccb      	ldrb	r3, [r1, r3]
 8002d7c:	fa22 f303 	lsr.w	r3, r2, r3
 8002d80:	4618      	mov	r0, r3
 8002d82:	bd80      	pop	{r7, pc}
 8002d84:	40021000 	.word	0x40021000
 8002d88:	0800409c 	.word	0x0800409c

08002d8c <RCC_Delay>:
 8002d8c:	b480      	push	{r7}
 8002d8e:	b085      	sub	sp, #20
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	6078      	str	r0, [r7, #4]
 8002d94:	4b0a      	ldr	r3, [pc, #40]	; (8002dc0 <RCC_Delay+0x34>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	4a0a      	ldr	r2, [pc, #40]	; (8002dc4 <RCC_Delay+0x38>)
 8002d9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d9e:	0a5b      	lsrs	r3, r3, #9
 8002da0:	687a      	ldr	r2, [r7, #4]
 8002da2:	fb02 f303 	mul.w	r3, r2, r3
 8002da6:	60fb      	str	r3, [r7, #12]
 8002da8:	bf00      	nop
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	1e5a      	subs	r2, r3, #1
 8002dae:	60fa      	str	r2, [r7, #12]
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d1f9      	bne.n	8002da8 <RCC_Delay+0x1c>
 8002db4:	bf00      	nop
 8002db6:	bf00      	nop
 8002db8:	3714      	adds	r7, #20
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	bc80      	pop	{r7}
 8002dbe:	4770      	bx	lr
 8002dc0:	20000020 	.word	0x20000020
 8002dc4:	10624dd3 	.word	0x10624dd3

08002dc8 <HAL_TIM_Base_Init>:
 8002dc8:	b580      	push	{r7, lr}
 8002dca:	b082      	sub	sp, #8
 8002dcc:	af00      	add	r7, sp, #0
 8002dce:	6078      	str	r0, [r7, #4]
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d101      	bne.n	8002dda <HAL_TIM_Base_Init+0x12>
 8002dd6:	2301      	movs	r3, #1
 8002dd8:	e041      	b.n	8002e5e <HAL_TIM_Base_Init+0x96>
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002de0:	b2db      	uxtb	r3, r3
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	d106      	bne.n	8002df4 <HAL_TIM_Base_Init+0x2c>
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	2200      	movs	r2, #0
 8002dea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002dee:	6878      	ldr	r0, [r7, #4]
 8002df0:	f7fe fa32 	bl	8001258 <HAL_TIM_Base_MspInit>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	2202      	movs	r2, #2
 8002df8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681a      	ldr	r2, [r3, #0]
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	3304      	adds	r3, #4
 8002e04:	4619      	mov	r1, r3
 8002e06:	4610      	mov	r0, r2
 8002e08:	f000 fa5c 	bl	80032c4 <TIM_Base_SetConfig>
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	2201      	movs	r2, #1
 8002e10:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	2201      	movs	r2, #1
 8002e18:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	2201      	movs	r2, #1
 8002e20:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	2201      	movs	r2, #1
 8002e28:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	2201      	movs	r2, #1
 8002e30:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	2201      	movs	r2, #1
 8002e38:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	2201      	movs	r2, #1
 8002e40:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	2201      	movs	r2, #1
 8002e48:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	2201      	movs	r2, #1
 8002e50:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	2201      	movs	r2, #1
 8002e58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	4618      	mov	r0, r3
 8002e60:	3708      	adds	r7, #8
 8002e62:	46bd      	mov	sp, r7
 8002e64:	bd80      	pop	{r7, pc}
	...

08002e68 <HAL_TIM_Base_Start_IT>:
 8002e68:	b480      	push	{r7}
 8002e6a:	b085      	sub	sp, #20
 8002e6c:	af00      	add	r7, sp, #0
 8002e6e:	6078      	str	r0, [r7, #4]
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002e76:	b2db      	uxtb	r3, r3
 8002e78:	2b01      	cmp	r3, #1
 8002e7a:	d001      	beq.n	8002e80 <HAL_TIM_Base_Start_IT+0x18>
 8002e7c:	2301      	movs	r3, #1
 8002e7e:	e03a      	b.n	8002ef6 <HAL_TIM_Base_Start_IT+0x8e>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	2202      	movs	r2, #2
 8002e84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	68da      	ldr	r2, [r3, #12]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	f042 0201 	orr.w	r2, r2, #1
 8002e96:	60da      	str	r2, [r3, #12]
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	4a18      	ldr	r2, [pc, #96]	; (8002f00 <HAL_TIM_Base_Start_IT+0x98>)
 8002e9e:	4293      	cmp	r3, r2
 8002ea0:	d00e      	beq.n	8002ec0 <HAL_TIM_Base_Start_IT+0x58>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002eaa:	d009      	beq.n	8002ec0 <HAL_TIM_Base_Start_IT+0x58>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	4a14      	ldr	r2, [pc, #80]	; (8002f04 <HAL_TIM_Base_Start_IT+0x9c>)
 8002eb2:	4293      	cmp	r3, r2
 8002eb4:	d004      	beq.n	8002ec0 <HAL_TIM_Base_Start_IT+0x58>
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	4a13      	ldr	r2, [pc, #76]	; (8002f08 <HAL_TIM_Base_Start_IT+0xa0>)
 8002ebc:	4293      	cmp	r3, r2
 8002ebe:	d111      	bne.n	8002ee4 <HAL_TIM_Base_Start_IT+0x7c>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	689b      	ldr	r3, [r3, #8]
 8002ec6:	f003 0307 	and.w	r3, r3, #7
 8002eca:	60fb      	str	r3, [r7, #12]
 8002ecc:	68fb      	ldr	r3, [r7, #12]
 8002ece:	2b06      	cmp	r3, #6
 8002ed0:	d010      	beq.n	8002ef4 <HAL_TIM_Base_Start_IT+0x8c>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	681a      	ldr	r2, [r3, #0]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	f042 0201 	orr.w	r2, r2, #1
 8002ee0:	601a      	str	r2, [r3, #0]
 8002ee2:	e007      	b.n	8002ef4 <HAL_TIM_Base_Start_IT+0x8c>
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	681a      	ldr	r2, [r3, #0]
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	f042 0201 	orr.w	r2, r2, #1
 8002ef2:	601a      	str	r2, [r3, #0]
 8002ef4:	2300      	movs	r3, #0
 8002ef6:	4618      	mov	r0, r3
 8002ef8:	3714      	adds	r7, #20
 8002efa:	46bd      	mov	sp, r7
 8002efc:	bc80      	pop	{r7}
 8002efe:	4770      	bx	lr
 8002f00:	40012c00 	.word	0x40012c00
 8002f04:	40000400 	.word	0x40000400
 8002f08:	40000800 	.word	0x40000800

08002f0c <HAL_TIM_IRQHandler>:
 8002f0c:	b580      	push	{r7, lr}
 8002f0e:	b084      	sub	sp, #16
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	6078      	str	r0, [r7, #4]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	68db      	ldr	r3, [r3, #12]
 8002f1a:	60fb      	str	r3, [r7, #12]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	691b      	ldr	r3, [r3, #16]
 8002f22:	60bb      	str	r3, [r7, #8]
 8002f24:	68bb      	ldr	r3, [r7, #8]
 8002f26:	f003 0302 	and.w	r3, r3, #2
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d020      	beq.n	8002f70 <HAL_TIM_IRQHandler+0x64>
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	f003 0302 	and.w	r3, r3, #2
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d01b      	beq.n	8002f70 <HAL_TIM_IRQHandler+0x64>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	f06f 0202 	mvn.w	r2, #2
 8002f40:	611a      	str	r2, [r3, #16]
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	2201      	movs	r2, #1
 8002f46:	771a      	strb	r2, [r3, #28]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	699b      	ldr	r3, [r3, #24]
 8002f4e:	f003 0303 	and.w	r3, r3, #3
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d003      	beq.n	8002f5e <HAL_TIM_IRQHandler+0x52>
 8002f56:	6878      	ldr	r0, [r7, #4]
 8002f58:	f000 f998 	bl	800328c <HAL_TIM_IC_CaptureCallback>
 8002f5c:	e005      	b.n	8002f6a <HAL_TIM_IRQHandler+0x5e>
 8002f5e:	6878      	ldr	r0, [r7, #4]
 8002f60:	f000 f98b 	bl	800327a <HAL_TIM_OC_DelayElapsedCallback>
 8002f64:	6878      	ldr	r0, [r7, #4]
 8002f66:	f000 f99a 	bl	800329e <HAL_TIM_PWM_PulseFinishedCallback>
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	771a      	strb	r2, [r3, #28]
 8002f70:	68bb      	ldr	r3, [r7, #8]
 8002f72:	f003 0304 	and.w	r3, r3, #4
 8002f76:	2b00      	cmp	r3, #0
 8002f78:	d020      	beq.n	8002fbc <HAL_TIM_IRQHandler+0xb0>
 8002f7a:	68fb      	ldr	r3, [r7, #12]
 8002f7c:	f003 0304 	and.w	r3, r3, #4
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d01b      	beq.n	8002fbc <HAL_TIM_IRQHandler+0xb0>
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	f06f 0204 	mvn.w	r2, #4
 8002f8c:	611a      	str	r2, [r3, #16]
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	2202      	movs	r2, #2
 8002f92:	771a      	strb	r2, [r3, #28]
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	699b      	ldr	r3, [r3, #24]
 8002f9a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d003      	beq.n	8002faa <HAL_TIM_IRQHandler+0x9e>
 8002fa2:	6878      	ldr	r0, [r7, #4]
 8002fa4:	f000 f972 	bl	800328c <HAL_TIM_IC_CaptureCallback>
 8002fa8:	e005      	b.n	8002fb6 <HAL_TIM_IRQHandler+0xaa>
 8002faa:	6878      	ldr	r0, [r7, #4]
 8002fac:	f000 f965 	bl	800327a <HAL_TIM_OC_DelayElapsedCallback>
 8002fb0:	6878      	ldr	r0, [r7, #4]
 8002fb2:	f000 f974 	bl	800329e <HAL_TIM_PWM_PulseFinishedCallback>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	2200      	movs	r2, #0
 8002fba:	771a      	strb	r2, [r3, #28]
 8002fbc:	68bb      	ldr	r3, [r7, #8]
 8002fbe:	f003 0308 	and.w	r3, r3, #8
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d020      	beq.n	8003008 <HAL_TIM_IRQHandler+0xfc>
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	f003 0308 	and.w	r3, r3, #8
 8002fcc:	2b00      	cmp	r3, #0
 8002fce:	d01b      	beq.n	8003008 <HAL_TIM_IRQHandler+0xfc>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	f06f 0208 	mvn.w	r2, #8
 8002fd8:	611a      	str	r2, [r3, #16]
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	2204      	movs	r2, #4
 8002fde:	771a      	strb	r2, [r3, #28]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	69db      	ldr	r3, [r3, #28]
 8002fe6:	f003 0303 	and.w	r3, r3, #3
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d003      	beq.n	8002ff6 <HAL_TIM_IRQHandler+0xea>
 8002fee:	6878      	ldr	r0, [r7, #4]
 8002ff0:	f000 f94c 	bl	800328c <HAL_TIM_IC_CaptureCallback>
 8002ff4:	e005      	b.n	8003002 <HAL_TIM_IRQHandler+0xf6>
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	f000 f93f 	bl	800327a <HAL_TIM_OC_DelayElapsedCallback>
 8002ffc:	6878      	ldr	r0, [r7, #4]
 8002ffe:	f000 f94e 	bl	800329e <HAL_TIM_PWM_PulseFinishedCallback>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	2200      	movs	r2, #0
 8003006:	771a      	strb	r2, [r3, #28]
 8003008:	68bb      	ldr	r3, [r7, #8]
 800300a:	f003 0310 	and.w	r3, r3, #16
 800300e:	2b00      	cmp	r3, #0
 8003010:	d020      	beq.n	8003054 <HAL_TIM_IRQHandler+0x148>
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	f003 0310 	and.w	r3, r3, #16
 8003018:	2b00      	cmp	r3, #0
 800301a:	d01b      	beq.n	8003054 <HAL_TIM_IRQHandler+0x148>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	f06f 0210 	mvn.w	r2, #16
 8003024:	611a      	str	r2, [r3, #16]
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	2208      	movs	r2, #8
 800302a:	771a      	strb	r2, [r3, #28]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	69db      	ldr	r3, [r3, #28]
 8003032:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003036:	2b00      	cmp	r3, #0
 8003038:	d003      	beq.n	8003042 <HAL_TIM_IRQHandler+0x136>
 800303a:	6878      	ldr	r0, [r7, #4]
 800303c:	f000 f926 	bl	800328c <HAL_TIM_IC_CaptureCallback>
 8003040:	e005      	b.n	800304e <HAL_TIM_IRQHandler+0x142>
 8003042:	6878      	ldr	r0, [r7, #4]
 8003044:	f000 f919 	bl	800327a <HAL_TIM_OC_DelayElapsedCallback>
 8003048:	6878      	ldr	r0, [r7, #4]
 800304a:	f000 f928 	bl	800329e <HAL_TIM_PWM_PulseFinishedCallback>
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	2200      	movs	r2, #0
 8003052:	771a      	strb	r2, [r3, #28]
 8003054:	68bb      	ldr	r3, [r7, #8]
 8003056:	f003 0301 	and.w	r3, r3, #1
 800305a:	2b00      	cmp	r3, #0
 800305c:	d00c      	beq.n	8003078 <HAL_TIM_IRQHandler+0x16c>
 800305e:	68fb      	ldr	r3, [r7, #12]
 8003060:	f003 0301 	and.w	r3, r3, #1
 8003064:	2b00      	cmp	r3, #0
 8003066:	d007      	beq.n	8003078 <HAL_TIM_IRQHandler+0x16c>
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	f06f 0201 	mvn.w	r2, #1
 8003070:	611a      	str	r2, [r3, #16]
 8003072:	6878      	ldr	r0, [r7, #4]
 8003074:	f7fd feb6 	bl	8000de4 <HAL_TIM_PeriodElapsedCallback>
 8003078:	68bb      	ldr	r3, [r7, #8]
 800307a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800307e:	2b00      	cmp	r3, #0
 8003080:	d00c      	beq.n	800309c <HAL_TIM_IRQHandler+0x190>
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003088:	2b00      	cmp	r3, #0
 800308a:	d007      	beq.n	800309c <HAL_TIM_IRQHandler+0x190>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003094:	611a      	str	r2, [r3, #16]
 8003096:	6878      	ldr	r0, [r7, #4]
 8003098:	f000 fa7f 	bl	800359a <HAL_TIMEx_BreakCallback>
 800309c:	68bb      	ldr	r3, [r7, #8]
 800309e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80030a2:	2b00      	cmp	r3, #0
 80030a4:	d00c      	beq.n	80030c0 <HAL_TIM_IRQHandler+0x1b4>
 80030a6:	68fb      	ldr	r3, [r7, #12]
 80030a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d007      	beq.n	80030c0 <HAL_TIM_IRQHandler+0x1b4>
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80030b8:	611a      	str	r2, [r3, #16]
 80030ba:	6878      	ldr	r0, [r7, #4]
 80030bc:	f000 f8f8 	bl	80032b0 <HAL_TIM_TriggerCallback>
 80030c0:	68bb      	ldr	r3, [r7, #8]
 80030c2:	f003 0320 	and.w	r3, r3, #32
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d00c      	beq.n	80030e4 <HAL_TIM_IRQHandler+0x1d8>
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	f003 0320 	and.w	r3, r3, #32
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	d007      	beq.n	80030e4 <HAL_TIM_IRQHandler+0x1d8>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	f06f 0220 	mvn.w	r2, #32
 80030dc:	611a      	str	r2, [r3, #16]
 80030de:	6878      	ldr	r0, [r7, #4]
 80030e0:	f000 fa52 	bl	8003588 <HAL_TIMEx_CommutCallback>
 80030e4:	bf00      	nop
 80030e6:	3710      	adds	r7, #16
 80030e8:	46bd      	mov	sp, r7
 80030ea:	bd80      	pop	{r7, pc}

080030ec <HAL_TIM_ConfigClockSource>:
 80030ec:	b580      	push	{r7, lr}
 80030ee:	b084      	sub	sp, #16
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	6078      	str	r0, [r7, #4]
 80030f4:	6039      	str	r1, [r7, #0]
 80030f6:	2300      	movs	r3, #0
 80030f8:	73fb      	strb	r3, [r7, #15]
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003100:	2b01      	cmp	r3, #1
 8003102:	d101      	bne.n	8003108 <HAL_TIM_ConfigClockSource+0x1c>
 8003104:	2302      	movs	r3, #2
 8003106:	e0b4      	b.n	8003272 <HAL_TIM_ConfigClockSource+0x186>
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	2201      	movs	r2, #1
 800310c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	2202      	movs	r2, #2
 8003114:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	689b      	ldr	r3, [r3, #8]
 800311e:	60bb      	str	r3, [r7, #8]
 8003120:	68bb      	ldr	r3, [r7, #8]
 8003122:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003126:	60bb      	str	r3, [r7, #8]
 8003128:	68bb      	ldr	r3, [r7, #8]
 800312a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800312e:	60bb      	str	r3, [r7, #8]
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	68ba      	ldr	r2, [r7, #8]
 8003136:	609a      	str	r2, [r3, #8]
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003140:	d03e      	beq.n	80031c0 <HAL_TIM_ConfigClockSource+0xd4>
 8003142:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003146:	f200 8087 	bhi.w	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 800314a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800314e:	f000 8086 	beq.w	800325e <HAL_TIM_ConfigClockSource+0x172>
 8003152:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003156:	d87f      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003158:	2b70      	cmp	r3, #112	; 0x70
 800315a:	d01a      	beq.n	8003192 <HAL_TIM_ConfigClockSource+0xa6>
 800315c:	2b70      	cmp	r3, #112	; 0x70
 800315e:	d87b      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003160:	2b60      	cmp	r3, #96	; 0x60
 8003162:	d050      	beq.n	8003206 <HAL_TIM_ConfigClockSource+0x11a>
 8003164:	2b60      	cmp	r3, #96	; 0x60
 8003166:	d877      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003168:	2b50      	cmp	r3, #80	; 0x50
 800316a:	d03c      	beq.n	80031e6 <HAL_TIM_ConfigClockSource+0xfa>
 800316c:	2b50      	cmp	r3, #80	; 0x50
 800316e:	d873      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003170:	2b40      	cmp	r3, #64	; 0x40
 8003172:	d058      	beq.n	8003226 <HAL_TIM_ConfigClockSource+0x13a>
 8003174:	2b40      	cmp	r3, #64	; 0x40
 8003176:	d86f      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003178:	2b30      	cmp	r3, #48	; 0x30
 800317a:	d064      	beq.n	8003246 <HAL_TIM_ConfigClockSource+0x15a>
 800317c:	2b30      	cmp	r3, #48	; 0x30
 800317e:	d86b      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003180:	2b20      	cmp	r3, #32
 8003182:	d060      	beq.n	8003246 <HAL_TIM_ConfigClockSource+0x15a>
 8003184:	2b20      	cmp	r3, #32
 8003186:	d867      	bhi.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003188:	2b00      	cmp	r3, #0
 800318a:	d05c      	beq.n	8003246 <HAL_TIM_ConfigClockSource+0x15a>
 800318c:	2b10      	cmp	r3, #16
 800318e:	d05a      	beq.n	8003246 <HAL_TIM_ConfigClockSource+0x15a>
 8003190:	e062      	b.n	8003258 <HAL_TIM_ConfigClockSource+0x16c>
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	6818      	ldr	r0, [r3, #0]
 8003196:	683b      	ldr	r3, [r7, #0]
 8003198:	6899      	ldr	r1, [r3, #8]
 800319a:	683b      	ldr	r3, [r7, #0]
 800319c:	685a      	ldr	r2, [r3, #4]
 800319e:	683b      	ldr	r3, [r7, #0]
 80031a0:	68db      	ldr	r3, [r3, #12]
 80031a2:	f000 f974 	bl	800348e <TIM_ETR_SetConfig>
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	689b      	ldr	r3, [r3, #8]
 80031ac:	60bb      	str	r3, [r7, #8]
 80031ae:	68bb      	ldr	r3, [r7, #8]
 80031b0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80031b4:	60bb      	str	r3, [r7, #8]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	68ba      	ldr	r2, [r7, #8]
 80031bc:	609a      	str	r2, [r3, #8]
 80031be:	e04f      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	6818      	ldr	r0, [r3, #0]
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	6899      	ldr	r1, [r3, #8]
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	685a      	ldr	r2, [r3, #4]
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	68db      	ldr	r3, [r3, #12]
 80031d0:	f000 f95d 	bl	800348e <TIM_ETR_SetConfig>
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	689a      	ldr	r2, [r3, #8]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80031e2:	609a      	str	r2, [r3, #8]
 80031e4:	e03c      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	6818      	ldr	r0, [r3, #0]
 80031ea:	683b      	ldr	r3, [r7, #0]
 80031ec:	6859      	ldr	r1, [r3, #4]
 80031ee:	683b      	ldr	r3, [r7, #0]
 80031f0:	68db      	ldr	r3, [r3, #12]
 80031f2:	461a      	mov	r2, r3
 80031f4:	f000 f8d4 	bl	80033a0 <TIM_TI1_ConfigInputStage>
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	2150      	movs	r1, #80	; 0x50
 80031fe:	4618      	mov	r0, r3
 8003200:	f000 f92b 	bl	800345a <TIM_ITRx_SetConfig>
 8003204:	e02c      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	6818      	ldr	r0, [r3, #0]
 800320a:	683b      	ldr	r3, [r7, #0]
 800320c:	6859      	ldr	r1, [r3, #4]
 800320e:	683b      	ldr	r3, [r7, #0]
 8003210:	68db      	ldr	r3, [r3, #12]
 8003212:	461a      	mov	r2, r3
 8003214:	f000 f8f2 	bl	80033fc <TIM_TI2_ConfigInputStage>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	2160      	movs	r1, #96	; 0x60
 800321e:	4618      	mov	r0, r3
 8003220:	f000 f91b 	bl	800345a <TIM_ITRx_SetConfig>
 8003224:	e01c      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	6818      	ldr	r0, [r3, #0]
 800322a:	683b      	ldr	r3, [r7, #0]
 800322c:	6859      	ldr	r1, [r3, #4]
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	68db      	ldr	r3, [r3, #12]
 8003232:	461a      	mov	r2, r3
 8003234:	f000 f8b4 	bl	80033a0 <TIM_TI1_ConfigInputStage>
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	2140      	movs	r1, #64	; 0x40
 800323e:	4618      	mov	r0, r3
 8003240:	f000 f90b 	bl	800345a <TIM_ITRx_SetConfig>
 8003244:	e00c      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681a      	ldr	r2, [r3, #0]
 800324a:	683b      	ldr	r3, [r7, #0]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	4619      	mov	r1, r3
 8003250:	4610      	mov	r0, r2
 8003252:	f000 f902 	bl	800345a <TIM_ITRx_SetConfig>
 8003256:	e003      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 8003258:	2301      	movs	r3, #1
 800325a:	73fb      	strb	r3, [r7, #15]
 800325c:	e000      	b.n	8003260 <HAL_TIM_ConfigClockSource+0x174>
 800325e:	bf00      	nop
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	2201      	movs	r2, #1
 8003264:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	2200      	movs	r2, #0
 800326c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003270:	7bfb      	ldrb	r3, [r7, #15]
 8003272:	4618      	mov	r0, r3
 8003274:	3710      	adds	r7, #16
 8003276:	46bd      	mov	sp, r7
 8003278:	bd80      	pop	{r7, pc}

0800327a <HAL_TIM_OC_DelayElapsedCallback>:
 800327a:	b480      	push	{r7}
 800327c:	b083      	sub	sp, #12
 800327e:	af00      	add	r7, sp, #0
 8003280:	6078      	str	r0, [r7, #4]
 8003282:	bf00      	nop
 8003284:	370c      	adds	r7, #12
 8003286:	46bd      	mov	sp, r7
 8003288:	bc80      	pop	{r7}
 800328a:	4770      	bx	lr

0800328c <HAL_TIM_IC_CaptureCallback>:
 800328c:	b480      	push	{r7}
 800328e:	b083      	sub	sp, #12
 8003290:	af00      	add	r7, sp, #0
 8003292:	6078      	str	r0, [r7, #4]
 8003294:	bf00      	nop
 8003296:	370c      	adds	r7, #12
 8003298:	46bd      	mov	sp, r7
 800329a:	bc80      	pop	{r7}
 800329c:	4770      	bx	lr

0800329e <HAL_TIM_PWM_PulseFinishedCallback>:
 800329e:	b480      	push	{r7}
 80032a0:	b083      	sub	sp, #12
 80032a2:	af00      	add	r7, sp, #0
 80032a4:	6078      	str	r0, [r7, #4]
 80032a6:	bf00      	nop
 80032a8:	370c      	adds	r7, #12
 80032aa:	46bd      	mov	sp, r7
 80032ac:	bc80      	pop	{r7}
 80032ae:	4770      	bx	lr

080032b0 <HAL_TIM_TriggerCallback>:
 80032b0:	b480      	push	{r7}
 80032b2:	b083      	sub	sp, #12
 80032b4:	af00      	add	r7, sp, #0
 80032b6:	6078      	str	r0, [r7, #4]
 80032b8:	bf00      	nop
 80032ba:	370c      	adds	r7, #12
 80032bc:	46bd      	mov	sp, r7
 80032be:	bc80      	pop	{r7}
 80032c0:	4770      	bx	lr
	...

080032c4 <TIM_Base_SetConfig>:
 80032c4:	b480      	push	{r7}
 80032c6:	b085      	sub	sp, #20
 80032c8:	af00      	add	r7, sp, #0
 80032ca:	6078      	str	r0, [r7, #4]
 80032cc:	6039      	str	r1, [r7, #0]
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	60fb      	str	r3, [r7, #12]
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	4a2f      	ldr	r2, [pc, #188]	; (8003394 <TIM_Base_SetConfig+0xd0>)
 80032d8:	4293      	cmp	r3, r2
 80032da:	d00b      	beq.n	80032f4 <TIM_Base_SetConfig+0x30>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032e2:	d007      	beq.n	80032f4 <TIM_Base_SetConfig+0x30>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	4a2c      	ldr	r2, [pc, #176]	; (8003398 <TIM_Base_SetConfig+0xd4>)
 80032e8:	4293      	cmp	r3, r2
 80032ea:	d003      	beq.n	80032f4 <TIM_Base_SetConfig+0x30>
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	4a2b      	ldr	r2, [pc, #172]	; (800339c <TIM_Base_SetConfig+0xd8>)
 80032f0:	4293      	cmp	r3, r2
 80032f2:	d108      	bne.n	8003306 <TIM_Base_SetConfig+0x42>
 80032f4:	68fb      	ldr	r3, [r7, #12]
 80032f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032fa:	60fb      	str	r3, [r7, #12]
 80032fc:	683b      	ldr	r3, [r7, #0]
 80032fe:	685b      	ldr	r3, [r3, #4]
 8003300:	68fa      	ldr	r2, [r7, #12]
 8003302:	4313      	orrs	r3, r2
 8003304:	60fb      	str	r3, [r7, #12]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	4a22      	ldr	r2, [pc, #136]	; (8003394 <TIM_Base_SetConfig+0xd0>)
 800330a:	4293      	cmp	r3, r2
 800330c:	d00b      	beq.n	8003326 <TIM_Base_SetConfig+0x62>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003314:	d007      	beq.n	8003326 <TIM_Base_SetConfig+0x62>
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	4a1f      	ldr	r2, [pc, #124]	; (8003398 <TIM_Base_SetConfig+0xd4>)
 800331a:	4293      	cmp	r3, r2
 800331c:	d003      	beq.n	8003326 <TIM_Base_SetConfig+0x62>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	4a1e      	ldr	r2, [pc, #120]	; (800339c <TIM_Base_SetConfig+0xd8>)
 8003322:	4293      	cmp	r3, r2
 8003324:	d108      	bne.n	8003338 <TIM_Base_SetConfig+0x74>
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800332c:	60fb      	str	r3, [r7, #12]
 800332e:	683b      	ldr	r3, [r7, #0]
 8003330:	68db      	ldr	r3, [r3, #12]
 8003332:	68fa      	ldr	r2, [r7, #12]
 8003334:	4313      	orrs	r3, r2
 8003336:	60fb      	str	r3, [r7, #12]
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800333e:	683b      	ldr	r3, [r7, #0]
 8003340:	695b      	ldr	r3, [r3, #20]
 8003342:	4313      	orrs	r3, r2
 8003344:	60fb      	str	r3, [r7, #12]
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	68fa      	ldr	r2, [r7, #12]
 800334a:	601a      	str	r2, [r3, #0]
 800334c:	683b      	ldr	r3, [r7, #0]
 800334e:	689a      	ldr	r2, [r3, #8]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	62da      	str	r2, [r3, #44]	; 0x2c
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	681a      	ldr	r2, [r3, #0]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	629a      	str	r2, [r3, #40]	; 0x28
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	4a0d      	ldr	r2, [pc, #52]	; (8003394 <TIM_Base_SetConfig+0xd0>)
 8003360:	4293      	cmp	r3, r2
 8003362:	d103      	bne.n	800336c <TIM_Base_SetConfig+0xa8>
 8003364:	683b      	ldr	r3, [r7, #0]
 8003366:	691a      	ldr	r2, [r3, #16]
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	631a      	str	r2, [r3, #48]	; 0x30
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2201      	movs	r2, #1
 8003370:	615a      	str	r2, [r3, #20]
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	691b      	ldr	r3, [r3, #16]
 8003376:	f003 0301 	and.w	r3, r3, #1
 800337a:	2b00      	cmp	r3, #0
 800337c:	d005      	beq.n	800338a <TIM_Base_SetConfig+0xc6>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	691b      	ldr	r3, [r3, #16]
 8003382:	f023 0201 	bic.w	r2, r3, #1
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	611a      	str	r2, [r3, #16]
 800338a:	bf00      	nop
 800338c:	3714      	adds	r7, #20
 800338e:	46bd      	mov	sp, r7
 8003390:	bc80      	pop	{r7}
 8003392:	4770      	bx	lr
 8003394:	40012c00 	.word	0x40012c00
 8003398:	40000400 	.word	0x40000400
 800339c:	40000800 	.word	0x40000800

080033a0 <TIM_TI1_ConfigInputStage>:
 80033a0:	b480      	push	{r7}
 80033a2:	b087      	sub	sp, #28
 80033a4:	af00      	add	r7, sp, #0
 80033a6:	60f8      	str	r0, [r7, #12]
 80033a8:	60b9      	str	r1, [r7, #8]
 80033aa:	607a      	str	r2, [r7, #4]
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	6a1b      	ldr	r3, [r3, #32]
 80033b0:	617b      	str	r3, [r7, #20]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	6a1b      	ldr	r3, [r3, #32]
 80033b6:	f023 0201 	bic.w	r2, r3, #1
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	621a      	str	r2, [r3, #32]
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	699b      	ldr	r3, [r3, #24]
 80033c2:	613b      	str	r3, [r7, #16]
 80033c4:	693b      	ldr	r3, [r7, #16]
 80033c6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80033ca:	613b      	str	r3, [r7, #16]
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	011b      	lsls	r3, r3, #4
 80033d0:	693a      	ldr	r2, [r7, #16]
 80033d2:	4313      	orrs	r3, r2
 80033d4:	613b      	str	r3, [r7, #16]
 80033d6:	697b      	ldr	r3, [r7, #20]
 80033d8:	f023 030a 	bic.w	r3, r3, #10
 80033dc:	617b      	str	r3, [r7, #20]
 80033de:	697a      	ldr	r2, [r7, #20]
 80033e0:	68bb      	ldr	r3, [r7, #8]
 80033e2:	4313      	orrs	r3, r2
 80033e4:	617b      	str	r3, [r7, #20]
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	693a      	ldr	r2, [r7, #16]
 80033ea:	619a      	str	r2, [r3, #24]
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	697a      	ldr	r2, [r7, #20]
 80033f0:	621a      	str	r2, [r3, #32]
 80033f2:	bf00      	nop
 80033f4:	371c      	adds	r7, #28
 80033f6:	46bd      	mov	sp, r7
 80033f8:	bc80      	pop	{r7}
 80033fa:	4770      	bx	lr

080033fc <TIM_TI2_ConfigInputStage>:
 80033fc:	b480      	push	{r7}
 80033fe:	b087      	sub	sp, #28
 8003400:	af00      	add	r7, sp, #0
 8003402:	60f8      	str	r0, [r7, #12]
 8003404:	60b9      	str	r1, [r7, #8]
 8003406:	607a      	str	r2, [r7, #4]
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	6a1b      	ldr	r3, [r3, #32]
 800340c:	617b      	str	r3, [r7, #20]
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	6a1b      	ldr	r3, [r3, #32]
 8003412:	f023 0210 	bic.w	r2, r3, #16
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	621a      	str	r2, [r3, #32]
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	699b      	ldr	r3, [r3, #24]
 800341e:	613b      	str	r3, [r7, #16]
 8003420:	693b      	ldr	r3, [r7, #16]
 8003422:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003426:	613b      	str	r3, [r7, #16]
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	031b      	lsls	r3, r3, #12
 800342c:	693a      	ldr	r2, [r7, #16]
 800342e:	4313      	orrs	r3, r2
 8003430:	613b      	str	r3, [r7, #16]
 8003432:	697b      	ldr	r3, [r7, #20]
 8003434:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003438:	617b      	str	r3, [r7, #20]
 800343a:	68bb      	ldr	r3, [r7, #8]
 800343c:	011b      	lsls	r3, r3, #4
 800343e:	697a      	ldr	r2, [r7, #20]
 8003440:	4313      	orrs	r3, r2
 8003442:	617b      	str	r3, [r7, #20]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	693a      	ldr	r2, [r7, #16]
 8003448:	619a      	str	r2, [r3, #24]
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	697a      	ldr	r2, [r7, #20]
 800344e:	621a      	str	r2, [r3, #32]
 8003450:	bf00      	nop
 8003452:	371c      	adds	r7, #28
 8003454:	46bd      	mov	sp, r7
 8003456:	bc80      	pop	{r7}
 8003458:	4770      	bx	lr

0800345a <TIM_ITRx_SetConfig>:
 800345a:	b480      	push	{r7}
 800345c:	b085      	sub	sp, #20
 800345e:	af00      	add	r7, sp, #0
 8003460:	6078      	str	r0, [r7, #4]
 8003462:	6039      	str	r1, [r7, #0]
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	689b      	ldr	r3, [r3, #8]
 8003468:	60fb      	str	r3, [r7, #12]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003470:	60fb      	str	r3, [r7, #12]
 8003472:	683a      	ldr	r2, [r7, #0]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	4313      	orrs	r3, r2
 8003478:	f043 0307 	orr.w	r3, r3, #7
 800347c:	60fb      	str	r3, [r7, #12]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	68fa      	ldr	r2, [r7, #12]
 8003482:	609a      	str	r2, [r3, #8]
 8003484:	bf00      	nop
 8003486:	3714      	adds	r7, #20
 8003488:	46bd      	mov	sp, r7
 800348a:	bc80      	pop	{r7}
 800348c:	4770      	bx	lr

0800348e <TIM_ETR_SetConfig>:
 800348e:	b480      	push	{r7}
 8003490:	b087      	sub	sp, #28
 8003492:	af00      	add	r7, sp, #0
 8003494:	60f8      	str	r0, [r7, #12]
 8003496:	60b9      	str	r1, [r7, #8]
 8003498:	607a      	str	r2, [r7, #4]
 800349a:	603b      	str	r3, [r7, #0]
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	689b      	ldr	r3, [r3, #8]
 80034a0:	617b      	str	r3, [r7, #20]
 80034a2:	697b      	ldr	r3, [r7, #20]
 80034a4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80034a8:	617b      	str	r3, [r7, #20]
 80034aa:	683b      	ldr	r3, [r7, #0]
 80034ac:	021a      	lsls	r2, r3, #8
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	431a      	orrs	r2, r3
 80034b2:	68bb      	ldr	r3, [r7, #8]
 80034b4:	4313      	orrs	r3, r2
 80034b6:	697a      	ldr	r2, [r7, #20]
 80034b8:	4313      	orrs	r3, r2
 80034ba:	617b      	str	r3, [r7, #20]
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	697a      	ldr	r2, [r7, #20]
 80034c0:	609a      	str	r2, [r3, #8]
 80034c2:	bf00      	nop
 80034c4:	371c      	adds	r7, #28
 80034c6:	46bd      	mov	sp, r7
 80034c8:	bc80      	pop	{r7}
 80034ca:	4770      	bx	lr

080034cc <HAL_TIMEx_MasterConfigSynchronization>:
 80034cc:	b480      	push	{r7}
 80034ce:	b085      	sub	sp, #20
 80034d0:	af00      	add	r7, sp, #0
 80034d2:	6078      	str	r0, [r7, #4]
 80034d4:	6039      	str	r1, [r7, #0]
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80034dc:	2b01      	cmp	r3, #1
 80034de:	d101      	bne.n	80034e4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80034e0:	2302      	movs	r3, #2
 80034e2:	e046      	b.n	8003572 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	2201      	movs	r2, #1
 80034e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	2202      	movs	r2, #2
 80034f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	685b      	ldr	r3, [r3, #4]
 80034fa:	60fb      	str	r3, [r7, #12]
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	689b      	ldr	r3, [r3, #8]
 8003502:	60bb      	str	r3, [r7, #8]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800350a:	60fb      	str	r3, [r7, #12]
 800350c:	683b      	ldr	r3, [r7, #0]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	68fa      	ldr	r2, [r7, #12]
 8003512:	4313      	orrs	r3, r2
 8003514:	60fb      	str	r3, [r7, #12]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	68fa      	ldr	r2, [r7, #12]
 800351c:	605a      	str	r2, [r3, #4]
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	4a16      	ldr	r2, [pc, #88]	; (800357c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003524:	4293      	cmp	r3, r2
 8003526:	d00e      	beq.n	8003546 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003530:	d009      	beq.n	8003546 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	4a12      	ldr	r2, [pc, #72]	; (8003580 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003538:	4293      	cmp	r3, r2
 800353a:	d004      	beq.n	8003546 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	4a10      	ldr	r2, [pc, #64]	; (8003584 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003542:	4293      	cmp	r3, r2
 8003544:	d10c      	bne.n	8003560 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003546:	68bb      	ldr	r3, [r7, #8]
 8003548:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800354c:	60bb      	str	r3, [r7, #8]
 800354e:	683b      	ldr	r3, [r7, #0]
 8003550:	685b      	ldr	r3, [r3, #4]
 8003552:	68ba      	ldr	r2, [r7, #8]
 8003554:	4313      	orrs	r3, r2
 8003556:	60bb      	str	r3, [r7, #8]
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	68ba      	ldr	r2, [r7, #8]
 800355e:	609a      	str	r2, [r3, #8]
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	2201      	movs	r2, #1
 8003564:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	2200      	movs	r2, #0
 800356c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003570:	2300      	movs	r3, #0
 8003572:	4618      	mov	r0, r3
 8003574:	3714      	adds	r7, #20
 8003576:	46bd      	mov	sp, r7
 8003578:	bc80      	pop	{r7}
 800357a:	4770      	bx	lr
 800357c:	40012c00 	.word	0x40012c00
 8003580:	40000400 	.word	0x40000400
 8003584:	40000800 	.word	0x40000800

08003588 <HAL_TIMEx_CommutCallback>:
 8003588:	b480      	push	{r7}
 800358a:	b083      	sub	sp, #12
 800358c:	af00      	add	r7, sp, #0
 800358e:	6078      	str	r0, [r7, #4]
 8003590:	bf00      	nop
 8003592:	370c      	adds	r7, #12
 8003594:	46bd      	mov	sp, r7
 8003596:	bc80      	pop	{r7}
 8003598:	4770      	bx	lr

0800359a <HAL_TIMEx_BreakCallback>:
 800359a:	b480      	push	{r7}
 800359c:	b083      	sub	sp, #12
 800359e:	af00      	add	r7, sp, #0
 80035a0:	6078      	str	r0, [r7, #4]
 80035a2:	bf00      	nop
 80035a4:	370c      	adds	r7, #12
 80035a6:	46bd      	mov	sp, r7
 80035a8:	bc80      	pop	{r7}
 80035aa:	4770      	bx	lr

080035ac <HAL_UART_Init>:
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b082      	sub	sp, #8
 80035b0:	af00      	add	r7, sp, #0
 80035b2:	6078      	str	r0, [r7, #4]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d101      	bne.n	80035be <HAL_UART_Init+0x12>
 80035ba:	2301      	movs	r3, #1
 80035bc:	e042      	b.n	8003644 <HAL_UART_Init+0x98>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80035c4:	b2db      	uxtb	r3, r3
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d106      	bne.n	80035d8 <HAL_UART_Init+0x2c>
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	2200      	movs	r2, #0
 80035ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80035d2:	6878      	ldr	r0, [r7, #4]
 80035d4:	f7fd fe64 	bl	80012a0 <HAL_UART_MspInit>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	2224      	movs	r2, #36	; 0x24
 80035dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	68da      	ldr	r2, [r3, #12]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80035ee:	60da      	str	r2, [r3, #12]
 80035f0:	6878      	ldr	r0, [r7, #4]
 80035f2:	f000 fc7f 	bl	8003ef4 <UART_SetConfig>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	691a      	ldr	r2, [r3, #16]
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003604:	611a      	str	r2, [r3, #16]
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	695a      	ldr	r2, [r3, #20]
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003614:	615a      	str	r2, [r3, #20]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	68da      	ldr	r2, [r3, #12]
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003624:	60da      	str	r2, [r3, #12]
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	2200      	movs	r2, #0
 800362a:	645a      	str	r2, [r3, #68]	; 0x44
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	2220      	movs	r2, #32
 8003630:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	2220      	movs	r2, #32
 8003638:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	2200      	movs	r2, #0
 8003640:	635a      	str	r2, [r3, #52]	; 0x34
 8003642:	2300      	movs	r3, #0
 8003644:	4618      	mov	r0, r3
 8003646:	3708      	adds	r7, #8
 8003648:	46bd      	mov	sp, r7
 800364a:	bd80      	pop	{r7, pc}

0800364c <HAL_UART_IRQHandler>:
 800364c:	b580      	push	{r7, lr}
 800364e:	b0ba      	sub	sp, #232	; 0xe8
 8003650:	af00      	add	r7, sp, #0
 8003652:	6078      	str	r0, [r7, #4]
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	68db      	ldr	r3, [r3, #12]
 8003664:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	695b      	ldr	r3, [r3, #20]
 800366e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8003672:	2300      	movs	r3, #0
 8003674:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003678:	2300      	movs	r3, #0
 800367a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800367e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003682:	f003 030f 	and.w	r3, r3, #15
 8003686:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800368a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800368e:	2b00      	cmp	r3, #0
 8003690:	d10f      	bne.n	80036b2 <HAL_UART_IRQHandler+0x66>
 8003692:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003696:	f003 0320 	and.w	r3, r3, #32
 800369a:	2b00      	cmp	r3, #0
 800369c:	d009      	beq.n	80036b2 <HAL_UART_IRQHandler+0x66>
 800369e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80036a2:	f003 0320 	and.w	r3, r3, #32
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	d003      	beq.n	80036b2 <HAL_UART_IRQHandler+0x66>
 80036aa:	6878      	ldr	r0, [r7, #4]
 80036ac:	f000 fb63 	bl	8003d76 <UART_Receive_IT>
 80036b0:	e25b      	b.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 80036b2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	f000 80de 	beq.w	8003878 <HAL_UART_IRQHandler+0x22c>
 80036bc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80036c0:	f003 0301 	and.w	r3, r3, #1
 80036c4:	2b00      	cmp	r3, #0
 80036c6:	d106      	bne.n	80036d6 <HAL_UART_IRQHandler+0x8a>
 80036c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80036cc:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	f000 80d1 	beq.w	8003878 <HAL_UART_IRQHandler+0x22c>
 80036d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80036da:	f003 0301 	and.w	r3, r3, #1
 80036de:	2b00      	cmp	r3, #0
 80036e0:	d00b      	beq.n	80036fa <HAL_UART_IRQHandler+0xae>
 80036e2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80036e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d005      	beq.n	80036fa <HAL_UART_IRQHandler+0xae>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80036f2:	f043 0201 	orr.w	r2, r3, #1
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	645a      	str	r2, [r3, #68]	; 0x44
 80036fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80036fe:	f003 0304 	and.w	r3, r3, #4
 8003702:	2b00      	cmp	r3, #0
 8003704:	d00b      	beq.n	800371e <HAL_UART_IRQHandler+0xd2>
 8003706:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800370a:	f003 0301 	and.w	r3, r3, #1
 800370e:	2b00      	cmp	r3, #0
 8003710:	d005      	beq.n	800371e <HAL_UART_IRQHandler+0xd2>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003716:	f043 0202 	orr.w	r2, r3, #2
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	645a      	str	r2, [r3, #68]	; 0x44
 800371e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003722:	f003 0302 	and.w	r3, r3, #2
 8003726:	2b00      	cmp	r3, #0
 8003728:	d00b      	beq.n	8003742 <HAL_UART_IRQHandler+0xf6>
 800372a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800372e:	f003 0301 	and.w	r3, r3, #1
 8003732:	2b00      	cmp	r3, #0
 8003734:	d005      	beq.n	8003742 <HAL_UART_IRQHandler+0xf6>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800373a:	f043 0204 	orr.w	r2, r3, #4
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	645a      	str	r2, [r3, #68]	; 0x44
 8003742:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003746:	f003 0308 	and.w	r3, r3, #8
 800374a:	2b00      	cmp	r3, #0
 800374c:	d011      	beq.n	8003772 <HAL_UART_IRQHandler+0x126>
 800374e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003752:	f003 0320 	and.w	r3, r3, #32
 8003756:	2b00      	cmp	r3, #0
 8003758:	d105      	bne.n	8003766 <HAL_UART_IRQHandler+0x11a>
 800375a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800375e:	f003 0301 	and.w	r3, r3, #1
 8003762:	2b00      	cmp	r3, #0
 8003764:	d005      	beq.n	8003772 <HAL_UART_IRQHandler+0x126>
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800376a:	f043 0208 	orr.w	r2, r3, #8
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	645a      	str	r2, [r3, #68]	; 0x44
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003776:	2b00      	cmp	r3, #0
 8003778:	f000 81f2 	beq.w	8003b60 <HAL_UART_IRQHandler+0x514>
 800377c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003780:	f003 0320 	and.w	r3, r3, #32
 8003784:	2b00      	cmp	r3, #0
 8003786:	d008      	beq.n	800379a <HAL_UART_IRQHandler+0x14e>
 8003788:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800378c:	f003 0320 	and.w	r3, r3, #32
 8003790:	2b00      	cmp	r3, #0
 8003792:	d002      	beq.n	800379a <HAL_UART_IRQHandler+0x14e>
 8003794:	6878      	ldr	r0, [r7, #4]
 8003796:	f000 faee 	bl	8003d76 <UART_Receive_IT>
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	695b      	ldr	r3, [r3, #20]
 80037a0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	bf14      	ite	ne
 80037a8:	2301      	movne	r3, #1
 80037aa:	2300      	moveq	r3, #0
 80037ac:	b2db      	uxtb	r3, r3
 80037ae:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80037b6:	f003 0308 	and.w	r3, r3, #8
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d103      	bne.n	80037c6 <HAL_UART_IRQHandler+0x17a>
 80037be:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d04f      	beq.n	8003866 <HAL_UART_IRQHandler+0x21a>
 80037c6:	6878      	ldr	r0, [r7, #4]
 80037c8:	f000 f9f8 	bl	8003bbc <UART_EndRxTransfer>
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	695b      	ldr	r3, [r3, #20]
 80037d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80037d6:	2b00      	cmp	r3, #0
 80037d8:	d041      	beq.n	800385e <HAL_UART_IRQHandler+0x212>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	3314      	adds	r3, #20
 80037e0:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80037e4:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80037e8:	e853 3f00 	ldrex	r3, [r3]
 80037ec:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80037f0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80037f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80037f8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	3314      	adds	r3, #20
 8003802:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8003806:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800380a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800380e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8003812:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8003816:	e841 2300 	strex	r3, r2, [r1]
 800381a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800381e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8003822:	2b00      	cmp	r3, #0
 8003824:	d1d9      	bne.n	80037da <HAL_UART_IRQHandler+0x18e>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800382a:	2b00      	cmp	r3, #0
 800382c:	d013      	beq.n	8003856 <HAL_UART_IRQHandler+0x20a>
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003832:	4a7e      	ldr	r2, [pc, #504]	; (8003a2c <HAL_UART_IRQHandler+0x3e0>)
 8003834:	635a      	str	r2, [r3, #52]	; 0x34
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800383a:	4618      	mov	r0, r3
 800383c:	f7fd ffb4 	bl	80017a8 <HAL_DMA_Abort_IT>
 8003840:	4603      	mov	r3, r0
 8003842:	2b00      	cmp	r3, #0
 8003844:	d016      	beq.n	8003874 <HAL_UART_IRQHandler+0x228>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800384a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800384c:	687a      	ldr	r2, [r7, #4]
 800384e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003850:	4610      	mov	r0, r2
 8003852:	4798      	blx	r3
 8003854:	e00e      	b.n	8003874 <HAL_UART_IRQHandler+0x228>
 8003856:	6878      	ldr	r0, [r7, #4]
 8003858:	f000 f99c 	bl	8003b94 <HAL_UART_ErrorCallback>
 800385c:	e00a      	b.n	8003874 <HAL_UART_IRQHandler+0x228>
 800385e:	6878      	ldr	r0, [r7, #4]
 8003860:	f000 f998 	bl	8003b94 <HAL_UART_ErrorCallback>
 8003864:	e006      	b.n	8003874 <HAL_UART_IRQHandler+0x228>
 8003866:	6878      	ldr	r0, [r7, #4]
 8003868:	f000 f994 	bl	8003b94 <HAL_UART_ErrorCallback>
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	2200      	movs	r2, #0
 8003870:	645a      	str	r2, [r3, #68]	; 0x44
 8003872:	e175      	b.n	8003b60 <HAL_UART_IRQHandler+0x514>
 8003874:	bf00      	nop
 8003876:	e173      	b.n	8003b60 <HAL_UART_IRQHandler+0x514>
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800387c:	2b01      	cmp	r3, #1
 800387e:	f040 814f 	bne.w	8003b20 <HAL_UART_IRQHandler+0x4d4>
 8003882:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003886:	f003 0310 	and.w	r3, r3, #16
 800388a:	2b00      	cmp	r3, #0
 800388c:	f000 8148 	beq.w	8003b20 <HAL_UART_IRQHandler+0x4d4>
 8003890:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003894:	f003 0310 	and.w	r3, r3, #16
 8003898:	2b00      	cmp	r3, #0
 800389a:	f000 8141 	beq.w	8003b20 <HAL_UART_IRQHandler+0x4d4>
 800389e:	2300      	movs	r3, #0
 80038a0:	60bb      	str	r3, [r7, #8]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	60bb      	str	r3, [r7, #8]
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	685b      	ldr	r3, [r3, #4]
 80038b0:	60bb      	str	r3, [r7, #8]
 80038b2:	68bb      	ldr	r3, [r7, #8]
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	695b      	ldr	r3, [r3, #20]
 80038ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038be:	2b00      	cmp	r3, #0
 80038c0:	f000 80b6 	beq.w	8003a30 <HAL_UART_IRQHandler+0x3e4>
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	685b      	ldr	r3, [r3, #4]
 80038cc:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80038d0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	f000 8145 	beq.w	8003b64 <HAL_UART_IRQHandler+0x518>
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80038de:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80038e2:	429a      	cmp	r2, r3
 80038e4:	f080 813e 	bcs.w	8003b64 <HAL_UART_IRQHandler+0x518>
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80038ee:	85da      	strh	r2, [r3, #46]	; 0x2e
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038f4:	699b      	ldr	r3, [r3, #24]
 80038f6:	2b20      	cmp	r3, #32
 80038f8:	f000 8088 	beq.w	8003a0c <HAL_UART_IRQHandler+0x3c0>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	330c      	adds	r3, #12
 8003902:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003906:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800390a:	e853 3f00 	ldrex	r3, [r3]
 800390e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003912:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003916:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800391a:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	330c      	adds	r3, #12
 8003924:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8003928:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800392c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003930:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8003934:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8003938:	e841 2300 	strex	r3, r2, [r1]
 800393c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003940:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003944:	2b00      	cmp	r3, #0
 8003946:	d1d9      	bne.n	80038fc <HAL_UART_IRQHandler+0x2b0>
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	3314      	adds	r3, #20
 800394e:	677b      	str	r3, [r7, #116]	; 0x74
 8003950:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003952:	e853 3f00 	ldrex	r3, [r3]
 8003956:	673b      	str	r3, [r7, #112]	; 0x70
 8003958:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800395a:	f023 0301 	bic.w	r3, r3, #1
 800395e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	3314      	adds	r3, #20
 8003968:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800396c:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8003970:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003972:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8003974:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8003978:	e841 2300 	strex	r3, r2, [r1]
 800397c:	67bb      	str	r3, [r7, #120]	; 0x78
 800397e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003980:	2b00      	cmp	r3, #0
 8003982:	d1e1      	bne.n	8003948 <HAL_UART_IRQHandler+0x2fc>
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	3314      	adds	r3, #20
 800398a:	663b      	str	r3, [r7, #96]	; 0x60
 800398c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800398e:	e853 3f00 	ldrex	r3, [r3]
 8003992:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003994:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003996:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800399a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	3314      	adds	r3, #20
 80039a4:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80039a8:	66fa      	str	r2, [r7, #108]	; 0x6c
 80039aa:	66bb      	str	r3, [r7, #104]	; 0x68
 80039ac:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80039ae:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80039b0:	e841 2300 	strex	r3, r2, [r1]
 80039b4:	667b      	str	r3, [r7, #100]	; 0x64
 80039b6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80039b8:	2b00      	cmp	r3, #0
 80039ba:	d1e3      	bne.n	8003984 <HAL_UART_IRQHandler+0x338>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	2220      	movs	r2, #32
 80039c0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	2200      	movs	r2, #0
 80039c8:	631a      	str	r2, [r3, #48]	; 0x30
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	330c      	adds	r3, #12
 80039d0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80039d2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80039d4:	e853 3f00 	ldrex	r3, [r3]
 80039d8:	64bb      	str	r3, [r7, #72]	; 0x48
 80039da:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80039dc:	f023 0310 	bic.w	r3, r3, #16
 80039e0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	330c      	adds	r3, #12
 80039ea:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80039ee:	65ba      	str	r2, [r7, #88]	; 0x58
 80039f0:	657b      	str	r3, [r7, #84]	; 0x54
 80039f2:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80039f4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80039f6:	e841 2300 	strex	r3, r2, [r1]
 80039fa:	653b      	str	r3, [r7, #80]	; 0x50
 80039fc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80039fe:	2b00      	cmp	r3, #0
 8003a00:	d1e3      	bne.n	80039ca <HAL_UART_IRQHandler+0x37e>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003a06:	4618      	mov	r0, r3
 8003a08:	f7fd fe93 	bl	8001732 <HAL_DMA_Abort>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	2202      	movs	r2, #2
 8003a10:	635a      	str	r2, [r3, #52]	; 0x34
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003a1a:	b29b      	uxth	r3, r3
 8003a1c:	1ad3      	subs	r3, r2, r3
 8003a1e:	b29b      	uxth	r3, r3
 8003a20:	4619      	mov	r1, r3
 8003a22:	6878      	ldr	r0, [r7, #4]
 8003a24:	f000 f8bf 	bl	8003ba6 <HAL_UARTEx_RxEventCallback>
 8003a28:	e09c      	b.n	8003b64 <HAL_UART_IRQHandler+0x518>
 8003a2a:	bf00      	nop
 8003a2c:	08003c81 	.word	0x08003c81
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003a38:	b29b      	uxth	r3, r3
 8003a3a:	1ad3      	subs	r3, r2, r3
 8003a3c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003a44:	b29b      	uxth	r3, r3
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	f000 808e 	beq.w	8003b68 <HAL_UART_IRQHandler+0x51c>
 8003a4c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	f000 8089 	beq.w	8003b68 <HAL_UART_IRQHandler+0x51c>
 8003a56:	687b      	ldr	r3, [r7, #4]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	330c      	adds	r3, #12
 8003a5c:	63bb      	str	r3, [r7, #56]	; 0x38
 8003a5e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003a60:	e853 3f00 	ldrex	r3, [r3]
 8003a64:	637b      	str	r3, [r7, #52]	; 0x34
 8003a66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003a68:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8003a6c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	330c      	adds	r3, #12
 8003a76:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8003a7a:	647a      	str	r2, [r7, #68]	; 0x44
 8003a7c:	643b      	str	r3, [r7, #64]	; 0x40
 8003a7e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8003a80:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003a82:	e841 2300 	strex	r3, r2, [r1]
 8003a86:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003a88:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d1e3      	bne.n	8003a56 <HAL_UART_IRQHandler+0x40a>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	3314      	adds	r3, #20
 8003a94:	627b      	str	r3, [r7, #36]	; 0x24
 8003a96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a98:	e853 3f00 	ldrex	r3, [r3]
 8003a9c:	623b      	str	r3, [r7, #32]
 8003a9e:	6a3b      	ldr	r3, [r7, #32]
 8003aa0:	f023 0301 	bic.w	r3, r3, #1
 8003aa4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	3314      	adds	r3, #20
 8003aae:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8003ab2:	633a      	str	r2, [r7, #48]	; 0x30
 8003ab4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003ab6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8003ab8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003aba:	e841 2300 	strex	r3, r2, [r1]
 8003abe:	62bb      	str	r3, [r7, #40]	; 0x28
 8003ac0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d1e3      	bne.n	8003a8e <HAL_UART_IRQHandler+0x442>
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	2220      	movs	r2, #32
 8003aca:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	2200      	movs	r2, #0
 8003ad2:	631a      	str	r2, [r3, #48]	; 0x30
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	330c      	adds	r3, #12
 8003ada:	613b      	str	r3, [r7, #16]
 8003adc:	693b      	ldr	r3, [r7, #16]
 8003ade:	e853 3f00 	ldrex	r3, [r3]
 8003ae2:	60fb      	str	r3, [r7, #12]
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	f023 0310 	bic.w	r3, r3, #16
 8003aea:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	330c      	adds	r3, #12
 8003af4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8003af8:	61fa      	str	r2, [r7, #28]
 8003afa:	61bb      	str	r3, [r7, #24]
 8003afc:	69b9      	ldr	r1, [r7, #24]
 8003afe:	69fa      	ldr	r2, [r7, #28]
 8003b00:	e841 2300 	strex	r3, r2, [r1]
 8003b04:	617b      	str	r3, [r7, #20]
 8003b06:	697b      	ldr	r3, [r7, #20]
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d1e3      	bne.n	8003ad4 <HAL_UART_IRQHandler+0x488>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	2202      	movs	r2, #2
 8003b10:	635a      	str	r2, [r3, #52]	; 0x34
 8003b12:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8003b16:	4619      	mov	r1, r3
 8003b18:	6878      	ldr	r0, [r7, #4]
 8003b1a:	f000 f844 	bl	8003ba6 <HAL_UARTEx_RxEventCallback>
 8003b1e:	e023      	b.n	8003b68 <HAL_UART_IRQHandler+0x51c>
 8003b20:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003b24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b28:	2b00      	cmp	r3, #0
 8003b2a:	d009      	beq.n	8003b40 <HAL_UART_IRQHandler+0x4f4>
 8003b2c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003b30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d003      	beq.n	8003b40 <HAL_UART_IRQHandler+0x4f4>
 8003b38:	6878      	ldr	r0, [r7, #4]
 8003b3a:	f000 f8b5 	bl	8003ca8 <UART_Transmit_IT>
 8003b3e:	e014      	b.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b40:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003b44:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003b48:	2b00      	cmp	r3, #0
 8003b4a:	d00e      	beq.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b4c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003b50:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d008      	beq.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b58:	6878      	ldr	r0, [r7, #4]
 8003b5a:	f000 f8f4 	bl	8003d46 <UART_EndTransmit_IT>
 8003b5e:	e004      	b.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b60:	bf00      	nop
 8003b62:	e002      	b.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b64:	bf00      	nop
 8003b66:	e000      	b.n	8003b6a <HAL_UART_IRQHandler+0x51e>
 8003b68:	bf00      	nop
 8003b6a:	37e8      	adds	r7, #232	; 0xe8
 8003b6c:	46bd      	mov	sp, r7
 8003b6e:	bd80      	pop	{r7, pc}

08003b70 <HAL_UART_TxCpltCallback>:
 8003b70:	b480      	push	{r7}
 8003b72:	b083      	sub	sp, #12
 8003b74:	af00      	add	r7, sp, #0
 8003b76:	6078      	str	r0, [r7, #4]
 8003b78:	bf00      	nop
 8003b7a:	370c      	adds	r7, #12
 8003b7c:	46bd      	mov	sp, r7
 8003b7e:	bc80      	pop	{r7}
 8003b80:	4770      	bx	lr

08003b82 <HAL_UART_RxCpltCallback>:
 8003b82:	b480      	push	{r7}
 8003b84:	b083      	sub	sp, #12
 8003b86:	af00      	add	r7, sp, #0
 8003b88:	6078      	str	r0, [r7, #4]
 8003b8a:	bf00      	nop
 8003b8c:	370c      	adds	r7, #12
 8003b8e:	46bd      	mov	sp, r7
 8003b90:	bc80      	pop	{r7}
 8003b92:	4770      	bx	lr

08003b94 <HAL_UART_ErrorCallback>:
 8003b94:	b480      	push	{r7}
 8003b96:	b083      	sub	sp, #12
 8003b98:	af00      	add	r7, sp, #0
 8003b9a:	6078      	str	r0, [r7, #4]
 8003b9c:	bf00      	nop
 8003b9e:	370c      	adds	r7, #12
 8003ba0:	46bd      	mov	sp, r7
 8003ba2:	bc80      	pop	{r7}
 8003ba4:	4770      	bx	lr

08003ba6 <HAL_UARTEx_RxEventCallback>:
 8003ba6:	b480      	push	{r7}
 8003ba8:	b083      	sub	sp, #12
 8003baa:	af00      	add	r7, sp, #0
 8003bac:	6078      	str	r0, [r7, #4]
 8003bae:	460b      	mov	r3, r1
 8003bb0:	807b      	strh	r3, [r7, #2]
 8003bb2:	bf00      	nop
 8003bb4:	370c      	adds	r7, #12
 8003bb6:	46bd      	mov	sp, r7
 8003bb8:	bc80      	pop	{r7}
 8003bba:	4770      	bx	lr

08003bbc <UART_EndRxTransfer>:
 8003bbc:	b480      	push	{r7}
 8003bbe:	b095      	sub	sp, #84	; 0x54
 8003bc0:	af00      	add	r7, sp, #0
 8003bc2:	6078      	str	r0, [r7, #4]
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	330c      	adds	r3, #12
 8003bca:	637b      	str	r3, [r7, #52]	; 0x34
 8003bcc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003bce:	e853 3f00 	ldrex	r3, [r3]
 8003bd2:	633b      	str	r3, [r7, #48]	; 0x30
 8003bd4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003bd6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8003bda:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	330c      	adds	r3, #12
 8003be2:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003be4:	643a      	str	r2, [r7, #64]	; 0x40
 8003be6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003be8:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8003bea:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8003bec:	e841 2300 	strex	r3, r2, [r1]
 8003bf0:	63bb      	str	r3, [r7, #56]	; 0x38
 8003bf2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d1e5      	bne.n	8003bc4 <UART_EndRxTransfer+0x8>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	3314      	adds	r3, #20
 8003bfe:	623b      	str	r3, [r7, #32]
 8003c00:	6a3b      	ldr	r3, [r7, #32]
 8003c02:	e853 3f00 	ldrex	r3, [r3]
 8003c06:	61fb      	str	r3, [r7, #28]
 8003c08:	69fb      	ldr	r3, [r7, #28]
 8003c0a:	f023 0301 	bic.w	r3, r3, #1
 8003c0e:	64bb      	str	r3, [r7, #72]	; 0x48
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	3314      	adds	r3, #20
 8003c16:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003c18:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003c1a:	62bb      	str	r3, [r7, #40]	; 0x28
 8003c1c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003c1e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003c20:	e841 2300 	strex	r3, r2, [r1]
 8003c24:	627b      	str	r3, [r7, #36]	; 0x24
 8003c26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	d1e5      	bne.n	8003bf8 <UART_EndRxTransfer+0x3c>
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c30:	2b01      	cmp	r3, #1
 8003c32:	d119      	bne.n	8003c68 <UART_EndRxTransfer+0xac>
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	330c      	adds	r3, #12
 8003c3a:	60fb      	str	r3, [r7, #12]
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	e853 3f00 	ldrex	r3, [r3]
 8003c42:	60bb      	str	r3, [r7, #8]
 8003c44:	68bb      	ldr	r3, [r7, #8]
 8003c46:	f023 0310 	bic.w	r3, r3, #16
 8003c4a:	647b      	str	r3, [r7, #68]	; 0x44
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	330c      	adds	r3, #12
 8003c52:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003c54:	61ba      	str	r2, [r7, #24]
 8003c56:	617b      	str	r3, [r7, #20]
 8003c58:	6979      	ldr	r1, [r7, #20]
 8003c5a:	69ba      	ldr	r2, [r7, #24]
 8003c5c:	e841 2300 	strex	r3, r2, [r1]
 8003c60:	613b      	str	r3, [r7, #16]
 8003c62:	693b      	ldr	r3, [r7, #16]
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d1e5      	bne.n	8003c34 <UART_EndRxTransfer+0x78>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	2220      	movs	r2, #32
 8003c6c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	2200      	movs	r2, #0
 8003c74:	631a      	str	r2, [r3, #48]	; 0x30
 8003c76:	bf00      	nop
 8003c78:	3754      	adds	r7, #84	; 0x54
 8003c7a:	46bd      	mov	sp, r7
 8003c7c:	bc80      	pop	{r7}
 8003c7e:	4770      	bx	lr

08003c80 <UART_DMAAbortOnError>:
 8003c80:	b580      	push	{r7, lr}
 8003c82:	b084      	sub	sp, #16
 8003c84:	af00      	add	r7, sp, #0
 8003c86:	6078      	str	r0, [r7, #4]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c8c:	60fb      	str	r3, [r7, #12]
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	2200      	movs	r2, #0
 8003c92:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	2200      	movs	r2, #0
 8003c98:	84da      	strh	r2, [r3, #38]	; 0x26
 8003c9a:	68f8      	ldr	r0, [r7, #12]
 8003c9c:	f7ff ff7a 	bl	8003b94 <HAL_UART_ErrorCallback>
 8003ca0:	bf00      	nop
 8003ca2:	3710      	adds	r7, #16
 8003ca4:	46bd      	mov	sp, r7
 8003ca6:	bd80      	pop	{r7, pc}

08003ca8 <UART_Transmit_IT>:
 8003ca8:	b480      	push	{r7}
 8003caa:	b085      	sub	sp, #20
 8003cac:	af00      	add	r7, sp, #0
 8003cae:	6078      	str	r0, [r7, #4]
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003cb6:	b2db      	uxtb	r3, r3
 8003cb8:	2b21      	cmp	r3, #33	; 0x21
 8003cba:	d13e      	bne.n	8003d3a <UART_Transmit_IT+0x92>
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	689b      	ldr	r3, [r3, #8]
 8003cc0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003cc4:	d114      	bne.n	8003cf0 <UART_Transmit_IT+0x48>
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	691b      	ldr	r3, [r3, #16]
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d110      	bne.n	8003cf0 <UART_Transmit_IT+0x48>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	6a1b      	ldr	r3, [r3, #32]
 8003cd2:	60fb      	str	r3, [r7, #12]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	881b      	ldrh	r3, [r3, #0]
 8003cd8:	461a      	mov	r2, r3
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003ce2:	605a      	str	r2, [r3, #4]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	6a1b      	ldr	r3, [r3, #32]
 8003ce8:	1c9a      	adds	r2, r3, #2
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	621a      	str	r2, [r3, #32]
 8003cee:	e008      	b.n	8003d02 <UART_Transmit_IT+0x5a>
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	6a1b      	ldr	r3, [r3, #32]
 8003cf4:	1c59      	adds	r1, r3, #1
 8003cf6:	687a      	ldr	r2, [r7, #4]
 8003cf8:	6211      	str	r1, [r2, #32]
 8003cfa:	781a      	ldrb	r2, [r3, #0]
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	605a      	str	r2, [r3, #4]
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003d06:	b29b      	uxth	r3, r3
 8003d08:	3b01      	subs	r3, #1
 8003d0a:	b29b      	uxth	r3, r3
 8003d0c:	687a      	ldr	r2, [r7, #4]
 8003d0e:	4619      	mov	r1, r3
 8003d10:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d10f      	bne.n	8003d36 <UART_Transmit_IT+0x8e>
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	68da      	ldr	r2, [r3, #12]
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003d24:	60da      	str	r2, [r3, #12]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	68da      	ldr	r2, [r3, #12]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003d34:	60da      	str	r2, [r3, #12]
 8003d36:	2300      	movs	r3, #0
 8003d38:	e000      	b.n	8003d3c <UART_Transmit_IT+0x94>
 8003d3a:	2302      	movs	r3, #2
 8003d3c:	4618      	mov	r0, r3
 8003d3e:	3714      	adds	r7, #20
 8003d40:	46bd      	mov	sp, r7
 8003d42:	bc80      	pop	{r7}
 8003d44:	4770      	bx	lr

08003d46 <UART_EndTransmit_IT>:
 8003d46:	b580      	push	{r7, lr}
 8003d48:	b082      	sub	sp, #8
 8003d4a:	af00      	add	r7, sp, #0
 8003d4c:	6078      	str	r0, [r7, #4]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	68da      	ldr	r2, [r3, #12]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003d5c:	60da      	str	r2, [r3, #12]
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	2220      	movs	r2, #32
 8003d62:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d66:	6878      	ldr	r0, [r7, #4]
 8003d68:	f7ff ff02 	bl	8003b70 <HAL_UART_TxCpltCallback>
 8003d6c:	2300      	movs	r3, #0
 8003d6e:	4618      	mov	r0, r3
 8003d70:	3708      	adds	r7, #8
 8003d72:	46bd      	mov	sp, r7
 8003d74:	bd80      	pop	{r7, pc}

08003d76 <UART_Receive_IT>:
 8003d76:	b580      	push	{r7, lr}
 8003d78:	b08c      	sub	sp, #48	; 0x30
 8003d7a:	af00      	add	r7, sp, #0
 8003d7c:	6078      	str	r0, [r7, #4]
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8003d84:	b2db      	uxtb	r3, r3
 8003d86:	2b22      	cmp	r3, #34	; 0x22
 8003d88:	f040 80ae 	bne.w	8003ee8 <UART_Receive_IT+0x172>
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	689b      	ldr	r3, [r3, #8]
 8003d90:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003d94:	d117      	bne.n	8003dc6 <UART_Receive_IT+0x50>
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	691b      	ldr	r3, [r3, #16]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d113      	bne.n	8003dc6 <UART_Receive_IT+0x50>
 8003d9e:	2300      	movs	r3, #0
 8003da0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003da6:	62bb      	str	r3, [r7, #40]	; 0x28
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	685b      	ldr	r3, [r3, #4]
 8003dae:	b29b      	uxth	r3, r3
 8003db0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003db4:	b29a      	uxth	r2, r3
 8003db6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003db8:	801a      	strh	r2, [r3, #0]
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003dbe:	1c9a      	adds	r2, r3, #2
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	629a      	str	r2, [r3, #40]	; 0x28
 8003dc4:	e026      	b.n	8003e14 <UART_Receive_IT+0x9e>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003dca:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003dcc:	2300      	movs	r3, #0
 8003dce:	62bb      	str	r3, [r7, #40]	; 0x28
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	689b      	ldr	r3, [r3, #8]
 8003dd4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003dd8:	d007      	beq.n	8003dea <UART_Receive_IT+0x74>
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	689b      	ldr	r3, [r3, #8]
 8003dde:	2b00      	cmp	r3, #0
 8003de0:	d10a      	bne.n	8003df8 <UART_Receive_IT+0x82>
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	691b      	ldr	r3, [r3, #16]
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d106      	bne.n	8003df8 <UART_Receive_IT+0x82>
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	b2da      	uxtb	r2, r3
 8003df2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003df4:	701a      	strb	r2, [r3, #0]
 8003df6:	e008      	b.n	8003e0a <UART_Receive_IT+0x94>
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	685b      	ldr	r3, [r3, #4]
 8003dfe:	b2db      	uxtb	r3, r3
 8003e00:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003e04:	b2da      	uxtb	r2, r3
 8003e06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e08:	701a      	strb	r2, [r3, #0]
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e0e:	1c5a      	adds	r2, r3, #1
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	629a      	str	r2, [r3, #40]	; 0x28
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e18:	b29b      	uxth	r3, r3
 8003e1a:	3b01      	subs	r3, #1
 8003e1c:	b29b      	uxth	r3, r3
 8003e1e:	687a      	ldr	r2, [r7, #4]
 8003e20:	4619      	mov	r1, r3
 8003e22:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d15d      	bne.n	8003ee4 <UART_Receive_IT+0x16e>
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	68da      	ldr	r2, [r3, #12]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f022 0220 	bic.w	r2, r2, #32
 8003e36:	60da      	str	r2, [r3, #12]
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	68da      	ldr	r2, [r3, #12]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003e46:	60da      	str	r2, [r3, #12]
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	695a      	ldr	r2, [r3, #20]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f022 0201 	bic.w	r2, r2, #1
 8003e56:	615a      	str	r2, [r3, #20]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	2220      	movs	r2, #32
 8003e5c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	2200      	movs	r2, #0
 8003e64:	635a      	str	r2, [r3, #52]	; 0x34
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e6a:	2b01      	cmp	r3, #1
 8003e6c:	d135      	bne.n	8003eda <UART_Receive_IT+0x164>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	2200      	movs	r2, #0
 8003e72:	631a      	str	r2, [r3, #48]	; 0x30
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	330c      	adds	r3, #12
 8003e7a:	617b      	str	r3, [r7, #20]
 8003e7c:	697b      	ldr	r3, [r7, #20]
 8003e7e:	e853 3f00 	ldrex	r3, [r3]
 8003e82:	613b      	str	r3, [r7, #16]
 8003e84:	693b      	ldr	r3, [r7, #16]
 8003e86:	f023 0310 	bic.w	r3, r3, #16
 8003e8a:	627b      	str	r3, [r7, #36]	; 0x24
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	330c      	adds	r3, #12
 8003e92:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003e94:	623a      	str	r2, [r7, #32]
 8003e96:	61fb      	str	r3, [r7, #28]
 8003e98:	69f9      	ldr	r1, [r7, #28]
 8003e9a:	6a3a      	ldr	r2, [r7, #32]
 8003e9c:	e841 2300 	strex	r3, r2, [r1]
 8003ea0:	61bb      	str	r3, [r7, #24]
 8003ea2:	69bb      	ldr	r3, [r7, #24]
 8003ea4:	2b00      	cmp	r3, #0
 8003ea6:	d1e5      	bne.n	8003e74 <UART_Receive_IT+0xfe>
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	f003 0310 	and.w	r3, r3, #16
 8003eb2:	2b10      	cmp	r3, #16
 8003eb4:	d10a      	bne.n	8003ecc <UART_Receive_IT+0x156>
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	60fb      	str	r3, [r7, #12]
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	60fb      	str	r3, [r7, #12]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	685b      	ldr	r3, [r3, #4]
 8003ec8:	60fb      	str	r3, [r7, #12]
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003ed0:	4619      	mov	r1, r3
 8003ed2:	6878      	ldr	r0, [r7, #4]
 8003ed4:	f7ff fe67 	bl	8003ba6 <HAL_UARTEx_RxEventCallback>
 8003ed8:	e002      	b.n	8003ee0 <UART_Receive_IT+0x16a>
 8003eda:	6878      	ldr	r0, [r7, #4]
 8003edc:	f7ff fe51 	bl	8003b82 <HAL_UART_RxCpltCallback>
 8003ee0:	2300      	movs	r3, #0
 8003ee2:	e002      	b.n	8003eea <UART_Receive_IT+0x174>
 8003ee4:	2300      	movs	r3, #0
 8003ee6:	e000      	b.n	8003eea <UART_Receive_IT+0x174>
 8003ee8:	2302      	movs	r3, #2
 8003eea:	4618      	mov	r0, r3
 8003eec:	3730      	adds	r7, #48	; 0x30
 8003eee:	46bd      	mov	sp, r7
 8003ef0:	bd80      	pop	{r7, pc}
	...

08003ef4 <UART_SetConfig>:
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	b084      	sub	sp, #16
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	6078      	str	r0, [r7, #4]
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	691b      	ldr	r3, [r3, #16]
 8003f02:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	68da      	ldr	r2, [r3, #12]
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	430a      	orrs	r2, r1
 8003f10:	611a      	str	r2, [r3, #16]
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	689a      	ldr	r2, [r3, #8]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	691b      	ldr	r3, [r3, #16]
 8003f1a:	431a      	orrs	r2, r3
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	695b      	ldr	r3, [r3, #20]
 8003f20:	4313      	orrs	r3, r2
 8003f22:	60bb      	str	r3, [r7, #8]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	68db      	ldr	r3, [r3, #12]
 8003f2a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003f2e:	f023 030c 	bic.w	r3, r3, #12
 8003f32:	687a      	ldr	r2, [r7, #4]
 8003f34:	6812      	ldr	r2, [r2, #0]
 8003f36:	68b9      	ldr	r1, [r7, #8]
 8003f38:	430b      	orrs	r3, r1
 8003f3a:	60d3      	str	r3, [r2, #12]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	695b      	ldr	r3, [r3, #20]
 8003f42:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	699a      	ldr	r2, [r3, #24]
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	430a      	orrs	r2, r1
 8003f50:	615a      	str	r2, [r3, #20]
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	4a2c      	ldr	r2, [pc, #176]	; (8004008 <UART_SetConfig+0x114>)
 8003f58:	4293      	cmp	r3, r2
 8003f5a:	d103      	bne.n	8003f64 <UART_SetConfig+0x70>
 8003f5c:	f7fe ff02 	bl	8002d64 <HAL_RCC_GetPCLK2Freq>
 8003f60:	60f8      	str	r0, [r7, #12]
 8003f62:	e002      	b.n	8003f6a <UART_SetConfig+0x76>
 8003f64:	f7fe feea 	bl	8002d3c <HAL_RCC_GetPCLK1Freq>
 8003f68:	60f8      	str	r0, [r7, #12]
 8003f6a:	68fa      	ldr	r2, [r7, #12]
 8003f6c:	4613      	mov	r3, r2
 8003f6e:	009b      	lsls	r3, r3, #2
 8003f70:	4413      	add	r3, r2
 8003f72:	009a      	lsls	r2, r3, #2
 8003f74:	441a      	add	r2, r3
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	009b      	lsls	r3, r3, #2
 8003f7c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f80:	4a22      	ldr	r2, [pc, #136]	; (800400c <UART_SetConfig+0x118>)
 8003f82:	fba2 2303 	umull	r2, r3, r2, r3
 8003f86:	095b      	lsrs	r3, r3, #5
 8003f88:	0119      	lsls	r1, r3, #4
 8003f8a:	68fa      	ldr	r2, [r7, #12]
 8003f8c:	4613      	mov	r3, r2
 8003f8e:	009b      	lsls	r3, r3, #2
 8003f90:	4413      	add	r3, r2
 8003f92:	009a      	lsls	r2, r3, #2
 8003f94:	441a      	add	r2, r3
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	685b      	ldr	r3, [r3, #4]
 8003f9a:	009b      	lsls	r3, r3, #2
 8003f9c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003fa0:	4b1a      	ldr	r3, [pc, #104]	; (800400c <UART_SetConfig+0x118>)
 8003fa2:	fba3 0302 	umull	r0, r3, r3, r2
 8003fa6:	095b      	lsrs	r3, r3, #5
 8003fa8:	2064      	movs	r0, #100	; 0x64
 8003faa:	fb00 f303 	mul.w	r3, r0, r3
 8003fae:	1ad3      	subs	r3, r2, r3
 8003fb0:	011b      	lsls	r3, r3, #4
 8003fb2:	3332      	adds	r3, #50	; 0x32
 8003fb4:	4a15      	ldr	r2, [pc, #84]	; (800400c <UART_SetConfig+0x118>)
 8003fb6:	fba2 2303 	umull	r2, r3, r2, r3
 8003fba:	095b      	lsrs	r3, r3, #5
 8003fbc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003fc0:	4419      	add	r1, r3
 8003fc2:	68fa      	ldr	r2, [r7, #12]
 8003fc4:	4613      	mov	r3, r2
 8003fc6:	009b      	lsls	r3, r3, #2
 8003fc8:	4413      	add	r3, r2
 8003fca:	009a      	lsls	r2, r3, #2
 8003fcc:	441a      	add	r2, r3
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	685b      	ldr	r3, [r3, #4]
 8003fd2:	009b      	lsls	r3, r3, #2
 8003fd4:	fbb2 f2f3 	udiv	r2, r2, r3
 8003fd8:	4b0c      	ldr	r3, [pc, #48]	; (800400c <UART_SetConfig+0x118>)
 8003fda:	fba3 0302 	umull	r0, r3, r3, r2
 8003fde:	095b      	lsrs	r3, r3, #5
 8003fe0:	2064      	movs	r0, #100	; 0x64
 8003fe2:	fb00 f303 	mul.w	r3, r0, r3
 8003fe6:	1ad3      	subs	r3, r2, r3
 8003fe8:	011b      	lsls	r3, r3, #4
 8003fea:	3332      	adds	r3, #50	; 0x32
 8003fec:	4a07      	ldr	r2, [pc, #28]	; (800400c <UART_SetConfig+0x118>)
 8003fee:	fba2 2303 	umull	r2, r3, r2, r3
 8003ff2:	095b      	lsrs	r3, r3, #5
 8003ff4:	f003 020f 	and.w	r2, r3, #15
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	440a      	add	r2, r1
 8003ffe:	609a      	str	r2, [r3, #8]
 8004000:	bf00      	nop
 8004002:	3710      	adds	r7, #16
 8004004:	46bd      	mov	sp, r7
 8004006:	bd80      	pop	{r7, pc}
 8004008:	40013800 	.word	0x40013800
 800400c:	51eb851f 	.word	0x51eb851f

08004010 <__libc_init_array>:
 8004010:	b570      	push	{r4, r5, r6, lr}
 8004012:	2600      	movs	r6, #0
 8004014:	4d0c      	ldr	r5, [pc, #48]	; (8004048 <__libc_init_array+0x38>)
 8004016:	4c0d      	ldr	r4, [pc, #52]	; (800404c <__libc_init_array+0x3c>)
 8004018:	1b64      	subs	r4, r4, r5
 800401a:	10a4      	asrs	r4, r4, #2
 800401c:	42a6      	cmp	r6, r4
 800401e:	d109      	bne.n	8004034 <__libc_init_array+0x24>
 8004020:	f000 f822 	bl	8004068 <_init>
 8004024:	2600      	movs	r6, #0
 8004026:	4d0a      	ldr	r5, [pc, #40]	; (8004050 <__libc_init_array+0x40>)
 8004028:	4c0a      	ldr	r4, [pc, #40]	; (8004054 <__libc_init_array+0x44>)
 800402a:	1b64      	subs	r4, r4, r5
 800402c:	10a4      	asrs	r4, r4, #2
 800402e:	42a6      	cmp	r6, r4
 8004030:	d105      	bne.n	800403e <__libc_init_array+0x2e>
 8004032:	bd70      	pop	{r4, r5, r6, pc}
 8004034:	f855 3b04 	ldr.w	r3, [r5], #4
 8004038:	4798      	blx	r3
 800403a:	3601      	adds	r6, #1
 800403c:	e7ee      	b.n	800401c <__libc_init_array+0xc>
 800403e:	f855 3b04 	ldr.w	r3, [r5], #4
 8004042:	4798      	blx	r3
 8004044:	3601      	adds	r6, #1
 8004046:	e7f2      	b.n	800402e <__libc_init_array+0x1e>
 8004048:	080040b8 	.word	0x080040b8
 800404c:	080040b8 	.word	0x080040b8
 8004050:	080040b8 	.word	0x080040b8
 8004054:	080040bc 	.word	0x080040bc

08004058 <memset>:
 8004058:	4603      	mov	r3, r0
 800405a:	4402      	add	r2, r0
 800405c:	4293      	cmp	r3, r2
 800405e:	d100      	bne.n	8004062 <memset+0xa>
 8004060:	4770      	bx	lr
 8004062:	f803 1b01 	strb.w	r1, [r3], #1
 8004066:	e7f9      	b.n	800405c <memset+0x4>

08004068 <_init>:
 8004068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800406a:	bf00      	nop
 800406c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800406e:	bc08      	pop	{r3}
 8004070:	469e      	mov	lr, r3
 8004072:	4770      	bx	lr

08004074 <_fini>:
 8004074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004076:	bf00      	nop
 8004078:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800407a:	bc08      	pop	{r3}
 800407c:	469e      	mov	lr, r3
 800407e:	4770      	bx	lr
